{"version":3,"sources":["redux/actionTypes.js","redux/updates.js","redux/user.js","redux/forms.js","redux/admin.js","redux/ActionCreators.js","components/Navigation.jsx","components/Footer.jsx","components/Loading.jsx","components/NotFound.jsx","pages/Home/Banner.jsx","pages/Home/HomeCard.jsx","pages/Home/index.jsx","components/Extras.jsx","components/ProfileComponents.jsx","pages/Profile/EditEducation.jsx","pages/Profile/EditStudentDetails.jsx","pages/Profile/EditStaffDetails.jsx","pages/Profile/index.jsx","shared/baseUrl.js","components/Search.jsx","pages/Projects/index.jsx","pages/Authenticate/Login.jsx","pages/Authenticate/LoginOld.jsx","pages/Authenticate/SignUp.jsx","pages/AddAchievement/index.jsx","pages/AddProject/index.jsx","components/Tables.jsx","pages/MyAchievements/index.jsx","pages/MyProjects/index.jsx","pages/Achievement/index.jsx","pages/Project/index.jsx","pages/PendingProjects/PendingProjectsTable.jsx","pages/PendingProjects/index.jsx","pages/PendingAchievements/PendingAchievementsTable.jsx","pages/PendingAchievements/index.jsx","pages/Achievements/index.jsx","pages/About/index.jsx","pages/UserProfile/StudentProfile.jsx","pages/UserProfile/StaffProfile.jsx","pages/UserProfile/ProfilePieChart.jsx","pages/UserProfile/index.jsx","pages/EditProject/index.jsx","pages/EditAchievement/index.jsx","pages/EditBanners/PostBanner.jsx","pages/EditBanners/RenderBanners.jsx","pages/EditBanners/index.jsx","App.jsx","redux/configureStore.js","reportWebVitals.js","index.jsx"],"names":["UPDATES_LOADING","UPDATES_FAILED","ADD_UPDATES","ADD_BANNERS","LOGGING_IN","LOGIN_FAILED","LOAD_KEY","LOAD_PROFILE","LOAD_PROFILE_ACHIEVEMENTS","LOAD_PROFILE_PROJECTS","CLEAR_USER_DATA","LOAD_PROFESSORS_LIST","PROFESSORS_LIST_LOADING","LOAD_STUDENTS_LIST","STUDENTS_LIST_LOADING","LOAD_INSTITUTES_LIST","INSTITUTES_LIST_LOADING","LOAD_TAGS_LIST","TAGS_LIST_LOADING","ADD_TAG_LIST","ADD_ACHIEVEMENT_POSTING","ADD_ACHIEVEMENT_POSTING_ERROR","ADD_ACHIEVEMENT_POSTING_SUCCESS","ADD_PROJECT_POSTING","ADD_PROJECT_POSTING_ERROR","ADD_PROJECT_POSTING_SUCCESS","ADD_PENDING_ACHIEVEMENTS","PENDING_ACHIEVEMENTS_LOADING","PENDING_ACHIEVEMENTS_LOADING_ERROR","ADD_PENDING_PROJECTS","PENDING_PROJECTS_LOADING","PENDING_PROJECTS_LOADING_ERROR","PROJECT_APPROVING","PROJECT_REJECTING","PROJECT_DELETING","PROJECT_APPROVED","PROJECT_REJECTED","PROJECT_DELETED","PROJECT_ERROR","ACHIEVEMENT_APPROVING","ACHIEVEMENT_REJECTING","ACHIEVEMENT_DELETING","ACHIEVEMENT_APPROVED","ACHIEVEMENT_REJECTED","ACHIEVEMENT_ERROR","ACHIEVEMENT_DELETED","Updates","state","isLoading","errMess","updates","banners","undefined","action","type","ActionTypes","payload","initialState","authorized","sessionStorage","getItem","loggingIn","error","token","admin","profileLoaded","profile","achievements","projects","User","objIndex","newState","setItem","clear","findIndex","obj","id","deleting","deleted","console","log","professorsList","professorsLoading","studentsList","studentsLoading","institutesList","institutesLoading","tagsList","tagsLoading","awardCategory","title","addAchievementPosting","addAchievementPostingError","addAchievementPostingMessage","addProjectPosting","addProjectPostingError","addProjectPostingMessages","Forms","addProjectPostingMessage","pendingProjects","pendingProjectsLoading","pendingProjectsLoadingError","pendingAchievements","pendingAchievementsLoading","pendingAchievementsLoadingError","Admin","approving","approved","rejecting","fetchBanners","key","setBanners","setLoading","setErrorMessage","fetch","baseUrl","method","headers","then","response","ok","Error","json","catch","err","message","loadKey","login","username","password","dispatch","body","JSON","stringify","loginFailed","loginOSA","Cookies","get","value","fetchUserProfile","token_head","fetchUserAchievements","fetchUserProjects","updatesLoading","addUpdates","fetchStudentsList","studentsListLoading","loadStudentsList","students","loadProfessorsList","professors","professorsListLoading","fetchInstitutesList","loadInstitutesList","institutes","fetchTagsList","loadTagsList","tags","postTag","tag","callback","errorFunction","fetchProject","projectId","setProjectDetails","fetchAchievement","achievementId","setAchievementDetails","addAchievementPostingSuccess","addFileToAchievement","aId","file","form_data","FormData","append","addProjectPostingSuccess","fetchPendingProjects","details","unapproved","fetchPendingAchievements","projectError","approveProject","userId","projectApproving","approvedBy","projectApproved","rejectProject","feedback","projectRejecting","projectRejected","deleteProject","projectDeleting","projectDeleted","achievementError","approveAchievement","achievementApproving","achievementApproved","rejectAchievement","achievementRejecting","achievementRejected","deleteAchievement","achievementDeleting","achievementDeleted","UserIcon","logout","UncontrolledDropdown","inNavbar","DropdownToggle","className","nav","caret","width","height","src","alt","DropdownMenu","right","to","DropdownItem","divider","onClick","withRouter","connect","user","props","useState","collapsed","setCollapsed","setAdmin","useEffect","designation","Navbar","light","expand","NavbarBrand","href","NavbarText","NavbarToggler","Collapse","isOpen","navbar","Nav","NavItem","Footer","Container","fluid","Row","Col","Loading","size","margin","color","NotFound","xs","style","maxWidth","maxHeight","Arrow","icon","class","BannerCard","image","plot","link","Button","addBanners","loading","errorMsg","setErrorMsg","slidesPerPage","centered","arrowLeft","arrowRight","addArrowClickHandler","infinite","autoPlay","animationSpeed","breakpoints","768","map","banner","description","UpdatesCard","heading","buttonText","buttonLink","length","update","Home","this","publications","fetchUpdates","equal","sm","lg","xxl","staff","Component","staff_achievements","student_achievements","listOfTitles","listOfDegrees","ApprovedBadge","toLowerCase","Badge","pill","RejectionModal","modalOpen","setModalOpen","onReject","reason","setReason","toggle","Modal","ModalHeader","ModalBody","Input","onChange","e","target","name","placeholder","ModalFooter","RenderUser","outline","first_name","last_name","RenderEducation","institution","degree","year","captializeFirstWord","string","replace","letter","toUpperCase","AddInstitutionModal","isModalOpen","setIsModalOpen","setInstitution","city","setCity","saving","setSaving","savingError","setSavingError","savingMsg","setSavingMsg","disabled","setError","setMsg","postInstitution","Field","md","FieldInput","setValue","FieldInputDropDown","values","category","InputSocialMedia","instagram","setInstagram","facebook","setFacebook","github","setGithub","twitter","setTwitter","InputGroup","InputGroupText","bsSize","SocialMedia","pathname","AchievementsTable","Table","hover","responsive","achievement","index","indexOf","scope","Date","achievedDate","toLocaleString","day","month","ProjectsTable","project","field","domain","forms","institute","setInstitute","setDegree","setYear","educationList","education","find","ins","setEducationList","filter","edu","parseInt","rollNo","setRollNo","batch","setBatch","major","setMajor","gpa","setGpa","bio","setBio","setEducation","studId","setStudId","savingMessage","setSavingMessage","res","GPA","studObject","patchStudentDetials","empId","setEmpId","joiningDate","setJoiningDate","department","setDepartment","setTitle","setDesignation","staffId","setStaffId","employeeId","associatedSince","staffObject","patchStaffDetials","patchUserProfile","studObj","setSavingSuccess","profile_pic","setName","email","setEmail","phone","setPhone","showemail","setShowemail","showphone","setShowphone","group","setGroup","dob","setdob","gender","setGender","address","setAddress","profilepic","setProfilepic","setFile","savingSuccess","phone_number","show_email","show_phone","files","reader","FileReader","readAsDataURL","onloadend","result","FormGroup","check","inline","checked","Label","for","e_mail","SearchBar","query","setQuery","onSearch","InputGroupAddon","addonType","aria-hidden","event","fetchProjects","setProjects","Results","addedBy","dateCreated","errorMessage","offset","Search","rel","LoginOld","handleSubmit","bind","handleUsernameChange","handlePasswordChange","setState","Form","SignUp","dateofachievement","team","teamInput","teamAdding","teamInputErr","tagsInput","tagsAdding","tagsInputErr","proof","progress","AddAchievement","edit","achievementDetails","teamMembers","handleInputChange","addTeamMember","addTag","removeFromList","clearState","handleFileChange","addAchievementPostingMessageClear","patchAchievement","postNewAchievement","preventDefault","studentObj","student","user__email","validation","input","split","s","charAt","substring","join","tagObj","processing","capitalize","listName","item","list","ind","splice","onSubmit","htmlFor","member","CustomInput","stateObj","clearFunction","bodyObj","startdate","enddate","mentors","mentorsInput","mentorAdding","mentorsInputErr","url","AddProject","projectDetails","startDate","endDate","members","addMentor","addProjectPostingMessageClear","patchProject","postNewProject","fetchProfessorsList","profObj","prof","mentor","arrayOfAchievements","arrayofProjects","useParams","technical","setProjectId","projectTitle","setProjectTitle","setAchievementId","achievementTitle","setAchievementTitle","fetchAchievements","setAchievements","About","StudentProfile","studentId","setStudObj","StaffProfile","staffObj","setStaffObj","data","COLORS","renderActiveShape","RADIAN","Math","PI","cx","cy","midAngle","innerRadius","outerRadius","startAngle","endAngle","fill","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","x","y","dy","Sector","d","stroke","r","ProfilePieChart","activeIndex","setActiveIndex","onPieEnter","useCallback","_","setWidth","div","node","getBoundingClientRect","height_","width_","colors","ref","PieChart","Pie","activeShape","dataKey","onMouseEnter","entry","Cell","setProfile","profileId","fetchProfile","countItems","approvedValue","t","posting","setPosting","setMessage","desc","setDesc","setLink","bannerObj","addBanner","ke","postBanner","RenderBanners","deleteBanner","Image","bannerId","deleteFromList","deleteBannerFromServer","ban","store","createStore","combineReducers","applyMiddleware","thunk","logger","App","basename","minHeight","path","exact","component","Profile","UserProfile","Projects","Achievements","Login","MyAchievements","MyProjects","Achievement","Project","EditProject","EditAchievement","PendingProjects","PendingAchievements","EditBanners","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5ce00d1e.chunk.js","sourcesContent":["/**\n * Define action types here\n *\n * Action Types are string constants to indentify different actions\n * in the reducers of Redux Store\n */\n\nexport const UPDATES_LOADING = 'UPDATES_LOADING';\nexport const UPDATES_FAILED = 'UPDATES_FAILED';\nexport const ADD_UPDATES = 'ADD_UPDATES';\nexport const ADD_BANNERS = 'ADD_BANNERS';\n\nexport const LOGIN = 'LOGIN';\nexport const LOGGING_IN = 'LOGGING_IN';\nexport const LOGIN_FAILED = 'LOGIN_FAILED';\n\nexport const LOAD_KEY = 'LOAD_KEY';\nexport const LOAD_PROFILE = 'LOAD_PROFILE';\nexport const LOAD_PROFILE_ACHIEVEMENTS = 'LOAD_PROFILE_ACHIEVEMENTS';\nexport const LOAD_PROFILE_PROJECTS = 'LOAD_PROFILE_PROJECTS';\nexport const CLEAR_USER_DATA = 'CLEAR_USER_DATA';\n\nexport const LOAD_PROFESSORS_LIST = 'LOAD_PROFESSORS_LIST';\nexport const PROFESSORS_LIST_LOADING = 'PROFESSORS_LIST_LOADING';\nexport const LOAD_STUDENTS_LIST = 'LOAD_STUDENTS_LIST';\nexport const STUDENTS_LIST_LOADING = 'STUDENTS_LIST_LOADING';\nexport const LOAD_INSTITUTES_LIST = 'LOAD_INSTITUTES_LIST';\nexport const INSTITUTES_LIST_LOADING = 'INSTITUTES_LIST_LOADING';\nexport const LOAD_TAGS_LIST = 'LOAD_TAGS_LIST';\nexport const TAGS_LIST_LOADING = 'TAGS_LIST_LOADING';\nexport const ADD_TAG_LIST = 'ADD_TAG_LIST';\n\nexport const ADD_ACHIEVEMENT_POSTING = 'ADD_ACHIEVEMENT_POSTING';\nexport const ADD_ACHIEVEMENT_POSTING_ERROR = 'ADD_ACHIEVEMENT_POSTING_ERROR';\nexport const ADD_ACHIEVEMENT_POSTING_SUCCESS = 'ADD_ACHIEVEMENT_POSTING_SUCCESS';\n\nexport const ADD_PROJECT_POSTING = 'ADD_PROJECT_POSTING';\nexport const ADD_PROJECT_POSTING_ERROR = 'ADD_PROJECT_POSTING_ERROR';\nexport const ADD_PROJECT_POSTING_SUCCESS = 'ADD_PROJECT_POSTING_SUCCESS';\n\nexport const ADD_PENDING_ACHIEVEMENTS = 'ADD_PENDING_ACHIEVEMENTS';\nexport const PENDING_ACHIEVEMENTS_LOADING = 'PENDING_ACHIEVEMENTS_LOADING';\nexport const PENDING_ACHIEVEMENTS_LOADING_ERROR = 'PENDING_ACHIEVEMENTS_LOADING_ERROR';\n\nexport const ADD_PENDING_PROJECTS = 'ADD_PENDING_PROJECTS';\nexport const PENDING_PROJECTS_LOADING = 'PENDING_PROJECTS_LOADING';\nexport const PENDING_PROJECTS_LOADING_ERROR = 'PENDING_PROJECTS_LOADING_ERROR';\n\nexport const PROJECT_APPROVING = 'PROJECT_APPROVING';\nexport const PROJECT_REJECTING = 'PROJECT_REJECTING';\nexport const PROJECT_DELETING = 'PROJECT_DELETING';\nexport const PROJECT_APPROVED = 'PROJECT_APPROVED';\nexport const PROJECT_REJECTED = 'PROJECT_REJECTED';\nexport const PROJECT_DELETED = 'PROJECT_DELETED';\nexport const PROJECT_ERROR = 'PROJECT_ERROR';\n\nexport const ACHIEVEMENT_APPROVING = 'ACHIEVEMENT_APPROVING';\nexport const ACHIEVEMENT_REJECTING = 'ACHIEVEMENT_REJECTING';\nexport const ACHIEVEMENT_DELETING = 'ACHIEVEMENT_DELETING';\nexport const ACHIEVEMENT_APPROVED = 'ACHIEVEMENT_APPROVED';\nexport const ACHIEVEMENT_REJECTED = 'ACHIEVEMENT_REJECTED';\nexport const ACHIEVEMENT_ERROR = 'ACHIEVEMENT_ERROR';\nexport const ACHIEVEMENT_DELETED = 'ACHIEVEMENT_DELETED';\n","import * as ActionTypes from './actionTypes';\n\nexport const Updates = (state = {\n        isLoading: false,\n        errMess: null,\n        updates: {},\n        banners: undefined\n    }, action) => {\n    switch(action.type) {\n        case ActionTypes.ADD_UPDATES:\n            return {...state, isLoading: false, errMess: null, updates: action.payload}\n\n        case ActionTypes.UPDATES_LOADING:\n            return {...state, isLoading: action.payload, errMess: null}\n\n        case ActionTypes.UPDATES_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, updates: {}}\n\n        case ActionTypes.ADD_BANNERS:\n            return {...state, banners: action.payload}\n\n        default:\n            return state;\n    }\n}","import * as ActionTypes from './actionTypes';\n\nconst initialState = {\n    authorized: sessionStorage.getItem('key') ? true : false,\n    loggingIn: false,\n    error: \"\",\n    token: sessionStorage.getItem('key'),\n    admin: false,\n\n    profileLoaded: false,\n    profile: {},\n    achievements: null,\n    projects: null,\n}\n\nexport const User = (state = initialState, action) => {\n    var newState = {...state}\n    var objIndex\n    switch(action.type) {\n        case ActionTypes.LOAD_KEY:\n            sessionStorage.setItem('key', action.payload);\n            return {...state, token: action.payload, authorized: true};\n        case ActionTypes.LOAD_PROFILE:\n            return {...state, profileLoaded: true, profile: action.payload}\n        case ActionTypes.LOAD_PROFILE_ACHIEVEMENTS:\n            return {...state, achievements: action.payload}\n        case ActionTypes.LOAD_PROFILE_PROJECTS:\n            return {...state, projects: action.payload}\n        case ActionTypes.CLEAR_USER_DATA:\n            sessionStorage.clear();\n            initialState.authorized = false;\n            initialState.token = undefined;\n            return initialState;\n        case ActionTypes.LOGIN_FAILED:\n            return {...state, error: action.payload}\n        case ActionTypes.LOGGING_IN:\n            return {...state, loggingIn: action.payload}\n        case ActionTypes.ACHIEVEMENT_DELETING:\n            if(!state.achievements)\n                return state\n            newState.achievements = [...newState.achievements]\n            objIndex = newState.achievements.findIndex((obj => obj.id === action.payload));\n            if(objIndex < 0)\n                return newState\n            newState.achievements[objIndex].deleting = true\n            newState.achievements[objIndex].error = ''\n            return newState\n        case ActionTypes.ACHIEVEMENT_DELETED:\n            if(!state.achievements)\n                return state\n            newState.achievements = [...newState.achievements]\n            objIndex = newState.achievements.findIndex((obj => obj.id === action.payload));\n            if(objIndex < 0)\n                return newState\n            newState.achievements[objIndex].deleting = false\n            newState.achievements[objIndex].deleted = true\n            newState.achievements[objIndex].error = ''\n            return newState\n        case ActionTypes.PROJECT_DELETING:\n            if(!state.projects)\n                return state\n            newState.projects = [...newState.projects]\n            objIndex = newState.projects.findIndex((obj => obj.id === action.payload));\n            if(objIndex < 0)\n                return newState\n            console.log(newState)\n            newState.projects[objIndex].deleting = true\n            newState.projects[objIndex].error = ''\n            return newState\n        case ActionTypes.PROJECT_DELETED:\n            if(!state.projects)\n                return state\n            newState.projects = [...newState.projects]\n            objIndex = newState.achievements.findIndex((obj => obj.id === action.payload));\n            if(objIndex < 0)\n                return newState\n            newState.projects[objIndex].deleting = false\n            newState.projects[objIndex].deleted = true\n            newState.projects[objIndex].error = ''\n            return newState\n        default:\n            return state;\n    }\n}","import * as ActionTypes from './actionTypes';\n\nconst initialState = {\n    professorsList: null,\n    professorsLoading: false,\n\n    studentsList: null,\n    studentsLoading: false,\n\n    institutesList: null,\n    institutesLoading: false,\n\n    tagsList: null,\n    tagsLoading: false,\n\n    awardCategory: [\n        { id: 0, title: 'Not Applicable' },\n        { id: 1, title: 'Intra College' },\n        { id: 2, title: 'Inter College' },\n        { id: 3, title: 'District Level' },\n        { id: 4, title: 'State Level' },\n        { id: 5, title: 'National Level' },\n        { id: 6, title: 'International Level' },\n    ],\n\n    addAchievementPosting: false,\n    addAchievementPostingError: false,\n    addAchievementPostingMessage: '',\n\n    addProjectPosting: false,\n    addProjectPostingError: false,\n    addProjectPostingMessages: ''\n}\n\nexport const Forms = (state = initialState, action) => {\n    switch(action.type) {\n        case ActionTypes.PROFESSORS_LIST_LOADING:\n            return {...state, professorsLoading: action.payload}\n        case ActionTypes.LOAD_PROFESSORS_LIST:\n            return {...state, professorsList: action.payload, professorsLoading: false};\n        case ActionTypes.STUDENTS_LIST_LOADING:\n            return {...state, studentsLoading: action.payload};\n        case ActionTypes.LOAD_STUDENTS_LIST:\n            return {...state, studentsList: action.payload, studentsLoading: false};\n        case ActionTypes.INSTITUTES_LIST_LOADING:\n            return {...state, institutesLoading: action.payload};\n        case ActionTypes.LOAD_INSTITUTES_LIST:\n            return {...state, institutesList: action.payload, institutesLoading: false};\n        case ActionTypes.TAGS_LIST_LOADING:\n            return {...state, tagsLoading: action.payload};\n        case ActionTypes.LOAD_TAGS_LIST:\n            return {...state, tagsList: action.payload, tagsLoading: false};\n        case ActionTypes.ADD_TAG_LIST:\n            return {...state, tagsList: [...state.tagsList, action.payload]};\n        case ActionTypes.ADD_ACHIEVEMENT_POSTING:\n            return {...state, addAchievementPosting: action.payload};\n        case ActionTypes.ADD_ACHIEVEMENT_POSTING_ERROR:\n            return {...state, addAchievementPostingError: true, addAchievementPostingMessage: action.payload, addAchievementPosting: false};\n        case ActionTypes.ADD_ACHIEVEMENT_POSTING_SUCCESS:\n            return {...state, addAchievementPostingError: false, addAchievementPostingMessage: action.payload, addAchievementPosting: false};\n        case ActionTypes.ADD_PROJECT_POSTING:\n            return {...state, addProjectPosting: action.payload};\n        case ActionTypes.ADD_PROJECT_POSTING_ERROR:\n            return {...state, addProjectPostingError: true, addProjectPostingMessage: action.payload, addProjectPosting: false};\n        case ActionTypes.ADD_PROJECT_POSTING_SUCCESS:\n            return {...state, addProjectPostingError: false, addProjectPostingMessage: action.payload, addProjectPosting: false};\n        default:\n            return state;\n    }\n}","import * as ActionTypes from './actionTypes';\n\nconst initialState = {\n    pendingProjects: null,\n    pendingProjectsLoading: false,\n    pendingProjectsLoadingError: '',\n\n    pendingAchievements: null,\n    pendingAchievementsLoading: false,\n    pendingAchievementsLoadingError: ''\n}\n\nexport const Admin = (state = initialState, action) => {\n    var newState = {...state}\n    var objIndex\n    switch(action.type) {\n        case ActionTypes.ADD_PENDING_PROJECTS:\n            return {...state, pendingProjects: action.payload, pendingProjectsLoading: false, pendingProjectsLoadingError: ''};\n        case ActionTypes.PENDING_PROJECTS_LOADING:\n            return {...state, pendingProjectsLoading: action.payload}\n        case ActionTypes.PENDING_PROJECTS_LOADING_ERROR:\n            return {...state, pendingProjectsLoading: false, pendingProjectsLoadingError: action.payload}\n        case ActionTypes.ADD_PENDING_ACHIEVEMENTS:\n            return {...state, pendingAchievements: action.payload, pendingAchievementsLoading: false, pendingAchievementsLoadingError: ''};\n        case ActionTypes.PENDING_ACHIEVEMENTS_LOADING:\n            return {...state, pendingAchievementsLoading: action.payload}\n        case ActionTypes.PENDING_ACHIEVEMENTS_LOADING_ERROR:\n            return {...state, pendingAchievementsLoading: false, pendingAchievementsLoadingError: action.payload}\n        case ActionTypes.PROJECT_APPROVING:\n            if(!state.pendingProjects)\n                return newState\n            newState.pendingProjects = [...newState.pendingProjects]\n            objIndex = newState.pendingProjects.findIndex((obj => obj.id === action.payload));\n            if(objIndex < 0)\n                return newState\n\n            newState.pendingProjects[objIndex].approving = true\n            newState.pendingProjects[objIndex].error = ''\n\n            return newState\n        case ActionTypes.PROJECT_APPROVED:\n\n            if(!state.pendingProjects)\n                return state\n            newState.pendingProjects = [...newState.pendingProjects]\n            objIndex = newState.pendingProjects.findIndex((obj => obj.id === action.payload));\n            if(objIndex < 0)\n                return newState\n            newState.pendingProjects[objIndex].approving = false\n            newState.pendingProjects[objIndex].approved = 'approved'\n            return newState\n        case ActionTypes.PROJECT_REJECTING:\n\n            if(!state.pendingProjects)\n                return state\n            newState.pendingProjects = [...newState.pendingProjects]\n            objIndex = newState.pendingProjects.findIndex((obj => obj.id === action.payload));\n            if(objIndex < 0)\n                return newState\n            newState.pendingProjects[objIndex].rejecting = true\n            newState.pendingProjects[objIndex].error = ''\n            return newState\n        case ActionTypes.PROJECT_REJECTED:\n\n            if(!state.pendingProjects)\n                return state\n            newState.pendingProjects = [...newState.pendingProjects]\n            objIndex = newState.pendingProjects.findIndex((obj => obj.id === action.payload));\n            if(objIndex < 0)\n                return newState\n            newState.pendingProjects[objIndex].rejecting = false\n            newState.pendingProjects[objIndex].approved = 'rejected'\n            return newState\n        case ActionTypes.PROJECT_ERROR:\n            if(!state.pendingProjects)\n                return state\n            newState.pendingProjects = [...newState.pendingProjects]\n            objIndex = newState.pendingProjects.findIndex((obj => obj.id === action.payload[0]));\n            if(objIndex < 0)\n                return newState\n            newState.pendingProjects[objIndex].rejecting = false\n            newState.pendingProjects[objIndex].approving = false\n            newState.pendingProjects[objIndex].error = action.payload[1]\n            return newState\n        case ActionTypes.ACHIEVEMENT_APPROVING:\n            if(!state.pendingAchievements)\n                return newState\n            newState.pendingAchievements = [...newState.pendingAchievements]\n            objIndex = newState.pendingAchievements.findIndex((obj => obj.id === action.payload));\n            if(objIndex < 0)\n                return newState\n\n            newState.pendingAchievements[objIndex].approving = true\n            newState.pendingAchievements[objIndex].error = ''\n\n            return newState\n        case ActionTypes.ACHIEVEMENT_APPROVED:\n\n            if(!state.pendingAchievements)\n                return state\n            newState.pendingAchievements = [...newState.pendingAchievements]\n            objIndex = newState.pendingAchievements.findIndex((obj => obj.id === action.payload));\n            if(objIndex < 0)\n                return newState\n            newState.pendingAchievements[objIndex].approving = false\n            newState.pendingAchievements[objIndex].approved = 'approved'\n            return newState\n        case ActionTypes.ACHIEVEMENT_REJECTING:\n\n            if(!state.pendingAchievements)\n                return state\n            newState.pendingAchievements = [...newState.pendingAchievements]\n            objIndex = newState.pendingAchievements.findIndex((obj => obj.id === action.payload));\n            if(objIndex < 0)\n                return newState\n            newState.pendingAchievements[objIndex].rejecting = true\n            newState.pendingAchievements[objIndex].error = ''\n            return newState\n        case ActionTypes.ACHIEVEMENT_REJECTED:\n\n            if(!state.pendingAchievements)\n                return state\n            newState.pendingAchievements = [...newState.pendingAchievements]\n            objIndex = newState.pendingAchievements.findIndex((obj => obj.id === action.payload));\n            if(objIndex < 0)\n                return newState\n            newState.pendingAchievements[objIndex].rejecting = false\n            newState.pendingAchievements[objIndex].approved = 'rejected'\n            return newState\n        case ActionTypes.ACHIEVEMENT_ERROR:\n            if(!state.pendingAchievements)\n                return state\n            newState.pendingAchievements = [...newState.pendingAchievements]\n            objIndex = newState.pendingAchievements.findIndex((obj => obj.id === action.payload[0]));\n            if(objIndex < 0)\n                return newState\n            newState.pendingAchievements[objIndex].rejecting = false\n            newState.pendingAchievements[objIndex].approving = false\n            newState.pendingAchievements[objIndex].error = action.payload[1]\n            return newState\n        default:\n            return state;\n    }\n}","import * as ActionTypes from './actionTypes';\nimport { baseUrl } from '../shared/baseUrl';\nimport fetch from 'cross-fetch';\nimport Cookies from 'cookies-js';\n\n// Thunk, returns a function\nexport const fetchUpdates = (key) => (dispatch) => {\n    let token_head = 'Token '+key;\n    dispatch(updatesLoading(true));\n    return fetch(baseUrl+'main/homepage', {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': token_head\n        }\n    })\n    .then(response => {\n        if(!response.ok)\n            throw Error(\"Error occurred while fetching /main/homepage\");\n        return response;\n    })\n    .then(response => response.json())\n    .then((response) => {\n        dispatch(addUpdates(response));\n        dispatch(updatesLoading(false));\n    })\n    .catch(err => {\n        console.log(err);\n        dispatch(updatesLoading(false));\n    });\n}\n\nexport const fetchBanners = (key, setBanners, setLoading, setErrorMessage) => {\n    setLoading(true)\n    fetch(baseUrl+'main/api/banner/', {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Token ' + key\n        }\n    })\n    .then(response => {\n        if(!response.ok)\n            throw Error(\"Error occurred while fetching banners!\");\n        return response;\n    })\n    .then(response => response.json())\n    .then((response) => {\n        setLoading(false)\n        setBanners(response)\n    })\n    .catch(err => {\n        setLoading(false)\n        console.log(err);\n        setErrorMessage(err.message)\n    });\n}\n\nexport const loadKey = (key) => ({\n    type: ActionTypes.LOAD_KEY,\n    payload: key\n});\n\nexport const loadProfile = (profile) => ({\n    type: ActionTypes.LOAD_PROFILE,\n    payload: profile\n});\n\nexport const loadProfileAchievements = (achievements) => ({\n    type: ActionTypes.LOAD_PROFILE_ACHIEVEMENTS,\n    payload: achievements\n});\n\n// Clear User Data and token\nexport const clearUserData = () => ({\n    type: ActionTypes.CLEAR_USER_DATA\n});\n\n// Login thunk, returns a function\nexport const login = (username, password) => (dispatch) => {\n    dispatch(loggingIn(true));\n    return fetch(baseUrl+'rest-auth/login/', {\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            username: username,\n            password: password\n        }) // body data type must match \"Content-Type\" header\n    })\n    .then(response => {\n        if(!response.ok)\n            throw Error(\"Error occurred!\");\n        return response;\n    })\n    .then(response => response.json())\n    .then(({key}) => {\n        dispatch(loadKey(key));\n        dispatch(loggingIn(false));\n    })\n    .catch(err => {\n        console.log(err);\n        dispatch(loggingIn(false));\n        dispatch(loginFailed(err.message));\n    });\n}\n\nexport const loginOSA = () => (dispatch) => {\n    dispatch(loggingIn(true));\n    return fetch(baseUrl+'auth/login/', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'X-CSRFToken': Cookies.get('csrftoken')\n        }\n    })\n    .then(response => {\n        if(!response.ok)\n            throw Error(\"Error occurred!\");\n        return response;\n    })\n    .then(response => response.json())\n    .then(({key}) => {\n        dispatch(loadKey(key));\n        dispatch(loggingIn(false));\n    })\n    .catch(err => {\n        console.log(err);\n        dispatch(loggingIn(false));\n        dispatch(loginFailed(err.message));\n    });\n}\n\nexport const loggingIn = (value) => ({\n    type: ActionTypes.LOGGING_IN,\n    payload: value\n})\n\nexport const loginFailed = (err) => ({\n    type: ActionTypes.LOGIN_FAILED,\n    payload: err\n})\n\n// Thunk to fetch profile\nexport const fetchUserProfile = (key) => (dispatch) => {\n    let token_head = 'Token '+key;\n    // Fetch profile details\n    return fetch(baseUrl+'auth/api/profile/', {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': token_head\n        }\n    })\n    .then(response => response.json())\n    .then(response => {\n        console.log(response.profile);\n        dispatch(loadProfile(response.profile));\n    })\n    .catch(err => {\n        console.log(err);\n    })\n}\n\nexport const patchUserProfile = (key, id, studObj,\n        setSaving, setSavingMessage, setSavingSuccess\n    ) => (dispatch) => {\n    setSaving(true)\n    setSavingMessage('')\n    let token_head = 'Token '+key;\n\n    if(!studObj.profile_pic)\n        delete studObj.profile_pic\n\n    let form_data = new FormData();\n    for(const key in studObj)\n        form_data.append(key, studObj[key])\n\n    return fetch(baseUrl+'auth/api/profile/'+id+'/', {\n        method: 'PATCH',\n        headers: {\n            'Authorization': token_head\n        },\n        body: form_data\n    })\n    .then(response => {\n        if(!response.ok)\n            throw new Error('Error while saving profile!')\n        return response.json()\n    })\n    .then(response => {\n        setSavingMessage('Profile saved!')\n        setSavingSuccess(true)\n        setSaving(false)\n    })\n    .catch(err => {\n        console.log(err);\n        setSaving(false)\n        setSavingSuccess(false)\n        setSavingMessage(err.message)\n    })\n}\n\nexport const fetchUserAchievements = (key) => (dispatch) => {\n    let token_head = 'Token '+key;\n    // Fetch achievements of the logged in user\n    fetch(baseUrl+'main/api/achievement', {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': token_head\n        }\n    })\n    .then(response => response.json())\n    .then(response => {\n        console.log(response);\n        dispatch(loadProfileAchievements(response.achievements));\n    })\n    .catch(err => {\n        console.log(err);\n    })\n}\n\nexport const loadProfileProjects = (projects) => ({\n    type: ActionTypes.LOAD_PROFILE_PROJECTS,\n    payload: projects\n});\n\nexport const fetchUserProjects = (key) => (dispatch) => {\n    let token_head = 'Token '+key;\n    // Fetch achievements of the logged in user\n    fetch(baseUrl+'main/api/project/', {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': token_head\n        }\n    })\n    .then(response => response.json())\n    .then(response => {\n        console.log(response);\n        dispatch(loadProfileProjects(response.projects));\n    })\n    .catch(err => {\n        console.log(err);\n    })\n}\n\n// Create action to indicate updates are loading\nexport const updatesLoading = (value) => ({\n    type: ActionTypes.UPDATES_LOADING,\n    payload: value\n});\n\n// Create action to indicate loading updates has failed\nexport const updatesFailed = (errmess) => ({\n    type: ActionTypes.UPDATES_FAILED,\n    payload: errmess\n});\n\n// Create action to add loaded updates\nexport const addUpdates = (updates) => ({\n    type: ActionTypes.ADD_UPDATES,\n    payload: updates\n});\n\nexport const addBanners = (banners) => ({\n    type: ActionTypes.ADD_BANNERS,\n    payload: banners\n});\n\n\nexport const fetchStudentsList = (key) => (dispatch) => {\n    let token_head = 'Token '+key;\n    dispatch(studentsListLoading(true));\n    fetch(baseUrl+'main/api/get-students', {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': token_head\n        }\n    })\n    .then(response => response.json())\n    .then(response => {\n        dispatch(loadStudentsList(response.students));\n    })\n    .catch(err => {\n        console.log(err);\n        dispatch(studentsListLoading(false));\n    })\n}\n\nexport const loadStudentsList = (students) => ({\n    type: ActionTypes.LOAD_STUDENTS_LIST,\n    payload: students\n})\n\nexport const studentsListLoading = (value) => ({\n    type: ActionTypes.STUDENTS_LIST_LOADING,\n    payload: value\n})\n\nexport const fetchProfessorsList = (key) => (dispatch) => {\n    dispatch(professorsListLoading(true));\n    let token_head = 'Token '+key;\n    fetch(baseUrl+'main/api/get-professors', {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': token_head\n        }\n    })\n    .then(response => response.json())\n    .then(response => {\n        dispatch(loadProfessorsList(response.professors));\n    })\n    .catch(err => {\n        console.log(err);\n        dispatch(professorsListLoading(false));\n    })\n}\n\nexport const loadProfessorsList = (professors) => ({\n    type: ActionTypes.LOAD_PROFESSORS_LIST,\n    payload: professors\n})\n\nexport const professorsListLoading = (value) => ({\n    type: ActionTypes.PROFESSORS_LIST_LOADING,\n    payload: value\n})\n\nexport const fetchInstitutesList = (key) => (dispatch) => {\n    dispatch(institutesLoading(true));\n    let token_head = 'Token '+key;\n    fetch(baseUrl+'main/api/institution/', {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': token_head\n        }\n    })\n    .then(response => response.json())\n    .then(response => {\n        dispatch(loadInstitutesList(response));\n    })\n    .catch(err => {\n        console.log(err);\n        dispatch(institutesLoading(false));\n    })\n}\n\nexport const postInstitution = (key, institution,  setSaving, setError, setMsg, clear) => {\n    let token_head = 'Token '+key;\n    setSaving(true)\n    setError(false)\n    setMsg('')\n    fetch(baseUrl+'main/api/institution/', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': token_head\n        },\n        body: JSON.stringify({\n            title: institution\n        })\n    })\n    .then(response => {\n        if(!response.ok) {\n            throw new Error('Error while saving institution!')\n        }\n        return response.json()\n    })\n    .then(() => {\n        setSaving(false)\n        setMsg('Successfully saved!')\n        clear()\n    })\n    .catch(err => {\n        console.log(err);\n        setSaving(false)\n        setError(true);\n        setMsg(err.message)\n    })\n}\n\nexport const loadInstitutesList = (institutes) => ({\n    type: ActionTypes.LOAD_INSTITUTES_LIST,\n    payload: institutes\n})\n\nexport const institutesLoading = (value) => ({\n    type: ActionTypes.INSTITUTES_LIST_LOADING,\n    payload: value\n})\n\nexport const fetchTagsList = (key) => (dispatch) => {\n    dispatch(tagsLoading(true));\n    let token_head = 'Token '+key;\n    fetch(baseUrl+'main/api/tag/', {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': token_head\n        }\n    })\n    .then(response => response.json())\n    .then(response => {\n        dispatch(loadTagsList(response));\n    })\n    .catch(err => {\n        console.log(err);\n        dispatch(tagsLoading(false));\n    })\n}\n\nexport const addTagList = (tagObj) => ({\n    type: ActionTypes.ADD_TAG_LIST,\n    payload: tagObj\n})\n\nexport const loadTagsList = (tags) => ({\n    type: ActionTypes.LOAD_TAGS_LIST,\n    payload: tags\n})\n\nexport const tagsLoading = (value) => ({\n    type: ActionTypes.TAGS_LIST_LOADING,\n    payload: value\n})\n\nexport const postTag = (key, tag, callback, errorFunction) => (dispatch) => {\n    let token_head = 'Token '+key;\n    fetch(baseUrl+'main/api/tag/', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': token_head\n        },\n        body: JSON.stringify({\n            title: tag\n        })\n    })\n    .then((response) => {\n        if(!response.ok)\n            throw new Error('There was a problem adding this tag to the database!')\n        return response\n    })\n    .then(response => response.json())\n    .then(response => {\n        console.log(response)\n        dispatch(addTagList(response))\n        return response\n    })\n    .then((response) => callback(response))\n    .catch(error => {\n        console.log(error)\n        errorFunction(error.message)\n    })\n}\n\nexport const fetchProject = (key, projectId, setProjectDetails, setLoading, setErrorMessage) => {\n    let token_head = 'Token '+key;\n    console.log(token_head)\n    fetch(baseUrl+'main/api/project/'+projectId, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': token_head\n        }\n    })\n    .then((response) => {\n        if(!response.ok)\n            throw new Error('Project not found!')\n        console.log(response.error)\n        return response\n    })\n    .then(response => response.json())\n    .then(response => {\n        console.log(response)\n        setProjectDetails(response)\n        setLoading(false)\n        return response\n    })\n    .catch(error => {\n        setLoading(false)\n        setErrorMessage(error.message)\n        console.log(error)\n    })\n}\n\nexport const fetchAchievement = (key, achievementId, setAchievementDetails, setLoading, setErrorMessage) => {\n    let token_head = 'Token '+key;\n    console.log(token_head)\n    fetch(baseUrl+'main/api/achievement/'+achievementId, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': token_head\n        }\n    })\n    .then((response) => {\n        if(!response.ok)\n            throw new Error('Achievement not found!')\n        console.log(response.error)\n        return response\n    })\n    .then(response => response.json())\n    .then(response => {\n        console.log(response)\n        setAchievementDetails(response)\n        setLoading(false)\n        return response\n    })\n    .catch(error => {\n        setLoading(false)\n        setErrorMessage(error.message)\n        console.log(error)\n    })\n}\n\nexport const addAchievementPosting = (value) => ({\n    type: ActionTypes.ADD_ACHIEVEMENT_POSTING,\n    payload: value\n})\n\nexport const addAchievementPostingError = (message) => ({\n    type: ActionTypes.ADD_ACHIEVEMENT_POSTING_ERROR,\n    payload: message\n})\n\nexport const addAchievementPostingSuccess = (message) => ({\n    type: ActionTypes.ADD_ACHIEVEMENT_POSTING_SUCCESS,\n    payload: message\n})\n\nconst addFileToAchievement = (key, aId, file) => {\n    var form_data = new FormData()\n    form_data.append('files', file)\n    fetch(baseUrl + 'main/api/achievement/'+aId+'/', {\n        method: 'PATCH',\n        headers: {\n            'Authorization' : 'Token '+key\n        },\n        body: form_data\n    })\n}\n\nexport const postNewAchievement = (key, stateObj, clearFunction) => (dispatch) => {\n    dispatch(addAchievementPosting(true));\n    let token_head = 'Token '+key;\n\n    var bodyObj = {\n        title: stateObj.title,\n        description: stateObj.description,\n        institution: stateObj.institution,\n        achievedDate: stateObj.dateofachievement,\n        teamMembers: stateObj.team.map(member => member.id),\n        tags: stateObj.tags.map(tag => tag.id),\n        category: stateObj.category\n    }\n\n    fetch(baseUrl+'main/api/achievement/', {\n        method: 'POST',\n        headers: {\n            'Authorization': token_head,\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(bodyObj)\n    })\n    .then((response) => {\n        if(!response.ok)\n            throw new Error('There was a problem adding this achievement!')\n        return response\n    })\n    .then(response => response.json())\n    .then(response => {\n        console.log(response, response.id)\n        if(stateObj.file)\n            addFileToAchievement(key, response.id, stateObj.file)\n        return response\n    })\n    .then(response => {\n        // Success dispatch\n        clearFunction();\n        dispatch(addAchievementPostingSuccess(\"Your achivement has been posted! Wait for the admin to approve it.\"))\n        return response\n    })\n    .catch(error => {\n        console.log(error)\n        dispatch(addAchievementPostingError(error.message))\n    })\n}\n\nexport const patchAchievement = (key, stateObj, clearFunction, aId) => (dispatch) => {\n    dispatch(addAchievementPosting(true));\n    let token_head = 'Token '+key;\n\n    var bodyObj = {\n        title: stateObj.title,\n        description: stateObj.description,\n        institution: (stateObj.institution.id) ? (stateObj.institution.id) : stateObj.institution,\n        achievedDate: stateObj.dateofachievement,\n        teamMembers: stateObj.team.map(member => member.id),\n        tags: stateObj.tags.map(tag => tag.id),\n        category: stateObj.category\n    }\n\n    fetch(baseUrl+'main/api/achievement/'+aId+'/', {\n        method: 'PUT',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': token_head\n        },\n        body: JSON.stringify(bodyObj)\n    })\n    .then((response) => {\n        if(!response.ok)\n            throw new Error('There was a problem saving this achievement!')\n        console.log(response)\n        return response\n    })\n    .then(response => response.json())\n    .then(response => {\n        if(stateObj.file)\n            addFileToAchievement(key, response.id, stateObj.file)\n        return response\n    })\n    .then(response => {\n        // Success dispatch\n        clearFunction();\n        dispatch(addAchievementPostingSuccess(\"Your achivement has been saved! Wait for the admin to approve it.\"))\n        return response\n    })\n    .catch(error => {\n        console.log(error)\n        dispatch(addAchievementPostingError(error.message))\n    })\n}\n\nexport const addProjectPosting = (value) => ({\n    type: ActionTypes.ADD_PROJECT_POSTING,\n    payload: value\n})\n\nexport const addProjectPostingError = (message) => ({\n    type: ActionTypes.ADD_PROJECT_POSTING_ERROR,\n    payload: message\n})\n\nexport const addProjectPostingSuccess = (message) => ({\n    type: ActionTypes.ADD_PROJECT_POSTING_SUCCESS,\n    payload: message\n})\n\nexport const postNewProject = (key, stateObj, clearFunction) => (dispatch) => {\n    dispatch(addProjectPosting(true));\n    let token_head = 'Token '+key;\n\n    var bodyObj = {\n        title: stateObj.title,\n        description: stateObj.description,\n        institution: stateObj.institution,\n        startDate: stateObj.startdate,\n        endDate: stateObj.enddate,\n        field: stateObj.field,\n        domain: stateObj.domain,\n        url: stateObj.url,\n        students: stateObj.team.map(member => member.id),\n        mentors: stateObj.mentors.map(mentor => mentor.id),\n        tags: stateObj.tags.map(tag => tag.id),\n        proof: stateObj.proof\n    }\n\n    fetch(baseUrl+'main/api/project/', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': token_head\n        },\n        body: JSON.stringify(bodyObj)\n    })\n    .then((response) => {\n        if(!response.ok)\n            throw new Error('There was a problem adding this project!')\n        console.log(response)\n        return response\n    })\n    .then(response => response.json())\n    .then(response => {\n        // Success dispatch\n        clearFunction();\n        dispatch(addProjectPostingSuccess(\"Your project has been posted! Wait for the admin to approve it.\"))\n        return response\n    })\n    .catch(error => {\n        console.log(error)\n        dispatch(addProjectPostingError(error.message))\n    })\n}\n\nexport const patchProject = (key, stateObj, clearFunction, projectId) => (dispatch) => {\n    dispatch(addProjectPosting(true));\n    let token_head = 'Token '+key;\n\n    var bodyObj = {\n        title: stateObj.title,\n        description: stateObj.description,\n        institution: stateObj.institution.id,\n        startDate: stateObj.startdate,\n        endDate: stateObj.enddate,\n        field: stateObj.field,\n        domain: stateObj.domain,\n        url: stateObj.url,\n        students: stateObj.team.map(member => member.id),\n        mentors: stateObj.mentors.map(mentor => mentor.id),\n        tags: stateObj.tags.map(tag => tag.id),\n        proof: stateObj.proof\n    }\n\n    fetch(baseUrl+'main/api/project/'+projectId+'/', {\n        method: 'PATCH',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': token_head\n        },\n        body: JSON.stringify(bodyObj)\n    })\n    .then((response) => {\n        if(!response.ok)\n            throw new Error('There was a problem saving this project!')\n        console.log(response)\n        return response\n    })\n    .then(response => response.json())\n    .then(response => {\n        // Success dispatch\n        clearFunction();\n        dispatch(addProjectPostingSuccess(\"Your project has been saved! Wait for the admin to approve it.\"))\n        return response\n    })\n    .catch(error => {\n        console.log(error)\n        dispatch(addProjectPostingError(error.message))\n    })\n}\n\nexport const addPendingProjects = (pendingProjects) => ({\n    type: ActionTypes.ADD_PENDING_PROJECTS,\n    payload: pendingProjects\n})\n\nexport const pendingProjectsLoading = (value) => ({\n    type: ActionTypes.PENDING_PROJECTS_LOADING,\n    payload: value\n})\n\nexport const pendingProjectsLoadingError = (message) => ({\n    type: ActionTypes.PENDING_PROJECTS_LOADING_ERROR,\n    payload: message\n})\n\nexport const fetchPendingProjects = (key) => (dispatch) => {\n    dispatch(pendingProjectsLoading(true));\n    let token_head = 'Token '+key;\n    fetch(baseUrl+'main/api/get-projects-admin', {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': token_head\n        }\n    })\n    .then((response) => {\n        if(!response.ok)\n            throw new Error('There was a problem fetching pending projects!')\n        console.log(response)\n        return response\n    })\n    .then(response => response.json())\n    .then(response => {\n        if(response.details)\n            throw new Error(response.details)\n        return response\n    })\n    .then(response => {\n        dispatch(addPendingProjects(response.unapproved))\n        return response\n    })\n    .catch(error => {\n        console.log(error)\n        dispatch(pendingProjectsLoadingError(error.message))\n    })\n}\n\nexport const addPendingAchievements = (pendingAchievements) => ({\n    type: ActionTypes.ADD_PENDING_ACHIEVEMENTS,\n    payload: pendingAchievements\n})\n\nexport const pendingAchievementsLoading = (value) => ({\n    type: ActionTypes.PENDING_ACHIEVEMENTS_LOADING,\n    payload: value\n})\n\nexport const pendingAchievementsLoadingError = (message) => ({\n    type: ActionTypes.PENDING_ACHIEVEMENTS_LOADING_ERROR,\n    payload: message\n})\n\nexport const fetchPendingAchievements = (key) => (dispatch) => {\n    dispatch(pendingAchievementsLoading(true));\n    let token_head = 'Token '+key;\n    fetch(baseUrl+'main/api/get-achievements-admin', {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': token_head\n        }\n    })\n    .then((response) => {\n        if(!response.ok)\n            throw new Error('There was a problem fetching pending achievements!')\n        console.log(response)\n        return response\n    })\n    .then(response => response.json())\n    .then(response => {\n        if(response.details)\n            throw new Error(response.details)\n        return response\n    })\n    .then(response => {\n        dispatch(addPendingAchievements(response.unapproved))\n        return response\n    })\n    .catch(error => {\n        console.log(error)\n        dispatch(pendingAchievementsLoadingError(error.message))\n    })\n}\n\nexport const projectApproving = (projectId) => ({\n    type: ActionTypes.PROJECT_APPROVING,\n    payload: projectId\n})\n\nexport const projectApproved = (projectId) => ({\n    type: ActionTypes.PROJECT_APPROVED,\n    payload: projectId\n})\n\nexport const projectRejecting = (projectId) => ({\n    type: ActionTypes.PROJECT_REJECTING,\n    payload: projectId\n})\n\nexport const projectRejected = (projectId) => ({\n    type: ActionTypes.PROJECT_REJECTED,\n    payload: projectId\n})\n\nexport const projectDeleting = (projectId) => ({\n    type: ActionTypes.PROJECT_DELETING,\n    payload: projectId\n})\n\nexport const projectDeleted = (projectId) => ({\n    type: ActionTypes.PROJECT_DELETED,\n    payload: projectId\n})\n\nexport const projectError = (projectId, message) => ({\n    type: ActionTypes.PROJECT_ERROR,\n    payload: [projectId, message]\n})\n\nexport const approveProject = (key, projectId, userId) => (dispatch) => {\n    dispatch(projectApproving(projectId));\n    let token_head = 'Token '+key;\n    fetch(baseUrl+'main/api/project/'+projectId+'/', {\n        method: 'PATCH',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': token_head\n        },\n        body: JSON.stringify({\n            approved: 'approved',\n            approvedBy: userId\n        })\n    })\n    .then((response) => {\n        if(!response.ok) {\n            console.log(response)\n            throw new Error('There was a problem approving this project!')\n        }\n        console.log(response)\n        return response\n    })\n    .then(response => response.json())\n    .then(response => {\n        dispatch(projectApproved(projectId))\n        return response\n    })\n    .catch(error => {\n        console.log(error)\n        dispatch(projectError(projectId, error.message))\n    })\n}\n\nexport const rejectProject = (key, projectId, userId, feedback) => (dispatch) => {\n    dispatch(projectRejecting(projectId));\n    let token_head = 'Token '+key;\n    fetch(baseUrl+'main/api/project/'+projectId+'/', {\n        method: 'PATCH',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': token_head\n        },\n        body: JSON.stringify({\n            approved: 'rejected',\n            approvedBy: userId,\n            feedback: feedback\n        })\n    })\n    .then((response) => {\n        if(!response.ok) {\n            console.log(response)\n            throw new Error('There was a problem rejecting this project!')\n        }\n        return response\n    })\n    .then(response => response.json())\n    .then(response => {\n        dispatch(projectRejected(projectId))\n        return response\n    })\n    .catch(error => {\n        console.log(error)\n        dispatch(projectError(projectId, error.message))\n    })\n}\n\nexport const deleteProject = (key, projectId) => (dispatch) => {\n    dispatch(projectDeleting(projectId));\n    let token_head = 'Token '+key;\n    fetch(baseUrl+'main/api/project/'+projectId+'/', {\n        method: 'DELETE',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': token_head\n        }\n    })\n    .then((response) => {\n        if(!response.ok) {\n            console.log(response)\n            throw new Error('There was a problem deleting this project!')\n        }\n        console.log(response)\n        return response\n    })\n    .then(response => {\n        dispatch(projectDeleted(projectId))\n        return response\n    })\n    .catch(error => {\n        console.log(error)\n        // the error here is for pending projects, make something similar here\n        // dispatch(projectError(projectId, error.message))\n    })\n}\n\nexport const achievementApproving = (achievementId) => ({\n    type: ActionTypes.ACHIEVEMENT_APPROVING,\n    payload: achievementId\n})\n\nexport const achievementApproved = (achievementId) => ({\n    type: ActionTypes.ACHIEVEMENT_APPROVED,\n    payload: achievementId\n})\n\nexport const achievementRejecting = (achievementId) => ({\n    type: ActionTypes.ACHIEVEMENT_REJECTING,\n    payload: achievementId\n})\n\nexport const achievementRejected = (achievementId) => ({\n    type: ActionTypes.ACHIEVEMENT_REJECTED,\n    payload: achievementId\n})\n\nexport const achievementDeleting = (achievementId) => ({\n    type: ActionTypes.ACHIEVEMENT_DELETING,\n    payload: achievementId\n})\n\nexport const achievementDeleted = (achievementId) => ({\n    type: ActionTypes.ACHIEVEMENT_DELETED,\n    payload: achievementId\n})\n\nexport const achievementError = (achievementId, message) => ({\n    type: ActionTypes.ACHIEVEMENT_ERROR,\n    payload: [achievementId, message]\n})\n\nexport const approveAchievement = (key, achievementId, userId) => (dispatch) => {\n    dispatch(achievementApproving(achievementId));\n    let token_head = 'Token '+key;\n    fetch(baseUrl+'main/api/achievement/'+achievementId+'/', {\n        method: 'PATCH',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': token_head\n        },\n        body: JSON.stringify({\n            approved: 'approved',\n            approvedBy: userId\n        })\n    })\n    .then((response) => {\n        if(!response.ok) {\n            console.log(response)\n            throw new Error('There was a problem approving this achievement!')\n        }\n        console.log(response)\n        return response\n    })\n    .then(response => response.json())\n    .then(response => {\n        dispatch(achievementApproved(achievementId))\n        return response\n    })\n    .catch(error => {\n        console.log(error)\n        dispatch(achievementError(achievementId, error.message))\n    })\n}\n\nexport const rejectAchievement = (key, achievementId, userId, feedback) => (dispatch) => {\n    dispatch(achievementRejecting(achievementId));\n    let token_head = 'Token '+key;\n    fetch(baseUrl+'main/api/achievement/'+achievementId+'/', {\n        method: 'PATCH',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': token_head\n        },\n        body: JSON.stringify({\n            approved: 'rejected',\n            approvedBy: userId,\n            feedback: feedback\n        })\n    })\n    .then((response) => {\n        if(!response.ok) {\n            console.log(response)\n            throw new Error('There was a problem rejecting this achievement!')\n        }\n        return response\n    })\n    .then(response => response.json())\n    .then(response => {\n        dispatch(achievementRejected(achievementId))\n        return response\n    })\n    .catch(error => {\n        console.log(error)\n        dispatch(achievementError(achievementId, error.message))\n    })\n}\n\nexport const deleteAchievement = (key, achievementId) => (dispatch) => {\n    dispatch(achievementDeleting(achievementId));\n    let token_head = 'Token '+key;\n    fetch(baseUrl+'main/api/achievement/'+achievementId+'/', {\n        method: 'DELETE',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': token_head\n        }\n    })\n    .then((response) => {\n        if(!response.ok) {\n            console.log(response)\n            throw new Error('There was a problem deleting this achievement!')\n        }\n        console.log(response)\n        return response\n    })\n    .then(response => {\n        dispatch(achievementDeleted(achievementId))\n        return response\n    })\n    .catch(error => {\n        console.log(error)\n        // error is for pending achievements, make something similar here\n        // dispatch(achievementError(achievementId, error.message))\n    })\n}","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavbarText, UncontrolledDropdown, DropdownItem, DropdownToggle, DropdownMenu } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { clearUserData, fetchUserProfile } from '../redux/ActionCreators'\nimport { useEffect } from 'react';\n\nconst mapStateToProps = state => ({\n  authorized: state.user.authorized,\n  token: state.user.token,\n  profile: state.user.profile,\n  profileLoaded: state.user.profileLoaded\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  logout: () => dispatch(clearUserData()),\n  fetchUserProfile: (key) => dispatch(fetchUserProfile(key))\n});\n\nfunction UserIcon({authorized, admin, logout}) {\n  return (\n    (authorized) ?\n    <div>\n      <UncontrolledDropdown inNavbar>\n        <DropdownToggle className=\"m-auto p-auto\" nav caret>\n          <img className={`rounded-circle mr-2 ${admin?\"red-glow\":\"\"}`} width=\"50\" height=\"50\"\n            src=\"/assets/Profile/dp.png\" alt=\"Display\" />\n        </DropdownToggle>\n        <DropdownMenu right>\n\n          <Link to=\"/addachievement\">\n            <DropdownItem>\n            Add Achievement\n            </DropdownItem>\n          </Link>\n\n          <Link to=\"/addproject\">\n            <DropdownItem>\n            Add Project\n            </DropdownItem>\n          </Link>\n\n          <Link to=\"/myachievements\">\n            <DropdownItem>\n            My Achievements\n            </DropdownItem>\n          </Link>\n\n          <Link to=\"/myprojects\">\n            <DropdownItem>\n            My Projects\n            </DropdownItem>\n          </Link>\n\n          <Link to=\"/profile\">\n            <DropdownItem>\n              My Profile\n            </DropdownItem>\n          </Link>\n\n          <DropdownItem className={`${admin ? '' : 'd-none'}`} divider />\n\n          <Link className={admin ? '' : 'd-none'} to=\"/pending-projects\">\n            <DropdownItem>\n              Pending Projects\n            </DropdownItem>\n          </Link>\n\n          <Link className={admin ? '' : 'd-none'} to=\"/pending-achievements\">\n            <DropdownItem>\n              Pending Achievements\n            </DropdownItem>\n          </Link>\n\n          <Link className={admin ? '' : 'd-none'} to=\"/banners\">\n            <DropdownItem>\n              Edit Homepage Banner\n            </DropdownItem>\n          </Link>\n\n          <DropdownItem divider />\n          <DropdownItem onClick={logout}>\n            Logout\n          </DropdownItem>\n        </DropdownMenu>\n      </UncontrolledDropdown>\n    </div>\n    :\n    <>\n    </>\n  )\n}\n\nfunction Navigation(props) {\n  const [collapsed, setCollapsed] = useState(true);\n  const toggleNavbar = () => setCollapsed(!collapsed);\n  const [admin, setAdmin] = useState(false)\n\n  useEffect(() => {\n    if(props.authorized && !props.profileLoaded)\n      props.fetchUserProfile(props.token);\n    setAdmin(props.profile && props.profile.designation === 3)\n  }, [props])\n\n  return (\n    <Navbar light expand=\"md\" className=\"navigation pr-lg-3 pl-lg-3\">\n      <NavbarBrand className=\"mr-sm-3 d-flex\" href=\"/\">\n        <img src=\"/IIITDLogo.png\" className=\"\" alt=\"AP\" height=\"50\" />\n        <NavbarText className=\"h1 font-weight-bold text-color-main d-flex d-sm-none my-auto ml-3 p-0\">\n        AP\n        </NavbarText>\n        <NavbarText className=\"h3 font-weight-bold text-color-main d-none d-sm-flex d-md-none my-auto ml-3 p-0\">\n        Achievements Portal\n        </NavbarText>\n      </NavbarBrand>\n\n      <NavbarToggler onClick={toggleNavbar} />\n\n      <Collapse isOpen={!collapsed} navbar>\n        <Nav navbar>\n          <NavItem className=\"mr-4 my-2\" >\n            <Link className=\"m-auto text-center d-block\" to=\"/\">Home</Link>\n          </NavItem>\n          <NavItem className=\"mr-4 my-2 d-block\">\n            <Link className=\"m-auto text-center d-block\" to=\"/about\">About</Link>\n          </NavItem>\n\n          {/* SHOW ONLY WHEN AUTHORIZED  */}\n          <NavItem className={`mr-4 my-2 ${!props.authorized ? \"d-none\" : \"d-block\"}`}>\n            <Link className=\"m-auto text-center d-block\" to=\"/projects\">Projects</Link>\n          </NavItem>\n          <NavItem className={`mr-4 my-2 ${!props.authorized ? \"d-none\" : \"d-block\"}`}>\n            <Link className=\"m-auto text-center d-block\" to=\"/achievements\">Achievements</Link>\n          </NavItem>\n\n          {/* SHOW ONLY WHEN NOT AUTHORIZED  */}\n          {/* <NavItem className={`mr-4 my-2 ${props.authorized ? \"d-none\" : \"d-block\"}`}>\n            <Link className=\"m-auto text-center d-block\" to=\"/signup\">Sign Up</Link>\n          </NavItem> */}\n          <NavItem className={`mr-4 my-2 ${props.authorized ? \"d-none\" : \"d-block\"}`}>\n            <Link className=\"m-auto text-center d-block\" to=\"/login\">Login</Link>\n          </NavItem>\n\n          <NavItem className=\"d-block d-md-none my-2\">\n            <div className=\"m-auto text-center d-block\">\n              <UserIcon authorized={props.authorized} admin={admin}  logout={props.logout} />\n            </div>\n          </NavItem>\n        </Nav>\n      </Collapse>\n\n      <NavbarText className=\"h2 font-weight-bold text-color-main text-center d-none d-lg-block\">\n      Achievements Portal\n      </NavbarText>\n      <div className=\"d-none d-md-block ml-4\">\n        <UserIcon authorized={props.authorized} admin={admin} logout={props.logout} />\n      </div>\n    </Navbar>\n  );\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Navigation));\n","import React from 'react';\nimport { Container, Row, Col} from 'reactstrap';\n\nfunction Footer() {\n    return (\n        <Container fluid className=\"bg-color-lightest-grey p-3 mt-5\">\n            <Row>\n                <Col>\n                Developed by hadron43, tushar2407\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n\nexport default Footer;","import React from 'react';\n\nfunction Loading(props) {\n    let size = (props.size) ? props.size : \"fa-5x\";\n    let margin = (props.margin) ? props.margin : \"my-5\";\n    let color = (props.color) ? props.color : '';\n    return (\n        <div className=\"w-100 d-flex\">\n            <div className=\"d-flex m-auto\">\n                <i className={`fa fa-spinner fa-pulse fa-fw text-color-main ${size} ${margin} ${color}`}></i>\n            </div>\n        </div>\n    );\n}\n\nexport default Loading;","import React from 'react';\nimport {Container, Row, Col} from 'reactstrap';\n\nfunction NotFound (props) {\n    let message = props.message ? props.message : \"Error 404! Page Not Found.\"\n    return (\n        <Container className=\"p-3 p-md-4 p-lg-5 mt-4 mb-4 bg-color-lightest-grey rounded-3\">\n            <Row>\n                <Col xs={12} className=\"d-flex\">\n                    <img src=\"/assets/page-not-found.png\" alt=\"Page not found\" className=\"d-flex m-auto\"\n                        style={{maxWidth: \"80%\", maxHeight: \"80%\"}} />\n                </Col>\n\n                <Col xs={12}>\n                    <h3 className=\"text-danger text-center mt-5\">{message}</h3>\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n\nexport default NotFound;","import React, { useState, useEffect } from 'react';\nimport {Button} from 'reactstrap';\nimport Carousel from '@brainhubeu/react-carousel';\nimport '@brainhubeu/react-carousel/lib/style.css';\nimport { addBanners, fetchBanners } from '../../redux/ActionCreators';\nimport Loading from '../../components/Loading';\nimport NotFound from '../../components/NotFound'\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\n\nfunction Arrow({icon}) {\n    return (\n        <div className=\"rounded-circle bg-color-main d-flex p-2 arrow m-2\">\n            <i class={\"fa fa-2x d-flex m-auto \"+icon}></i>\n        </div>\n    );\n}\n\nfunction BannerCard(props) {\n    return (\n        <div>\n        <div className=\"container-fluid row pl-3 pr-3\">\n        <div className=\"col-xs-12 col-sm-5 d-flex\">\n            <img className=\"d-flex m-auto\" src={props.image} alt=\"Banner\" width=\"90%\"></img>\n        </div>\n\n        <div className=\"col-xs-12 col-sm-7 pt-3 pb-3\">\n            <h3 className=\"text-color-main pt-lg-5 pt-3\">\n                {props.title}\n            </h3>\n            <p>\n                {props.plot}\n            </p>\n            <a href={props.link} className={`${props.link ? '' : 'd-none'}`}>\n            <Button color=\"info\" className=\"rounded bg-color-main-ui pl-3 pr-3\" size=\"lg\" >Read More </Button>\n            </a>\n            </div>\n        </div>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => ({\n    banners: state.updates.banners\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    addBanners: (banners) => dispatch(addBanners(banners))\n})\n\nfunction Banner(props) {\n    const [banners, setBanners] = useState(props.banners)\n    const [loading, setLoading] = useState(false)\n    const [errorMsg, setErrorMsg] = useState('')\n\n    useEffect(() => {\n        if(!banners)\n            fetchBanners('', setBanners, setLoading, setErrorMsg)\n    }, [banners])\n\n    useEffect(() => {\n        props.addBanners(banners)\n        // eslint-disable-next-line\n    }, [banners])\n\n    if(loading)\n        return (\n            <Loading />\n        )\n    if(errorMsg)\n        return (\n            <NotFound message={errorMsg} />\n        )\n\n    return (\n        <Carousel\n            slidesPerPage={1}\n            centered\n            arrowLeft={<Arrow icon=\"fa-arrow-left\"/>}\n            arrowRight={<Arrow icon=\"fa-arrow-right\"/>}\n            addArrowClickHandler\n            infinite\n            autoPlay={8000}\n            animationSpeed={1500}\n            breakpoints={{\n              768: {\n                arrowLeft: false,\n                arrowRight: false\n              }\n            }}\n            className=\"bg-color-lightest-grey\"\n        >\n            {\n                (banners) ?\n                    banners.map((banner) => {\n                        return (\n                            <BannerCard image={banner.image} title={banner.title} plot={banner.description} link={banner.link} />\n                        )\n                    })\n                :\n                <BannerCard  image={'assets/Home/1.jpg'} title={'Welcome to Achievement Portal!'} plot={''}/>\n            }\n        </Carousel>\n    );\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Banner))","import React from 'react';\nimport {Container, Row, Col, Button} from 'reactstrap';\nimport {Link} from 'react-router-dom';\n\nimport Loading from '../../components/Loading';\n\nfunction UpdatesCard({heading, updates, buttonText=\"More Updates\", buttonLink}) {\n    if(!updates)\n        return (<></>)\n    return (\n        <Container className=\"shadow rounded-lg bg-color-lightest-grey p-4 pb-5 h-100\">\n\n            <h4 className=\"text-color-main font-weight-bold mb-4\">\n                {heading}\n            </h4>\n\n            {\n                (!updates.length) ?\n                <p className=\"text-info\">No updates yet!</p>\n                :\n                updates.map((update) => {\n                    return (\n                        <>\n                        <p>{update.title}</p>\n                        </>\n                    );\n                })\n            }\n\n            <br />\n\n            <div className=\"bottom clearfix w-100\">\n                <Link to={buttonLink}>\n                    <Button color=\"info\" className=\"mt-2 float-right bottom-button bg-color-main-ui\">{buttonText}</Button>\n                </Link>\n            </div>\n\n        </Container>\n    );\n}\n\nfunction rankToColor(rank) {\n    var color = \"bg-white\";\n    if(rank === 1)\n        color = \"bg-warning\";\n    else if(rank === 2)\n        color = \"bg-color-silver\";\n    else if(rank === 3)\n        color = \"bg-color-bronze\";\n    return color;\n}\n\nfunction TopCard({heading, toppers, buttonText, buttonLink, isLoading, errMess}) {\n    return (\n        <Container fluid className=\"shadow rounded-lg bg-color-lightest-grey p-4 pb-5 h-100\">\n\n            <h4 className=\"text-color-main font-weight-bold mb-4\">\n                {(!isLoading && !errMess) ? heading : (errMess) ? {errMess} : \"Loading...\"}\n            </h4>\n            {\n                (!isLoading && !errMess) ?\n                    <>\n                    {toppers.map((update) => {\n                        return (\n                            <Row className=\"mb-2\">\n                                <Col xs=\"1\" className=\"d-flex\">\n                                    <p className=\"d-flex m-auto\">{update.rank}</p>\n                                </Col>\n                                <Col xs=\"8\" className=\"d-flex\">\n                                <p className=\"d-flex mt-auto mb-auto\">{update.name}</p>\n                                </Col>\n                                <Col xs=\"2\" className={`d-flex rounded p-2 ${rankToColor(update.rank)}`}>\n                                    <p className=\"d-flex m-auto\">{update.points}</p>\n                                </Col>\n                            </Row>\n                        );\n                    })}\n                    <br />\n                    <div className=\"bottom clearfix w-100\">\n                        <Link to={buttonLink}>\n                            <Button color=\"info\" className=\"mt-2 float-right bottom-button bg-color-main-ui\">{buttonText}</Button>\n                        </Link>\n                    </div>\n                    </>\n                :\n                (errMess) ? <></>\n                :\n                <Loading />\n            }\n\n        </Container>\n    );\n}\n\nexport {UpdatesCard, TopCard};","import React, {Component} from 'react';\nimport { Container, Row, Col } from 'reactstrap';\n\nimport Banner from './Banner';\nimport { UpdatesCard } from './HomeCard';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\n\nimport { fetchUpdates } from '../../redux/ActionCreators';\nimport Loading from '../../components/Loading';\n\nconst mapStateToProps = state => ({\n    isLoading: state.updates.isLoading,\n    errMess: state.updates.errMess,\n\n    publications: state.updates.updates.publications,\n    staff: state.updates.updates.staff_achievements,\n    students: state.updates.updates.student_achievements,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    fetchUpdates: () => {dispatch(fetchUpdates())}\n});\n\nclass  Home extends Component {\n    componentDidMount() {\n        console.log(this.props.isLoading, this.props.errMess, this.props.publications)\n        if(!this.props.isLoading && !this.props.errMess && !this.props.publications)\n            this.props.fetchUpdates();\n    }\n\n    render() {\n        return (\n            <>\n            <Banner />\n\n            <Container fluid className=\"mt-3 mb-3\">\n                <Row equal className=\"p-1 p-sm-2 p-lg-3 p-xl-5\">\n                    {\n                        (this.props.isLoading) ?\n                        <Loading />\n                        :\n                        (this.props.errMess) ?\n                        <>\n                        <p className=\"text-danger text-center\">{this.props.errMess}</p>\n                        </>\n                        :\n                        <>\n                            <Col size=\"12\" sm=\"6\" lg=\"4\" xxl=\"3\" className=\"mb-4\">\n                                <div className=\"col-12 h-100\">\n                                    <UpdatesCard\n                                        heading=\"Projects\"\n                                        updates={this.props.publications}\n                                        errMess={this.props.errMess}/>\n                                </div>\n                            </Col>\n                            <Col size=\"12\" sm=\"6\" lg=\"4\" xxl=\"3\" className=\"mb-4\">\n                                <div className=\"col-12 h-100\">\n                                    <UpdatesCard\n                                        heading=\"Staff Achievements\"\n                                        updates={this.props.staff}\n                                        errMess={this.props.errMess}/>\n                                </div>\n                            </Col>\n                            <Col size=\"12\" sm=\"6\" lg=\"4\" xxl=\"3\" className=\"mb-4\">\n                                <div className=\"col-12 h-100\">\n                                    <UpdatesCard\n                                        heading=\"Student Achievements\"\n                                        updates={this.props.students}\n                                        errMess={this.props.errMess}/>\n                                </div>\n                            </Col>\n                        </>\n                    }\n                </Row>\n            </Container>\n            </>\n        );\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Home));","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Badge, Input, Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap'\nimport { postInstitution } from '../redux/ActionCreators';\n\nconst listOfTitles = [\n    {id: 1, title: 'Dr.'},\n    {id: 2, title: 'Mr.'},\n    {id: 3, title: 'Mrs.'},\n    {id: 4, title: 'Ms.'},\n]\n\nconst listOfDegrees = [\n    'Matriculation',\n    'Intermediate',\n    'B.Tech.',\n    'B.Sc.',\n    'B.Com.',\n    'B.Arts.',\n    'B.Arch.',\n    'B.B.A.',\n    'M.B.A.',\n    'M.Tech.',\n    'M.Sc.',\n    'M.Com.',\n    'M.Arts.',\n    'M.Arch.',\n    'M.B.B.S.',\n    'M.Phil.',\n    'Ph.D.',\n    'Others',\n]\n\nfunction ApprovedBadge({ value }) {\n    return (\n        <>\n        {\n            (!value) ?\n            <Badge color=\"danger\" pill>Error</Badge>\n            :\n            (value.toLowerCase() === 'approved') ?\n            <Badge color=\"success\" pill>Approved</Badge>\n            :\n            (value.toLowerCase() === 'pending') ?\n            <Badge color=\"warning\" pill>Pending</Badge>\n            :\n            <Badge color=\"danger\" pill>Rejected</Badge>\n        }\n        </>\n    )\n}\n\nfunction RejectionModal({ modalOpen, setModalOpen, onReject, title, id, className=\"\"}) {\n    const [reason, setReason] = useState(\"\");\n    const toggle = () => setModalOpen(!modalOpen)\n\n    return (\n        <Modal isOpen={modalOpen} toggle={toggle} className={className}>\n            <ModalHeader toggle={toggle}>\n                {id}. {title}\n            </ModalHeader>\n            <ModalBody>\n                <Input type=\"textarea\"\n                    value={reason}\n                    onChange={(e) => setReason(e.target.value)}\n                    name=\"reason\"\n                    placeholder=\"Enter reason for rejection\"\n                    className=\"w-100 px-2\"\n                        />\n            </ModalBody>\n            <ModalFooter>\n                <Button color=\"danger\" onClick={() => {\n                    onReject(reason)\n                    toggle()\n                }}>\n                    Reject\n                </Button>{' '}\n                <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n            </ModalFooter>\n        </Modal>\n    )\n}\n\nfunction RenderUser({ user }) {\n    if(!user)\n        return (<></>)\n\n    return (\n        <Link to={`/profile/${user.id ? user.id : user.user}`}>\n        <Button outline color=\"primary\" className=\"rounded-pill\">\n            {user.first_name + ' ' + user.last_name}\n        </Button>\n        </Link>\n    );\n}\n\nfunction RenderEducation({ institution, degree, year }) {\n    return(\n        <p>\n        {`${degree} ⁃ ${institution} ⁃ (${year})`}\n        </p>\n    )\n}\n\nfunction captializeFirstWord(string) {\n    return string.replace(/(^\\w{1})|(\\s+\\w{1})/g, letter => letter.toUpperCase());\n}\n\nfunction AddInstitutionModal({ token, isModalOpen, setIsModalOpen }) {\n    const [institution, setInstitution] = useState('')\n    const [city, setCity] = useState('')\n\n    const [saving, setSaving] = useState(false)\n    const [savingError, setSavingError] = useState(false)\n    const [savingMsg, setSavingMsg] = useState(false)\n\n    const getString = () => captializeFirstWord(institution) + ', ' + captializeFirstWord(city)\n    const clear = () => { setCity(''); setInstitution('') }\n\n    return (\n        <Modal isOpen={isModalOpen} centered toggle={() => setIsModalOpen(!isModalOpen)}>\n            <ModalHeader>\n                Add Institute\n            </ModalHeader>\n            <ModalBody>\n                <span className=\"text-danger font-weight-bold\">\n                    NOTE: Go through these instructions before adding new institute.\n                </span>\n                <ul className='text-danger'>\n                    <li>Make sure the institute that you are adding is not already present.</li>\n                    <li>Enter full name of city and institute.</li>\n                    <li>Refresh page after adding new institute.</li>\n                </ul>\n                <Input placeholder=\"Institute Name\" value={institution}\n                    onChange={e => setInstitution(e.target.value)}\n                    className='mb-2'\n                     />\n                <Input placeholder=\"City Name\" value={city}\n                    onChange={e => setCity(e.target.value)}\n                    className='mb-2'\n                     />\n                <p className={`${savingError ? 'text-danger' : 'text-success'}`}>{savingMsg}</p>\n            </ModalBody>\n            <ModalFooter>\n                <Button color='danger'\n                    disabled={!institution || !city || saving}\n                    onClick={() => postInstitution(token, getString(), setSaving, setSavingError, setSavingMsg, clear)}\n                    >\n                    Add New Institute\n                </Button>\n                <Button color='success' onClick={() => setIsModalOpen(false)}>Cancel</Button>\n            </ModalFooter>\n        </Modal>\n    );\n}\n\nfunction getWindowDimensions() {\n    const { innerWidth: width, innerHeight: height } = window;\n    return {\n        width,\n        height\n    };\n}\n\nfunction useWindowDimensions() {\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n    useEffect(() => {\n        function handleResize() {\n        setWindowDimensions(getWindowDimensions());\n        }\n\n        window.addEventListener('resize', handleResize);\n        return () => window.removeEventListener('resize', handleResize);\n    }, []);\n\n    return windowDimensions;\n}\n\nexport { ApprovedBadge, RejectionModal, RenderUser, RenderEducation, AddInstitutionModal, useWindowDimensions, listOfTitles, listOfDegrees };","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Table, Button, Input, InputGroup, InputGroupText } from 'reactstrap';\nimport { ApprovedBadge } from '../components/Extras';\nimport Loading from './Loading';\n\nfunction Field({title, value}) {\n    return (\n        <Row className=\"mt-3 mb-3\">\n            <Col md=\"4\">\n                <h3 className=\"font-weight-bold\">{title}</h3>\n            </Col>\n            <Col md=\"8\">\n                <p className=\"h4\">{value}</p>\n            </Col>\n        </Row>\n    )\n}\n\nfunction FieldInput({title, value, setValue, type=\"text\"}) {\n    return (\n        <Row className=\"mt-3 mb-3\">\n            <Col md=\"4\">\n                <h3 className=\"font-weight-bold\">{title}</h3>\n            </Col>\n            <Col md=\"8\">\n                <Input type={type} value={value}\n                    onChange={(e) => setValue(e.target.value)}\n                    ></Input>\n            </Col>\n        </Row>\n    )\n}\n\nfunction FieldInputDropDown({title, value, setValue, values}) {\n    return (\n        <Row className=\"mt-3 mb-3\">\n            <Col md=\"4\">\n                <h3 className=\"font-weight-bold\">{title}</h3>\n            </Col>\n            <Col md=\"8\">\n                <Input type='select' value={value}\n                    onChange={(e) => setValue(e.target.value)}\n                    >\n                    <>\n                    {\n                        values.map((category) => {\n                            return (\n                                <option value={category.id}>{category.title}</option>\n                            );\n                        })\n                    }\n                    </>\n                </Input>\n            </Col>\n        </Row>\n    )\n}\n\nfunction InputSocialMedia({instagram, setInstagram, facebook, setFacebook,\n    github, setGithub, twitter, setTwitter}) {\n    return (\n        <Row className=\"mt-3 mb-3\">\n            <Col md=\"4\">\n                <h3 className=\"font-weight-bold\">Social Media</h3>\n            </Col>\n            <Col md=\"8\">\n                <InputGroup className=\"mb-2\">\n                    <InputGroupText className=\"p-1\">\n                        <i class={`fa fa-facebook-square fa-2x text-primary`}></i>\n                    </InputGroupText>\n                    <Input bsSize=\"lg\" value={facebook} onChange={(e) => setFacebook(e.target.value)} />\n                </InputGroup>\n                <InputGroup className=\"mb-2\">\n                    <InputGroupText className=\"p-1\">\n                        <i class={`fa fa-instagram fa-2x text-danger`}></i>\n                    </InputGroupText>\n                    <Input bsSize=\"lg\" value={instagram} onChange={(e) => setInstagram(e.target.value)} />\n                </InputGroup>\n                <InputGroup className=\"mb-2\">\n                    <InputGroupText className=\"p-1\">\n                        <i class={`fa fa-twitter-square fa-2x text-info`}></i>\n                    </InputGroupText>\n                    <Input bsSize=\"lg\" value={twitter} onChange={(e) => setTwitter(e.target.value)} />\n                </InputGroup>\n                <InputGroup className=\"mb-2\">\n                    <InputGroupText className=\"p-1\">\n                        <i class={`fa fa-github-square fa-2x text-dark`}></i>\n                    </InputGroupText>\n                    <Input bsSize=\"lg\" value={github} onChange={(e) => setGithub(e.target.value)} />\n                </InputGroup>\n            </Col>\n        </Row>\n    )\n}\n\nfunction SocialMedia({instagram, facebook, github, twitter}) {\n    return (\n        <Row className=\"mt-3 mb-3\">\n            <Col md=\"4\">\n                <h3 className=\"font-weight-bold\">Social Media</h3>\n            </Col>\n            <Col md=\"8\">\n                <Link to={{pathname: facebook}} target=\"_blank\">\n                    <i class={`fa fa-facebook-square fa-2x mr-3 text-primary ${!facebook ? \"d-none\" : \"\"}`}></i>\n                </Link>\n                <Link to={{pathname: instagram}} target=\"_blank\">\n                    <i class={`fa fa-instagram fa-2x mr-3 text-danger ${!instagram ? \"d-none\" : \"\"}`}></i>\n                </Link>\n                <Link to={{pathname: twitter}} target=\"_blank\">\n                    <i class={`fa fa-twitter-square fa-2x mr-3 text-info ${!twitter ? \"d-none\" : \"\"}`}></i>\n                </Link>\n                <Link to={{pathname: github}} target=\"_blank\">\n                    <i class={`fa fa-github-square fa-2x mr-3 text-dark ${!github ? \"d-none\" : \"\"}`}></i>\n                </Link>\n            </Col>\n        </Row>\n    );\n}\n\nfunction AchievementsTable(props) {\n    if(!props.achievements)\n        return (\n            <Loading />\n        );\n    else if(props.achievements.length === 0)\n        return (\n            <div className=\"w-100 rounded-3 p-3 bg-color-silver\">\n                <p className=\"h3 text-center my-5\">No achievements to show</p>\n            </div>\n        );\n\n    return (\n        <div className=\"bg-color-off-white rounded-2 col-12\">\n        <Table hover responsive className=\"rounded-2\">\n            <thead>\n                <th className=\"text-color-main h5\">#</th>\n                <th className=\"text-color-main h5\">Title</th>\n                <th className=\"text-color-main h5\">Status</th>\n                <th className=\"text-color-main h5\">Description</th>\n                <th className=\"text-color-main h5\">Achieved Date</th>\n                <th className=\"text-color-main h5\">Details</th>\n            </thead>\n            <tbody>\n                {\n                    props.achievements.map((achievement) => {\n                        let index = props.achievements.indexOf(achievement)\n                        return (\n                            <tr>\n                            <th scope=\"row\">{index+1}</th>\n                            <td>{achievement.title}</td>\n                            <td><h5><ApprovedBadge value={achievement.approved} /></h5></td>\n                            <td>{achievement.description}</td>\n                            <td>{new Date(achievement.achievedDate).toLocaleString('default', {day: \"2-digit\", month: 'short', year: \"numeric\" })}</td>\n                            <td>\n                                <Link to={\"/achievement/\"+achievement.id}>\n                                <Button color=\"info\" >View</Button>\n                                </Link>\n                            </td>\n                            </tr>\n                        )\n                    })\n                }\n            </tbody>\n        </Table>\n        </div>\n    );\n\n}\n\nfunction ProjectsTable(props) {\n    if(!props.projects)\n        return (\n            <Loading />\n        );\n    else if(props.projects.length === 0)\n        return (\n            <div className=\"w-100 rounded-3 p-3 bg-color-silver\">\n                <p className=\"h3 text-center my-5\">No projects to show</p>\n            </div>\n        );\n\n    return (\n        <div className=\"bg-color-off-white rounded-2 col-12\">\n        <Table hover responsive className=\"rounded-2\">\n            <thead>\n                <th className=\"text-color-main h5\">#</th>\n                <th className=\"text-color-main h5\">Title</th>\n                <th className=\"text-color-main h5\">Status</th>\n                <th className=\"text-color-main h5\">Description</th>\n                <th className=\"text-color-main h5\">Field</th>\n                <th className=\"text-color-main h5\">Domain</th>\n                <th className=\"text-color-main h5\">Details</th>\n            </thead>\n            <tbody>\n                {\n                    props.projects.map((project) => {\n                        let index = props.projects.indexOf(project)\n                        return (\n                            <tr>\n                            <th scope=\"row\">{index+1}</th>\n                            <td>{project.title}</td>\n                            <td><h5><ApprovedBadge value={project.approved} /></h5></td>\n                            <td>{project.description}</td>\n                            <td>{project.field}</td>\n                            <td>{project.domain}</td>\n                            <td>\n                                <Link to={\"/project/\"+project.id}>\n                                <Button color=\"info\">View</Button>\n                                </Link>\n                            </td>\n                            </tr>\n                        )\n                    })\n                }\n            </tbody>\n        </Table>\n        </div>\n    );\n\n}\n\nexport {Field, SocialMedia, AchievementsTable, ProjectsTable, FieldInput, FieldInputDropDown, InputSocialMedia};","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { Row, Col, Button, Input } from 'reactstrap';\nimport { AddInstitutionModal, listOfDegrees, RenderEducation } from '../../components/Extras';\nimport { fetchInstitutesList } from '../../redux/ActionCreators';\n\nconst mapStateToProps = (state) => ({\n    authorized: state.user.authorized,\n    token: state.user.token,\n    institutesList: state.forms.institutesList,\n    institutesLoading: state.forms.institutesLoading,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    fetchInstitutesList: (key) => dispatch(fetchInstitutesList(key))\n})\n\nfunction EditEducation(props) {\n    const [institute, setInstitute] = useState(1)\n    const [degree, setDegree] = useState(listOfDegrees[0])\n    const [year, setYear] = useState('')\n    const [isModalOpen, setIsModalOpen] = useState(false)\n\n    useEffect(() => {\n        if(!props.institutesList && !props.institutesLoading) {\n            props.fetchInstitutesList(props.token)\n        }\n    }, [props])\n\n    return (\n        <Row className=\"mt-3 mb-3\">\n            <AddInstitutionModal token={props.token} isModalOpen={isModalOpen} setIsModalOpen={setIsModalOpen} />\n            <Col md=\"4\">\n            <h3 className=\"font-weight-bold\">Education</h3>\n            </Col>\n            <Col md=\"8\">\n                <Row>\n                    {/* render education objects from education list */}\n                    {\n                        (props.educationList) ?\n                        <>\n                        {\n                            props.educationList.map((education) => (\n                                <>\n                                <Col xs={9} lg={10} className='pr-1'>\n                                    <RenderEducation\n                                        institution={(props.institutesList) ?\n                                            (props.institutesList.find((ins) => ins.id === education.institution)).title : ''}\n                                        degree={education.degree}\n                                        year={education.year}\n                                     />\n                                </Col>\n                                <Col xs={3} lg={2} className='pl-1'>\n                                    <Button\n                                        color='danger'\n                                        className='w-100'\n                                        onClick={() => props.setEducationList(props.educationList.filter((edu) => edu !== education))}\n                                        >\n                                        Delete\n                                    </Button>\n                                </Col>\n                                </>\n                            ))\n                        }\n                        </>\n                        :\n                        <></>\n                    }\n                </Row>\n                <Row className='mt-3'>\n                    <Col xs={4} lg={5} className='pr-1'>\n                        <Input type=\"select\" name=\"institution\" value={institute} onChange={e => setInstitute(e.target.value)} className=\"w-100\"\n                            disabled={props.institutesLoading}\n                            >\n                            <>\n                            {\n                                (props.institutesList) ?\n                                props.institutesList.map((institute) => {\n                                    return (\n                                        <option value={institute.id}>{institute.title}</option>\n                                    );\n                                })\n                                :\n                                <></>\n                            }\n                            </>\n                        </Input>\n                    </Col>\n                    <Col xs={3} className='px-1'>\n                        <Input type=\"select\" name=\"degree\" value={degree} onChange={e => setDegree(e.target.value)} className=\"w-100\">\n                            <>\n                            {\n                                (listOfDegrees) ?\n                                listOfDegrees.map((degree) => {\n                                    return (\n                                        <option value={degree}>{degree}</option>\n                                    );\n                                })\n                                :\n                                <></>\n                            }\n                            </>\n                        </Input>\n                    </Col>\n                    <Col xs={2} className='px-1'>\n                        <Input type=\"text\"\n                            value={year}\n                            onChange={e => setYear(e.target.value)}\n                            name=\"year\"\n                            placeholder=\"Year\"\n                            className=\"w-100\"\n                                />\n                    </Col>\n                    <Col xs={3} lg={2} className='pl-1'>\n                        <Button\n                            disabled={props.institutesLoading}\n                            outline\n                            className='w-100'\n                            onClick={() => {\n                                props.setEducationList([...props.educationList, {institution: parseInt(institute), degree, year: parseInt(year)}])\n                            }}\n                                >\n                            Add\n                        </Button>\n                    </Col>\n                </Row>\n                <Row className='mt-2'>\n                    <Col><Button color='link' onClick={() => setIsModalOpen(true)}>Can't find your institute? Click here to add institute.</Button></Col>\n                </Row>\n            </Col>\n        </Row>\n    );\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(EditEducation));","import React, {useState, useEffect} from 'react'\nimport { FieldInput } from '../../components/ProfileComponents'\nimport { withRouter } from 'react-router'\nimport Loading from '../../components/Loading';\nimport { connect } from 'react-redux';\nimport { Row, Col, Button } from 'reactstrap';\n\nimport { baseUrl } from '../../shared/baseUrl';\nimport EditEducation from './EditEducation';\n\nconst mapStateToProps = (state) => ({\n    profileLoaded: state.user.profileLoaded,\n    profile: state.user.profile,\n    authorized: state.user.authorized,\n    token: state.user.token\n})\n\nfunction patchStudentDetials(key, studId, studObject, setSaving, setSavingError, setSavingMessage) {\n    setSaving(true)\n    setSavingError(false)\n    setSavingMessage('')\n    fetch(baseUrl + 'main/api/student/' + studId + '/', {\n        method: 'PUT',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Token ' + key\n        },\n        body: JSON.stringify(studObject)\n    })\n    .then(response => {\n        if(response.ok)\n            return response\n        throw new Error('Error saving student details!')\n    })\n    .then(response => response.json())\n    .then(res => {\n        setSaving(false)\n        setSavingMessage('Student details successfully saved!')\n    })\n    .catch(err => {\n        console.log(err)\n        setSaving(false)\n        setSavingError(true)\n        setSavingMessage(err.message)\n    })\n}\n\nfunction EditStudentDetails(props) {\n    const [rollNo, setRollNo] = useState('')\n    const [batch, setBatch] = useState('')\n    const [major, setMajor] = useState('')\n    const [gpa, setGpa] = useState('')\n    const [bio, setBio] = useState('')\n    const [education, setEducation] = useState([])\n    const [studId, setStudId] = useState('')\n\n    const [error, setError] = useState('')\n    const [loading, setLoading] = useState(true)\n    const [saving, setSaving] = useState(false)\n    const [savingError, setSavingError] = useState(false)\n    const [savingMessage, setSavingMessage] = useState('')\n\n    useEffect(() => {\n        fetch(baseUrl+'main/api/student/', {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Token ' + props.token\n            }\n        })\n        .then(response => {\n            if(response.ok)\n                return response\n            throw new Error('Error fetching student details!')\n        })\n        .then(response => response.json())\n        .then(res => {\n            res = res[0]\n            setRollNo(res.rollNo)\n            setBatch(res.batch)\n            setMajor(res.major)\n            setGpa(res.GPA)\n            setBio(res.bio)\n            setEducation(res.education)\n            setStudId(res.id)\n            setLoading(false)\n        })\n        .catch(err => {\n            console.log(err)\n            setError(err.message)\n            setLoading(false)\n        })\n    }, [props.token])\n\n    return (\n        <>\n        <Row className=\"p-3 p-md-4 \">\n            <Col className=\"xs-12 text-center\">\n                <h2 className=\"font-weight-bold\">Edit Student Details</h2>\n            </Col>\n        </Row>\n        <Row>\n            <Col>\n            {\n                (loading) ?\n                <Loading />\n                :\n                (error) ?\n                <p xs={12} className='text-danger'>{error}</p>\n                :\n                <>\n                    <FieldInput title={\"Roll Number\"} value={rollNo} setValue={setRollNo} />\n                    <FieldInput title={\"Batch\"} value={batch} setValue={setBatch} type=\"number\" />\n                    <FieldInput title={\"Major\"} value={major} setValue={setMajor} />\n                    <FieldInput title={\"CGPA\"} value={gpa} setValue={setGpa} />\n                    {/* <FieldInput title={\"Bio\"} value={bio} setValue={setBio} type=\"textarea\" /> */}\n                    <EditEducation educationList={education} setEducationList={setEducation} />\n                    <Button\n                        color='success'\n                        disabled={saving}\n                        onClick={() => patchStudentDetials(props.token,\n                            studId,\n                            {\n                                rollNo: rollNo,\n                                batch: batch,\n                                major: major,\n                                GPA: gpa,\n                                bio: bio,\n                                education: education\n                            },\n                            setSaving, setSavingError, setSavingMessage\n                        )}\n                    >\n                        Save Student Details\n                    </Button>\n\n                    <p className={`${savingError ? 'text-danger' : 'text-success'} mt-3`}>\n                        {savingMessage}\n                    </p>\n                </>\n            }\n            </Col>\n        </Row>\n        </>\n    )\n}\n\nexport default withRouter(connect(mapStateToProps)(EditStudentDetails));","import React, {useState, useEffect} from 'react'\nimport { FieldInput, FieldInputDropDown } from '../../components/ProfileComponents'\nimport { withRouter } from 'react-router'\nimport Loading from '../../components/Loading';\nimport { connect } from 'react-redux';\nimport { Row, Col, Button } from 'reactstrap';\n\nimport { baseUrl } from '../../shared/baseUrl';\nimport EditEducation from './EditEducation';\nimport { listOfTitles } from '../../components/Extras';\n\nconst mapStateToProps = (state) => ({\n    profileLoaded: state.user.profileLoaded,\n    profile: state.user.profile,\n    authorized: state.user.authorized,\n    token: state.user.token\n})\n\nfunction patchStaffDetials(key, staffId, staffObject, setSaving, setSavingError, setSavingMessage) {\n    setSaving(true)\n    setSavingError(false)\n    setSavingMessage('')\n    fetch(baseUrl + 'main/api/staff/' + staffId + '/', {\n        method: 'PUT',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Token ' + key\n        },\n        body: JSON.stringify(staffObject)\n    })\n    .then(response => {\n        if(response.ok)\n            return response\n        throw new Error('Error saving staff details!')\n    })\n    .then(response => response.json())\n    .then(res => {\n        setSaving(false)\n        setSavingMessage('Staff details successfully saved!')\n    })\n    .catch(err => {\n        console.log(err)\n        setSaving(false)\n        setSavingError(true)\n        setSavingMessage(err.message)\n    })\n}\n\nfunction EditStaffDetails(props) {\n    const [empId, setEmpId] = useState('')\n    const [joiningDate, setJoiningDate] = useState('')\n    const [department, setDepartment] = useState('')\n    const [title, setTitle] = useState('')\n    const [designation, setDesignation] = useState('')\n    const [education, setEducation] = useState([])\n    const [staffId, setStaffId] = useState('')\n\n    const [error, setError] = useState('')\n    const [loading, setLoading] = useState(true)\n    const [saving, setSaving] = useState(false)\n    const [savingError, setSavingError] = useState(false)\n    const [savingMessage, setSavingMessage] = useState('')\n\n    useEffect(() => {\n        fetch(baseUrl+'main/api/staff/', {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Token ' + props.token\n            }\n        })\n        .then(response => {\n            if(response.ok)\n                return response\n            throw new Error('Error fetching student details!')\n        })\n        .then(response => response.json())\n        .then(res => {\n            res = res[0]\n            setEmpId(res.employeeId)\n            setJoiningDate(res.associatedSince)\n            setDepartment(res.department)\n            setTitle(res.title)\n            setDesignation(res.designation)\n            setEducation(res.education)\n            setStaffId(res.id)\n            setLoading(false)\n        })\n        .catch(err => {\n            console.log(err)\n            setError(err.message)\n            setLoading(false)\n        })\n    }, [props.token])\n\n    return (\n        <>\n        <Row className=\"p-3 p-md-4 \">\n            <Col className=\"xs-12 text-center\">\n                <h2 className=\"font-weight-bold\">Edit Staff Details</h2>\n            </Col>\n        </Row>\n        <Row>\n            <Col>\n            {\n                (loading) ?\n                <Loading />\n                :\n                (error) ?\n                <p xs={12} className='text-danger'>{error}</p>\n                :\n                <>\n                    <FieldInput title={\"Employee Id\"} value={empId} setValue={setEmpId} type=\"number\" />\n                    <FieldInput title={\"Joining Date\"} value={joiningDate} setValue={setJoiningDate} type=\"date\" />\n                    <FieldInput title={\"Department\"} value={department} setValue={setDepartment} />\n                    <FieldInputDropDown title=\"Title\" value={title} setValue={setTitle} values={listOfTitles} />\n                    {/* <FieldInput title={\"Title\"} value={title} setValue={setTitle} /> */}\n                    <FieldInput title={\"Designation\"} value={designation} setValue={setDesignation} />\n                    <EditEducation educationList={education} setEducationList={setEducation} />\n                    <Button\n                        color='success'\n                        disabled={saving}\n                        onClick={() => patchStaffDetials(props.token,\n                            staffId,\n                            {\n                                employeeId: empId,\n                                associatedSince: joiningDate,\n                                department: department,\n                                title: title,\n                                designation: designation,\n                                education: education\n                            },\n                            setSaving, setSavingError, setSavingMessage\n                        )}\n                    >\n                        Save Staff Details\n                    </Button>\n\n                    <p className={`${savingError ? 'text-danger' : 'text-success'} mt-3`}>\n                        {savingMessage}\n                    </p>\n                </>\n            }\n            </Col>\n        </Row>\n        </>\n    )\n}\n\nexport default withRouter(connect(mapStateToProps)(EditStaffDetails));","import React, { useEffect, useState } from 'react'\nimport { Redirect, withRouter } from 'react-router'\nimport { Container, Row, Col, FormGroup, Input, Label, Button } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport Loading from '../../components/Loading';\nimport { Field, FieldInput, FieldInputDropDown, InputSocialMedia } from '../../components/ProfileComponents'\nimport { fetchUserProfile, patchUserProfile } from '../../redux/ActionCreators';\nimport { Link } from 'react-router-dom';\nimport EditStudentDetails from './EditStudentDetails';\nimport EditStaffDetails from './EditStaffDetails';\nimport { baseUrl_ } from '../../shared/baseUrl';\n// import EditPhoneNumbers from './EditPhoneNumbers';\n\nconst mapStateToProps = (state) => ({\n    profileLoaded: state.user.profileLoaded,\n    profile: state.user.profile,\n    authorized: state.user.authorized,\n    token: state.user.token,\n    achievements: state.user.achievements,\n    projects: state.user.projects\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    fetchUserProfile: (key) => dispatch(fetchUserProfile(key)),\n    patchUserProfile: (key, id, studObj,\n        setSaving, setSavingMessage, setSavingSuccess\n    ) => dispatch(patchUserProfile(key, id, studObj,\n        setSaving, setSavingMessage, setSavingSuccess\n    ))\n});\n\nfunction Profile(props) {\n    useEffect(() => {\n        if(props.authorized && !props.profileLoaded)\n            props.fetchUserProfile(props.token);\n    }, [props])\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [phone, setPhone] = useState('')\n    const [showemail, setShowemail] = useState(false)\n    const [showphone, setShowphone] = useState(false)\n    const [group, setGroup] = useState('')\n    const [dob, setdob] = useState(undefined)\n    const [gender, setGender] = useState(0)\n    const [address, setAddress] = useState('')\n    const [github, setGithub] = useState('')\n    const [instagram, setInstagram] = useState('')\n    const [facebook, setFacebook] = useState('')\n    const [twitter, setTwitter] = useState('')\n    const [profilepic, setProfilepic] = useState('')\n\n    const [file, setFile] = useState('')\n\n    const [saving, setSaving] = useState(false)\n    const [savingMessage, setSavingMessage] = useState('')\n    const [savingSuccess, setSavingSuccess] = useState(true)\n\n    useEffect(() => {\n        setName(props.profile.name)\n        setGroup(props.profile.group)\n        setAddress(props.profile.address)\n        setGender(props.profile.gender)\n        setdob(props.profile.dob)\n        setEmail(props.profile.email)\n        setPhone(props.profile.phone_number)\n        setShowemail(props.profile.show_email)\n        setShowphone(props.profile.show_phone)\n        setTwitter(props.profile.twitter)\n        setFacebook(props.profile.instagram)\n        setGithub(props.profile.github)\n        setInstagram(props.profile.instagram)\n        if(props.profile.profile_pic)\n            setProfilepic(baseUrl_ + props.profile.profile_pic)\n    }, [props.profile])\n\n    if(!props.authorized)\n        return (\n            <Redirect to=\"/login\" />\n        );\n    else if(!props.profileLoaded) {\n        return(\n            <Loading />\n        );\n    }\n\n    // let skill_str = \"\"\n    // for(let i=0; i<props.profile.skills.length; ++i) {\n    //     skill_str += props.profile.skills[i]\n    //     if(i !== props.profile.skills.length-1)\n    //         skill_str += ', '\n    // }\n    return (\n        <Container className=\"p-4 p-md-5 mt-4 mb-4 bg-color-lightest-grey rounded-3\">\n            <Row className=\"p-3 p-md-4 \">\n                <Col className=\"xs-12 text-center\">\n                    <h2 className=\"font-weight-bold\">Edit Profile</h2>\n                </Col>\n            </Row>\n            <Row>\n                <Col md=\"4\">\n                    <img src={(profilepic && profilepic !== '.') ? profilepic : \"assets/Profile/dp.png\"}\n                        alt=\"profile\" className=\"rounded-circle w-100 p-3\"/>\n\n                    <p className=\"text-danger\">Note: Picture should be in 1:1 aspect ratio. File size less than 2 MB.</p>\n                    <Input type=\"file\" id=\"profile_pic\" name=\"profile_pic\"\n                        onChange={(e) => {\n                            if(!e.target.files[0])\n                                return\n\n                            setFile(e.target.files[0])\n\n                            var reader = new FileReader();\n                            reader.readAsDataURL(e.target.files[0]);\n\n                            reader.onloadend = () => {\n                                setProfilepic(reader.result)\n                            }\n                        }}/>\n                </Col>\n                <Col md=\"8\">\n                    <FieldInput title=\"Name\" value={name} setValue={setName} />\n                    <Field title=\"Role\" value={[\n                        \"Student\",\n                        \"Staff\",\n                        \"Admin\"\n                    ][props.profile.designation-1]} />\n                    <Field title=\"Email\" value={email} />\n                    <FieldInput title=\"Date of Birth\" value={dob}\n                        setValue={setdob} type=\"date\" />\n                    <FieldInputDropDown title=\"Gender\" value={gender} setValue={setGender}\n                        values={[{id: 1, title: \"Female\"}, {id: 2, title: \"Male\"}, {id: 3, title: \"Others\"}]} />\n                    {/* <FieldInput title=\"Group\" value={group} setValue={setGroup} /> */}\n                    {/* <EditPhoneNumbers /> */}\n                    <FieldInput title=\"Phone\" value={phone} setValue={setPhone} type=\"number\" />\n                    <Row className=\"mt-3 mb-3\">\n                        <Col md=\"4\">\n                        </Col>\n                        <Col md=\"8\">\n                            <FormGroup check inline>\n                                <Input id=\"showemail\" type=\"checkbox\" checked={showemail} onChange={(e) => setShowemail(e.target.checked)} />\n                                <Label check for=\"showemail\">\n                                Show Email\n                                </Label>\n                            </FormGroup>\n                            <FormGroup check inline>\n                                <Input id=\"showphone\" type=\"checkbox\" checked={showphone} onChange={(e) => setShowphone(e.target.checked)} />\n                                <Label check for=\"showphone\">\n                                Show Phone\n                                </Label>\n                            </FormGroup>\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n            {/* <Field title=\"Skills\" value={skill_str} /> */}\n            <FieldInput title=\"Bio\" value={address} setValue={setAddress} type=\"textarea\" />\n            <InputSocialMedia\n                instagram={instagram} setInstagram={setInstagram}\n                facebook={facebook} setFacebook={setFacebook}\n                twitter={twitter} setTwitter={setTwitter}\n                github={github} setGithub={setGithub}\n            />\n            <Button disabled={saving}\n            onClick={() => props.patchUserProfile(\n                props.token, props.profile.id,\n                {\n                    name: name,\n                    e_mail: email,\n                    phone_number: phone,\n                    show_email: showemail,\n                    show_phone: showphone,\n                    group: group,\n                    dob: dob,\n                    gender: gender,\n                    address: address,\n                    github: github,\n                    instagram: instagram,\n                    facebook: facebook,\n                    twitter: twitter,\n                    profile_pic: file\n                },\n                setSaving, setSavingMessage, setSavingSuccess\n            )} color=\"success\">\n                Save Changes\n            </Button>\n            <Link to={\"/profile/\"+props.profile.user}>\n            <Button color='primary' className='ml-3'>\n                View Public Profile\n            </Button>\n            </Link>\n            <p className={`${savingSuccess ? 'text-success' : 'text-danger'} mt-3`}>{savingMessage}</p>\n            {\n                (props.profile.designation === 1) ?\n                <EditStudentDetails />\n                :\n                <EditStaffDetails />\n            }\n        </Container>\n    )\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Profile));","export const baseUrl_ = '';\n// export const baseUrl_ = 'https://achievements-midas.herokuapp.com';\nexport const baseUrl = baseUrl_ + '/';","import React from 'react'\nimport {Row, Col, InputGroup, InputGroupText, Input, InputGroupAddon, Button} from 'reactstrap'\n\nfunction SearchBar({query, setQuery, onSearch}) {\n    return (\n        <Row className=\"w-100\">\n            <Col xs=\"9\">\n            <InputGroup className=\"rounded-pill p-0\">\n                <InputGroupAddon addonType=\"prepend\">\n                <InputGroupText className=\"text-color-main bg-color-lightest-grey\"> <i class=\"fa fa-search\" aria-hidden=\"true\"></i> </InputGroupText>\n                </InputGroupAddon>\n                <Input placeholder=\"Enter title\" value={query} onChange={(event) => {\n                        setQuery(event.target.value)\n                    }} className=\"p-3\"/>\n            </InputGroup>\n            </Col>\n            <Col xs=\"3\" className=\"p-0\">\n                <Button color=\"info\" onClick={onSearch} className=\"bg-color-main-ui w-100 rounded-pill\">Search</Button>\n            </Col>\n        </Row>\n    );\n}\n\nexport default SearchBar;","import React, { useState, useEffect } from 'react'\nimport { Col, Container, Row, Button, Table } from 'reactstrap';\nimport { Redirect, withRouter } from \"react-router\";\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport SearchBar from '../../components/Search'\nimport Loading from '../../components/Loading';\nimport NotFound from '../../components/NotFound'\nimport { baseUrl } from '../../shared/baseUrl';\n\nconst mapStateToProps = (state) => ({\n    authorized: state.user.authorized,\n    token: state.user.token,\n})\n\nfunction fetchProjects(key, query, setProjects, setLoading, setErrorMessage) {\n    let token_head = 'Token '+key;\n\n    fetch(baseUrl+'main/api/search?q='+query, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': token_head\n        }\n    })\n    .then((response) => {\n        if(!response.ok)\n            throw new Error('Unexpected error occurred!')\n        console.log(response.error)\n        return response\n    })\n    .then(response => response.json())\n    .then(response => {\n        console.log(response)\n        setProjects(response.projects.filter(project => project.approved === 'approved'))\n        setLoading(false)\n        return response\n    })\n    .catch(error => {\n        setLoading(false)\n        setErrorMessage(error.message)\n        console.log(error)\n    })\n}\n\nfunction Results( {projects} ) {\n    return (\n        <Table hover responsive className=\"rounded-2\">\n            <thead>\n                <th className=\"text-color-main h5\">#</th>\n                <th className=\"text-color-main h5\">Title</th>\n                <th className=\"text-color-main h5\">Description</th>\n                <th className=\"text-color-main h5\">Added By</th>\n                <th className=\"text-color-main h5\">Date Created</th>\n                <th className=\"text-color-main h5\">Details</th>\n            </thead>\n            <tbody>\n                {\n                    (projects) ?\n                    projects.map((project) => {\n                        return (\n                            <tr>\n                            <th scope=\"row\">{project.id}</th>\n                            <td>{project.title}</td>\n                            <td>{project.description}</td>\n                            <td>{(project.addedBy) ? project.addedBy.first_name: ''}</td>\n                            <td>{new Date(project.dateCreated).toLocaleString('default', {day: \"2-digit\", month: 'short', year: \"numeric\" })}</td>\n                            <td>\n                                <Link to={\"/project/\"+project.id}>\n                                    <Button color=\"info\">\n                                        View\n                                    </Button>\n                                </Link>\n                            </td>\n                            </tr>\n                        )\n                    })\n                    :\n                    <></>\n                }\n            </tbody>\n        </Table>\n    );\n}\n\nfunction Projects(props) {\n    const [loading, setLoading] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n    const [projects, setProjects] = useState(false);\n    const [query, setQuery] = useState('');\n\n    useEffect(() => {\n        setLoading(true);\n        fetchProjects(props.token, '', setProjects, setLoading, setErrorMessage);\n    }, [props.token])\n\n    if(!props.authorized)\n        return (<Redirect to='/login' />);\n\n    if(errorMessage)\n        return ( <NotFound message={errorMessage} /> );\n\n    return (\n        <Container className=\"p-3 p-md-4 mt-4 mb-4 bg-color-lightest-grey rounded-3\">\n            <Row>\n                <Col md={{size: 8, offset: 2}}>\n                    <SearchBar query={query} setQuery={setQuery} onSearch={ () => {\n                        setLoading(true)\n                        fetchProjects(props.token, query, setProjects, setLoading, setErrorMessage);\n                    }} />\n                </Col>\n            </Row>\n            {/* <Row className=\"mt-4 bg-color-off-white rounded-2 p-2\">\n                <Col xs=\"auto\">\n                    <h3 className=\"text-color-main font-weight-bold mb-0 mr-4 d-inline\">Filters</h3>\n                </Col>\n                <Col xs=\"auto\">\n\n                </Col>\n            </Row> */}\n            <Row className=\"mt-4\">\n                {\n                    (loading) ?\n                        <Loading />\n                    :\n                        <Results projects={projects}/>\n                }\n            </Row>\n        </Container>\n    )\n}\n\nexport default withRouter(connect(mapStateToProps)(Projects));","import React, { useEffect } from 'react';\nimport { Container, Row, Col, Button } from 'reactstrap'\nimport { withRouter, Redirect } from 'react-router-dom';\nimport { login, loginOSA } from '../../redux/ActionCreators';\nimport { connect } from 'react-redux';\nimport Loading from '../../components/Loading';\nimport Cookies from 'cookies-js';\n\nconst mapStateToProps = (state) => ({\n    authorized: state.user.authorized,\n    loggingIn: state.user.loggingIn,\n    error: state.user.error\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    login: (email, password) => {dispatch(login(email, password))},\n    loginOSA: () => {dispatch(loginOSA())}\n});\n\nfunction Login(props) {\n    useEffect(() => {\n        if(Cookies.get('osa_token'))\n            props.loginOSA()\n        // eslint-disable-next-line\n    }, [])\n\n    if(props.authorized)\n        return (\n            <Redirect to=\"/profile\" />\n        );\n    return (\n        <Container className=\"my-5\">\n            <Row className=\"rounded-3 shadow\">\n                <Col md=\"6\" className=\"d-none d-md-flex p-0\">\n                    <img src=\"assets/login.jpg\" alt=\"banner\" className=\"d-flex mx-auto w-100 h-100 rounded-left-3\"></img>\n                </Col>\n\n                <Col md=\"6\" xs=\"12\" className=\"py-3\">\n                    <Row>\n                        <Col xs=\"12\" className=\"d-flex mt-4\">\n                            <img src=\"IIITDLogo.png\" alt=\"IIITD Logo\" className=\"w-25 d-flex mx-auto mt-4 mb-4\"></img>\n                        </Col>\n                    </Row>\n\n                    <Row className=\"pl-md-5 pr-md-5 pl-xs-2 pr-xs-2 mt-3\">\n                        <Col xs=\"12\">\n                            <p className=\"h4 text-danger\">{props.error}</p>\n                            {\n                                (props.loggingIn) ?\n                                <Loading />\n                                :\n                                <p className='text-center text-primary font-weight-bold h4 my-5 px-4'>Login on OSA Website first, and then hit refresh!</p>\n                            }\n                        </Col>\n                        \n                        <Col xs=\"12\">\n                            <p>\n                            Not Registered Yet? Sign up on OSA website.\n                            </p>\n                            <a href='http://osa.iiitd.edu.in/' target='_blank' rel='noreferrer'>\n                                <Button color=\"info\" className='bg-color-main-ui px-5 rounded-pill mb-3'>Go to OSA Website</Button>\n                            </a>\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Login));","import React, { Component } from 'react';\r\nimport { Container, Row, Col, Form, FormGroup, Input, Button } from 'reactstrap'\r\nimport { withRouter, Redirect } from 'react-router-dom';\r\nimport { login, loginOSA } from '../../redux/ActionCreators';\r\nimport { connect } from 'react-redux';\r\nimport Loading from '../../components/Loading';\r\n\r\nconst mapStateToProps = (state) => ({\r\n    authorized: state.user.authorized,\r\n    loggingIn: state.user.loggingIn,\r\n    error: state.user.error\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    login: (email, password) => {dispatch(login(email, password))},\r\n    loginOSA: (email, password) => {dispatch(loginOSA(email, password))}\r\n});\r\n\r\nclass LoginOld extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\"\r\n        }\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleUsernameChange = this.handleUsernameChange.bind(this);\r\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n    }\r\n\r\n    handleUsernameChange(event) {\r\n        this.setState({username: event.target.value});\r\n    }\r\n    handlePasswordChange(event) {\r\n        this.setState({password: event.target.value});\r\n    }\r\n    handleSubmit(event) {\r\n        this.props.login(this.state.username, this.state.password);\r\n    }\r\n\r\n    render() {\r\n        if(this.props.authorized)\r\n            return (\r\n                <Redirect to=\"/profile\" />\r\n            );\r\n        return (\r\n            <Container className=\"my-5\">\r\n                <Row className=\"rounded-3 shadow\">\r\n                    <Col md=\"6\" className=\"d-none d-md-flex p-0\">\r\n                        <img src=\"assets/login.jpg\" alt=\"banner\" className=\"d-flex mx-auto w-100 h-100 rounded-left-3\"></img>\r\n                    </Col>\r\n\r\n                    <Col md=\"6\" xs=\"12\"\r\n                        className=\"py-3\">\r\n                        <Row>\r\n                            <Col xs=\"12\" className=\"d-flex mt-4\">\r\n                                <img src=\"IIITDLogo.png\" alt=\"IIITD Logo\" className=\"w-25 d-flex mx-auto mt-4 mb-4\"></img>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row className=\"pl-md-5 pr-md-5 pl-xs-2 pr-xs-2 mt-3\">\r\n                            <Col xs=\"12\">\r\n                            <p className=\"h4 text-danger\">{this.props.error}</p>\r\n                            <Form>\r\n                                <FormGroup>\r\n                                    <Input type=\"text\" name=\"username\" id=\"username\" placeholder=\"Username\"\r\n                                        value={this.state.username} onChange={this.handleUsernameChange}/>\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Password\"\r\n                                        value={this.state.password} onChange={this.handlePasswordChange}/>\r\n                                </FormGroup>\r\n\r\n                                <Button color=\"info\" disabled={this.props.loggingIn}\r\n                                    onClick={() => this.props.loginOSA(this.state.username, this.state.password)}\r\n                                    className='bg-color-main-ui w-50 rounded-pill mt-3 mb-4'>\r\n                                        Login OSA\r\n                                </Button>\r\n                                <br />\r\n                                <Button color=\"info\" disabled={this.props.loggingIn}\r\n                                    onClick={this.handleSubmit}\r\n                                    className='bg-color-main-ui w-50 rounded-pill'>\r\n                                        Login\r\n                                </Button>\r\n                            </Form>\r\n                            </Col>\r\n\r\n                            {\r\n                                this.props.loggingIn ?\r\n                                    <Col xs = \"12\">\r\n                                        <Loading margin=\"my-2\" />\r\n                                    </Col>\r\n                                :\r\n                                    <>\r\n                                    <Col xs=\"12\">\r\n                                        <p>\r\n                                        Not Registered Yet?\r\n                                        </p>\r\n                                        <a href='http://osa.iiitd.edu.in/' target='_blank' rel='noreferrer'>\r\n                                            <Button color=\"info\" className='bg-color-main-ui w-50 rounded-pill mb-3'>Sign Up</Button>\r\n                                        </a>\r\n                                    </Col>\r\n                                    </>\r\n                            }\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(LoginOld));","import React from 'react';\nimport { Container, Row, Col, Form, FormGroup, Input, Button } from 'reactstrap'\nimport {Link} from 'react-router-dom'\n\nfunction SignUp(props) {\n\n    return (\n        <Container className=\"my-5\">\n            <Row className=\"rounded-3 shadow\">\n                <Col md=\"6\" className=\"d-none d-md-flex p-0\">\n                    <img src=\"assets/login.jpg\" alt=\"banner\" className=\"d-flex mx-auto w-100 h-100 rounded-left-3\"></img>\n                </Col>\n                \n                <Col md=\"6\" xs=\"12\">\n                    <Row>\n                        <Col xs=\"12\" className=\"d-flex mt-4\">\n                            <img src=\"IIITDLogo.png\" alt=\"IIITD Logo\" className=\"w-25 mt-3 d-flex m-auto\"></img>\n                        </Col>\n                    </Row>\n\n                    <Row className=\"pl-md-5 pr-md-5 pl-xs-2 pr-xs-2 mt-3\">\n                        <Col xs=\"12\">\n                        <Form>\n                            <FormGroup>\n                                <Input type=\"text\" name=\"Name\" id=\"fullname\" placeholder=\"Full Name\" />\n                            </FormGroup>\n                            <FormGroup>\n                                <Input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Email\" />\n                            </FormGroup>\n                            <FormGroup>\n                                <Input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Password\" />\n                            </FormGroup>\n                            <Button color=\"info\" className='bg-color-main-ui rounded-pill w-50 mt-3 mb-4'>Register</Button>\n                        </Form>\n                        </Col>\n\n                        <Col xs=\"12\">\n                            <p>\n                            Already Registered?\n                            </p>\n                            <Link to=\"/login\">\n                                <Button color=\"info\" className='bg-color-main-ui rounded-pill w-50  mb-3'>Login</Button>\n                            </Link>\n                        </Col>\n\n                        <Col xs=\"12\">\n                            <hr/>\n                        </Col>\n\n                        <Col>\n                            <Button outline color='danger' className='w-100 rounded-pill mt-3 mb-4'>\n                                <i className=\"fa fa-lg fa-google mr-3\" aria-hidden=\"true\"></i>\n                                Continue With Google\n                            </Button>\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default SignUp;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect, withRouter } from 'react-router';\nimport { Container, Row, Col, Label, Button, Form, Input, CustomInput } from 'reactstrap';\nimport { fetchStudentsList, fetchInstitutesList, fetchTagsList, postTag, postNewAchievement, addAchievementPostingSuccess, patchAchievement } from '../../redux/ActionCreators';\nimport { AddInstitutionModal } from '../../components/Extras';\n\nconst mapStateToProps = (state) => ({\n    authorized: state.user.authorized,\n    token: state.user.token,\n\n    studentsList: state.forms.studentsList,\n    studentsLoading: state.forms.studentsLoading,\n\n    institutesList: state.forms.institutesList,\n    institutesLoading: state.forms.institutesLoading,\n\n    tagsList: state.forms.tagsList,\n    tagsLoading: state.forms.tagsLoading,\n\n    awardCategory: state.forms.awardCategory,\n\n    addAchievementPosting: state.forms.addAchievementPosting,\n    addAchievementPostingError: state.forms.addAchievementPostingError,\n    addAchievementPostingMessage: state.forms.addAchievementPostingMessage\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    fetchStudentsList: (key) => dispatch(fetchStudentsList(key)),\n    fetchInstitutesList: (key) => dispatch(fetchInstitutesList(key)),\n    fetchTagsList: (key) => dispatch(fetchTagsList(key)),\n    postNewAchievement: (key, stateObj, clearFunction) => dispatch(postNewAchievement(key, stateObj, clearFunction)),\n    patchAchievement: (key, stateObj, clearFunction, achievementId) => dispatch(patchAchievement(key, stateObj, clearFunction, achievementId)),\n    addAchievementPostingMessageClear: () => dispatch(addAchievementPostingSuccess('')),\n    postTag: (key, tag, callback, errorFunction) => dispatch(postTag(key, tag, callback, errorFunction))\n})\n\nconst initialState = {\n    title: '',\n    description: '',\n    institution: 1,\n    dateofachievement: '',\n    team: [],\n    teamInput: '',\n    teamAdding: false,\n    teamInputErr: '',\n    tags: [],\n    tagsInput: '',\n    tagsAdding: false,\n    tagsInputErr: '',\n    category: 0,\n    type: false,\n    proof: null,\n    file: null,\n    progress: 0,\n    isModalOpen: false\n}\n\nclass AddAchievement extends Component {\n    constructor(props) {\n        super(props);\n        this.state = initialState\n\n        if(props.edit) {\n            this.state.title = props.achievementDetails.title\n            this.state.description = props.achievementDetails.description\n            this.state.institution = props.achievementDetails.institution\n            this.state.dateofachievement = props.achievementDetails.achievedDate\n            this.state.category = props.achievementDetails.category\n            this.state.proof = props.achievementDetails.proof\n            if(props.achievementDetails.tags)\n                this.state.tags = props.achievementDetails.tags\n            if(props.achievementDetails.teamMembers)\n                this.state.team = props.achievementDetails.teamMembers\n        }\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.addTeamMember = this.addTeamMember.bind(this);\n        this.addTag = this.addTag.bind(this);\n        this.addTeamMember = this.addTeamMember.bind(this);\n        this.removeFromList = this.removeFromList.bind(this);\n        this.clearState = this.clearState.bind(this);\n        this.handleFileChange = this.handleFileChange.bind(this);\n    }\n\n    clearState() {\n        this.setState(initialState);\n    }\n\n    handleInputChange(event) {\n        const target = event.target\n        const value = target.value\n        const name = target.name\n\n        this.setState({\n            [name] : value,\n            [name+\"Err\"] : '',\n        })\n\n        if(this.props.addAchievementPostingMessage)\n            this.props.addAchievementPostingMessageClear();\n    }\n\n    handleFileChange(event) {\n        if(event.target.files[0]) {\n            this.setState({\n                file : event.target.files[0]\n            })\n        }\n    }\n\n    handleSubmit(event) {\n        console.log('Submit detected.')\n        if(this.props.edit)\n            this.props.patchAchievement(this.props.token, this.state, this.clearState, this.props.achievementDetails.id);\n        else\n            this.props.postNewAchievement(this.props.token, this.state, this.clearState);\n        event.preventDefault();\n    }\n\n    componentDidMount() {\n        if(!this.props.studentsLoading && !this.props.studentsList)\n            this.props.fetchStudentsList(this.props.token)\n        if(!this.props.tagsLoading && !this.props.tagsList)\n            this.props.fetchTagsList(this.props.token)\n        if(!this.props.institutesLoading && !this.props.institutesList)\n            this.props.fetchInstitutesList(this.props.token)\n    }\n\n    addTeamMember() {\n        this.setState({teamAdding: true})\n        var studentObj = this.props.studentsList.find(student => student.user__email === this.state.teamInput)\n        var validation = studentObj !== undefined\n        console.log(this.props.studentsList)\n\n        if(validation && this.state.team.indexOf(studentObj) === -1) {\n            this.setState({\n                team: [...this.state.team, studentObj],\n                teamInput: ''\n            })\n        }\n        else if (this.state.team.indexOf(studentObj) !== -1) {\n            this.setState({\n                teamInputErr : 'Team member already added!'\n            })\n        }\n        else {\n            this.setState({\n                teamInputErr : 'No such student found in our database!'\n            })\n        }\n        this.setState({teamAdding: false})\n    }\n\n    capitalize(input) {\n        return input.split(' ').map(s => s.charAt(0).toUpperCase() + s.substring(1)).join(' ');\n    }\n\n    addTag() {\n        this.setState({tagsAdding: true})\n        var tagObj = this.props.tagsList.find(tag => tag.title.toUpperCase() === this.state.tagsInput.toUpperCase())\n        var validation = tagObj !== undefined\n        var processing = false\n\n        console.log(this.props.tagsList, this.state.tagsInput, tagObj)\n\n        if(validation && this.state.tags.indexOf(tagObj) === -1) {\n            this.setState({\n                tags: [...this.state.tags, tagObj],\n                tagsInput: ''\n            })\n        }\n        else if (this.state.tags.indexOf(tagObj) !== -1) {\n            this.setState({\n                tagsInput : 'Tag Already Added!'\n            })\n        }\n        else {\n            processing = true\n            this.props.postTag(this.props.token, this.capitalize(this.state.tagsInput),\n            (tagObj) => {\n                this.setState({\n                    tags: [...this.state.tags, tagObj],\n                    tagsInput : '',\n                    tagsAdding: false\n                })\n            }\n            , (message) => {\n                this.setState({\n                    tagsInputErr: message,\n                    tagsAdding: false\n                })\n            })\n        }\n        if (!processing) this.setState({tagsAdding: false})\n    }\n\n    removeFromList(listName, item) {\n        let list = this.state[listName]\n        let ind = list.indexOf(item);\n        list.splice(ind, 1)\n        this.setState({\n            [listName]: list\n        })\n    }\n\n    render(){\n        if(!this.props.authorized)\n            return (\n                <Redirect to=\"/login\" />\n            )\n        return(\n            <Container className=\"my-5 bg-color-lightest-grey p-4 p-md-5 rounded-3\">\n                <h2 className=\"font-weight-bold text-center\">{(this.props.edit ? 'Edit' : 'Add')} Achievement</h2>\n                <Form className=\"mt-5\" onSubmit={this.handleSubmit}>\n                    <Row className=\"form-group\">\n                        <Label htmlFor=\"title\" md={3}>\n                            <h4 className=\"font-weight-bold\">Title</h4>\n                        </Label>\n                        <Col md={9}>\n                            <Input type=\"text\"\n                                value={this.state.title}\n                                onChange={this.handleInputChange}\n                                name=\"title\"\n                                placeholder=\"Enter title\"\n                                className=\"w-100\"\n                                    />\n                        </Col>\n                    </Row>\n\n                    <Row className=\"form-group\">\n                        <Label htmlFor=\"description\" md={3}>\n                            <h4 className=\"font-weight-bold\">Description</h4>\n                        </Label>\n                        <Col md={9}>\n                            <Input type=\"textarea\"\n                                value={this.state.description}\n                                onChange={this.handleInputChange}\n                                name=\"description\"\n                                placeholder=\"Enter description\"\n                                className=\"w-100 px-2\"\n                                    />\n                        </Col>\n                    </Row>\n\n                    <Row className=\"form-group\">\n                        <Label htmlFor=\"category\" md={3}>\n                            <h4 className=\"font-weight-bold\">Category</h4>\n                        </Label>\n                        <Col md={9}>\n                            <Input type=\"select\" name=\"category\" value={this.state.category} onChange={this.handleInputChange} className=\"w-100\">\n                                <>\n                                {\n                                    this.props.awardCategory.map((category) => {\n                                        return (\n                                            <option value={category.id}>{category.title}</option>\n                                        );\n                                    })\n                                }\n                                </>\n                            </Input>\n                        </Col>\n                    </Row>\n\n                    <Row className=\"form-group\">\n                        <Label htmlFor=\"type\" md={3}>\n                            <h4 className=\"font-weight-bold\">Type</h4>\n                        </Label>\n                        <Col md={9}>\n                            <Input type=\"select\" name=\"type\" value={this.state.type} onChange={this.handleInputChange} className=\"w-100\">\n                                <option value={true}>Technical</option>\n                                <option value={false}>Non Technical</option>\n                            </Input>\n                        </Col>\n                    </Row>\n\n                    <Row className=\"form-group\">\n                        <Label htmlFor=\"institution\" md={3}>\n                            <h4 className=\"font-weight-bold\">Institution</h4>\n                        </Label>\n                        <Col md={9}>\n                            <Input type=\"select\" name=\"institution\" value={this.state.institution} onChange={this.handleInputChange} className=\"w-100\"\n                                disabled={this.props.institutesLoading}\n                             >\n                                <>\n                                {\n                                    (this.props.institutesList) ?\n                                    this.props.institutesList.map((institute) => {\n                                        return (\n                                            <option value={institute.id}>{institute.title}</option>\n                                        );\n                                    })\n                                    :\n                                    <></>\n                                }\n                                </>\n                            </Input>\n                            <AddInstitutionModal isModalOpen={this.state.isModalOpen} setIsModalOpen={(value) => this.setState({isModalOpen: value})} />\n                            <Button color='link' onClick={() => this.setState({isModalOpen: true})} className='mt-2'>Can't find your institute? Click here to add institute.</Button>\n                        </Col>\n                    </Row>\n\n                    <Row className=\"form-group\">\n                        <Label htmlFor=\"dateofachievement\" md={3}>\n                            <h4 className=\"font-weight-bold\">Date of Achievement</h4>\n                        </Label>\n                        <Col md={3} className=\"d-flex\">\n                            <Input type=\"date\"\n                                name=\"dateofachievement\"\n                                value={this.state.dateofachievement}\n                                onChange={this.handleInputChange}\n                                className=\"d-flex my-auto\"\n                                    />\n                        </Col>\n                    </Row>\n\n                    <Row className=\"form-group\">\n                        <Label htmlFor=\"teamInput\" md={3}>\n                            <h4 className=\"font-weight-bold\">Team Members</h4>\n                        </Label>\n                        <Col md={9}>\n                            <Row>\n                            <Col xs={7} md={8} lg={9}>\n                                <Input type=\"email\"\n                                    name=\"teamInput\"\n                                    value={this.state.teamInput}\n                                    onChange={this.handleInputChange}\n                                    placeholder=\"Enter team member's email ID\"\n                                    />\n                                <p className=\"text-danger m-0 px-2\">{this.state.teamInputErr}</p>\n                            </Col>\n                            <Col xs={5} md={4} lg={3} className=\"pl-0\">\n                                <Button color=\"info\" className=\"w-100\" onClick={this.addTeamMember}\n                                    disabled={this.props.studentsLoading\n                                        || this.state.teamAdding}\n                                 >\n                                    Add Member\n                                </Button>\n                            </Col>\n                            <Col xs={12} className=\"mt-1\">\n                                <div className=\"box w-100\">\n                                {\n                                    this.state.team.map((member) => {\n                                        return (\n                                            <div className=\"rounded-pill p-2 pl-3 mr-2 mt-2 bg-color-off-white d-inline-block\">\n                                                {member.user__email}\n                                                <Button className=\"rounded-circle ml-3\"\n                                                    size=\"sm\" color=\"danger\"\n                                                    onClick={() => this.removeFromList('team', member)}\n                                                        >\n                                                    <i className=\"fa fa-times\"></i>\n                                                </Button>\n                                            </div>\n                                        );\n                                    })\n                                }\n                                </div>\n                            </Col>\n                            </Row>\n                        </Col>\n                    </Row>\n\n                    <Row className=\"form-group\">\n                        <Label htmlFor=\"tagsInput\" md={3}>\n                            <h4 className=\"font-weight-bold\">Tags</h4>\n                        </Label>\n                        <Col md={9}>\n                            <Row>\n                            <Col xs={7} md={8} lg={9}>\n                                <Input type=\"email\"\n                                    name=\"tagsInput\"\n                                    value={this.state.tagsInput}\n                                    onChange={this.handleInputChange}\n                                    placeholder=\"Enter tags\"\n                                    />\n                            </Col>\n                            <Col xs={5} md={4} lg={3} className=\"pl-0\">\n                                <Button color=\"info\" className=\"w-100\" onClick={this.addTag}\n                                    disabled={this.props.tagsLoading\n                                        || this.state.tagsAdding}\n                                 >\n                                    Add Tag\n                                </Button>\n                            </Col>\n                            <Col xs={12} className=\"mt-1\">\n                                <div className=\"box w-100\">\n                                {\n                                    this.state.tags.map((tag) => {\n                                        return (\n                                            <div className=\"rounded-pill p-2 pl-3 mr-2 mt-2 bg-color-off-white d-inline-block\">\n                                                {tag.title}\n                                                <Button className=\"rounded-circle ml-3\"\n                                                    size=\"sm\" color=\"danger\"\n                                                    onClick={() => this.removeFromList('tags', tag)}\n                                                        >\n                                                    <i className=\"fa fa-times\"></i>\n                                                </Button>\n                                            </div>\n                                        );\n                                    })\n                                }\n                                </div>\n                            </Col>\n                            </Row>\n                        </Col>\n                    </Row>\n\n                    <Row className=\"form-group\">\n                        <Label md={3}>\n                            <h4 className=\"font-weight-bold\">Proof</h4>\n                        </Label>\n                        <Col md={9}>\n                            <CustomInput type=\"file\" id=\"proof\" name=\"proof\"\n                                onChange={this.handleFileChange}/>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col xs=\"12\">\n                            <Button color=\"success\" className=\"mr-3\"\n                                disabled={this.props.addAchievementPosting}\n                             >\n                                Request for Approval\n                            </Button>\n                            <Button color=\"danger\" onClick={this.clearState}\n                                disabled={this.props.addAchievementPosting}\n                             >\n                                Clear Form\n                            </Button>\n                        </Col>\n\n                        <Col xs=\"12\" className=\"mt-2\">\n                            <h6 className={`${this.props.addAchievementPostingError ? \"text-danger\" : \"text-success\"}`}>\n                                {this.props.addAchievementPostingMessage}\n                            </h6>\n                        </Col>\n                    </Row>\n                </Form>\n            </Container>\n        )\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddAchievement));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect, withRouter } from 'react-router';\nimport { Container, Row, Col, Label, Button, Form, Input} from 'reactstrap';\n// import Loading from '../../components/Loading';\nimport { fetchStudentsList, fetchProfessorsList, fetchInstitutesList, fetchTagsList, postTag, postNewProject, addProjectPostingSuccess, patchProject } from '../../redux/ActionCreators';\nimport { AddInstitutionModal } from '../../components/Extras';\n\nconst mapStateToProps = (state) => ({\n    authorized: state.user.authorized,\n    token: state.user.token,\n\n    professorsList: state.forms.professorsList,\n    professorsLoading: state.forms.professorsLoading,\n\n    studentsList: state.forms.studentsList,\n    studentsLoading: state.forms.studentsLoading,\n\n    institutesList: state.forms.institutesList,\n    institutesLoading: state.forms.institutesLoading,\n\n    tagsList: state.forms.tagsList,\n    tagsLoading: state.forms.tagsLoading,\n\n    addProjectPosting: state.forms.addProjectPosting,\n    addProjectPostingError: state.forms.addProjectPostingError,\n    addProjectPostingMessage: state.forms.addProjectPostingMessage\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    fetchStudentsList: (key) => dispatch(fetchStudentsList(key)),\n    fetchProfessorsList: (key) => dispatch(fetchProfessorsList(key)),\n    fetchInstitutesList: (key) => dispatch(fetchInstitutesList(key)),\n    fetchTagsList: (key) => dispatch(fetchTagsList(key)),\n    postNewProject: (key, stateObj, clearFunction) => dispatch(postNewProject(key, stateObj, clearFunction)),\n    patchProject: (key, stateObj, clearFunction, projectId) => dispatch(patchProject(key, stateObj, clearFunction, projectId)),\n    addProjectPostingMessageClear: () => dispatch(addProjectPostingSuccess('')),\n    postTag: (key, tag, callback, errorFunction) => dispatch(postTag(key, tag, callback, errorFunction))\n})\n\nconst initialState = {\n    title: '',\n    description: '',\n    institution: 1,\n    startdate: '',\n    enddate: '',\n    field: '',\n    domain: '',\n    mentors: [],\n    mentorsInput: '',\n    mentorAdding: false,\n    mentorsInputErr: '',\n    team: [],\n    teamInput: '',\n    teamAdding: false,\n    teamInputErr: '',\n    tags: [],\n    tagsInput: '',\n    tagsAdding: false,\n    tagsInputErr: '',\n    category: 0,\n    type: false,\n    url: null,\n    progress: 0,\n    isModalOpen: false\n}\n\nclass AddProject extends Component {\n    constructor(props) {\n        super(props);\n        this.state = initialState\n        if(props.edit) {\n            this.state.title = props.projectDetails.title\n            this.state.description = props.projectDetails.description\n            this.state.institution = props.projectDetails.institution\n            this.state.startdate = props.projectDetails.startDate\n            this.state.enddate = props.projectDetails.endDate\n            this.state.field = props.projectDetails.field\n            this.state.domain = props.projectDetails.domain\n            this.state.url = props.projectDetails.url\n            if(props.projectDetails.tags)\n                this.state.tags = props.projectDetails.tags\n            if(props.projectDetails.mentors)\n                this.state.mentors = props.projectDetails.mentors\n            if(props.projectDetails.members)\n                this.state.members = props.projectDetails.members\n        }\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.addTeamMember = this.addTeamMember.bind(this);\n        this.addMentor = this.addMentor.bind(this);\n        this.addTag = this.addTag.bind(this);\n        this.addTeamMember = this.addTeamMember.bind(this);\n        this.removeFromList = this.removeFromList.bind(this);\n        this.clearState = this.clearState.bind(this);\n    }\n\n    clearState() {\n        this.setState(initialState);\n    }\n\n    handleInputChange(event) {\n        const target = event.target\n        const value = target.value\n        const name = target.name\n\n        this.setState({\n            [name] : value,\n            [name+\"Err\"] : '',\n        })\n\n        if(this.props.addProjectPostingMessage)\n            this.props.addProjectPostingMessageClear();\n    }\n\n    handleSubmit(event) {\n        console.log('Submit detected.')\n        if(this.props.edit)\n            this.props.patchProject(this.props.token, this.state, this.clearState, this.props.projectDetails.id);\n        else\n            this.props.postNewProject(this.props.token, this.state, this.clearState);\n        event.preventDefault();\n    }\n\n    componentDidMount() {\n        if(!this.props.professorsLoading && !this.props.professorsList)\n            this.props.fetchProfessorsList(this.props.token)\n        if(!this.props.studentsLoading && !this.props.studentsList)\n            this.props.fetchStudentsList(this.props.token)\n        if(!this.props.tagsLoading && !this.props.tagsList)\n            this.props.fetchTagsList(this.props.token)\n        if(!this.props.institutesLoading && !this.props.institutesList)\n            this.props.fetchInstitutesList(this.props.token)\n    }\n\n    addTeamMember() {\n        this.setState({teamAdding: true})\n        var studentObj = this.props.studentsList.find(student => student.user__email === this.state.teamInput)\n        var validation = studentObj !== undefined\n        console.log(this.props.studentsList)\n\n        if(validation && this.state.team.indexOf(studentObj) === -1) {\n            this.setState({\n                team: [...this.state.team, studentObj],\n                teamInput: ''\n            })\n        }\n        else if (this.state.team.indexOf(studentObj) !== -1) {\n            this.setState({\n                teamInputErr : 'Team member already added!'\n            })\n        }\n        else {\n            this.setState({\n                teamInputErr : 'No such student found in our database!'\n            })\n        }\n        this.setState({teamAdding: false})\n    }\n\n    addMentor() {\n        this.setState({mentorAdding: true})\n        var profObj = this.props.professorsList.find(prof => prof.user__email === this.state.mentorsInput)\n        var validation = profObj !== undefined\n\n        if(validation && this.state.mentors.indexOf(profObj) === -1) {\n            this.setState({\n                mentors: [...this.state.mentors, profObj],\n                mentorsInput: ''\n            })\n        }\n        else if (this.state.mentors.indexOf(profObj) !== -1) {\n            this.setState({\n                mentorsInputErr : 'Mentor already added!'\n            })\n        }\n        else {\n            this.setState({\n                mentorsInputErr : 'No such mentor found in our database!'\n            })\n        }\n        this.setState({mentorAdding: false})\n    }\n\n    capitalize(input) {\n        return input.split(' ').map(s => s.charAt(0).toUpperCase() + s.substring(1)).join(' ');\n    }\n\n    addTag() {\n        this.setState({tagsAdding: true})\n        var tagObj = this.props.tagsList.find(tag => tag.title.toUpperCase() === this.state.tagsInput.toUpperCase())\n        var validation = tagObj !== undefined\n        var processing = false\n\n        console.log(this.props.tagsList, this.state.tagsInput, tagObj)\n\n        if(validation && this.state.tags.indexOf(tagObj) === -1) {\n            this.setState({\n                tags: [...this.state.tags, tagObj],\n                tagsInput: ''\n            })\n        }\n        else if (this.state.tags.indexOf(tagObj) !== -1) {\n            this.setState({\n                tagsInput : 'Tag Already Added!'\n            })\n        }\n        else {\n            processing = true\n            this.props.postTag(this.props.token, this.capitalize(this.state.tagsInput),\n            (tagObj) => {\n                this.setState({\n                    tags: [...this.state.tags, tagObj],\n                    tagsInput : '',\n                    tagsAdding: false\n                })\n            }\n            , (message) => {\n                this.setState({\n                    tagsInputErr: message,\n                    tagsAdding: false\n                })\n            })\n        }\n        if (!processing) this.setState({tagsAdding: false})\n    }\n\n    removeFromList(listName, item) {\n        let list = this.state[listName]\n        let ind = list.indexOf(item);\n        list.splice(ind, 1)\n        this.setState({\n            [listName]: list\n        })\n    }\n\n    render(){\n        if(!this.props.authorized)\n            return (\n                <Redirect to=\"/login\" />\n            )\n        return(\n            <Container className=\"my-5 bg-color-lightest-grey p-4 p-md-5 rounded-3\">\n                <h2 className=\"font-weight-bold text-center\">{(this.props.edit ? 'Edit' : 'Add')} Project</h2>\n                <Form className=\"mt-5\" onSubmit={this.handleSubmit}>\n                    <Row className=\"form-group\">\n                        <Label htmlFor=\"title\" md={3}>\n                            <h4 className=\"font-weight-bold\">Title</h4>\n                        </Label>\n                        <Col md={9}>\n                            <Input type=\"text\"\n                                value={this.state.title}\n                                onChange={this.handleInputChange}\n                                name=\"title\"\n                                placeholder=\"Enter title\"\n                                className=\"w-100\"\n                                    />\n                        </Col>\n                    </Row>\n\n                    <Row className=\"form-group\">\n                        <Label htmlFor=\"description\" md={3}>\n                            <h4 className=\"font-weight-bold\">Description</h4>\n                        </Label>\n                        <Col md={9}>\n                            <Input type=\"textarea\"\n                                value={this.state.description}\n                                onChange={this.handleInputChange}\n                                name=\"description\"\n                                placeholder=\"Enter description\"\n                                className=\"w-100 px-2\"\n                                    />\n                        </Col>\n                    </Row>\n\n                    <Row className=\"form-group\">\n                        <Label htmlFor=\"description\" md={3}>\n                            <h4 className=\"font-weight-bold\">URL</h4>\n                        </Label>\n                        <Col md={9}>\n                            <Input type=\"text\"\n                                value={this.state.url}\n                                onChange={this.handleInputChange}\n                                name=\"url\"\n                                placeholder=\"Enter URL\"\n                                className=\"w-100 px-2\"\n                                    />\n                        </Col>\n                    </Row>\n\n                    <Row className=\"form-group\">\n                        <Label htmlFor=\"institution\" md={3}>\n                            <h4 className=\"font-weight-bold\">Institution</h4>\n                        </Label>\n                        <Col md={9}>\n                            <Input type=\"select\" name=\"institution\" value={this.state.institution} onChange={this.handleInputChange} className=\"w-100\"\n                                disabled={this.props.institutesLoading}\n                             >\n                                <>\n                                {\n                                    (this.props.institutesList) ?\n                                    this.props.institutesList.map((institute) => {\n                                        return (\n                                            <option value={institute.id}>{institute.title}</option>\n                                        );\n                                    })\n                                    :\n                                    <></>\n                                }\n                                </>\n                            </Input>\n                            <AddInstitutionModal isModalOpen={this.state.isModalOpen} setIsModalOpen={(value) => this.setState({isModalOpen: value})} />\n                            <Button color='link' onClick={() => this.setState({isModalOpen: true})} className='mt-2'>Can't find your institute? Click here to add institute.</Button>\n                        </Col>\n                    </Row>\n\n                    <Row className=\"form-group\">\n                        <Label htmlFor=\"startdate\" md={3}>\n                            <h4 className=\"font-weight-bold\">Duration</h4>\n                        </Label>\n                        <Col md={3} className=\"d-flex\">\n                            <Input type=\"date\"\n                                name=\"startdate\"\n                                value={this.state.startdate}\n                                onChange={this.handleInputChange}\n                                className=\"d-flex my-auto\"\n                                    />\n                        </Col>\n                        <Label htmlFor=\"enddate\" md={1} className=\"d-flex\">\n                            <h4 className=\"font-weight-bold d-flex m-auto\">to</h4>\n                        </Label>\n                        <Col md={3} className=\"d-flex\">\n                            <Input type=\"date\"\n                                name=\"enddate\"\n                                value={this.state.enddate}\n                                onChange={this.handleInputChange}\n                                className=\"d-flex my-auto\"\n                                    />\n                        </Col>\n                    </Row>\n\n                    <Row className=\"form-group\">\n                        <Label htmlFor=\"field\" md={3}>\n                            <h4 className=\"font-weight-bold\">Field</h4>\n                        </Label>\n                        <Col md={3} className=\"d-flex\">\n                            <Input type=\"text\"\n                                name=\"field\"\n                                value={this.state.field}\n                                placeholder=\"Enter field\"\n                                onChange={this.handleInputChange}\n                                className=\"d-flex my-auto\"\n                                    />\n                        </Col>\n                        <Label htmlFor=\"domain\" md={3} className=\"d-flex\">\n                            <h4 className=\"font-weight-bold d-md-flex m-md-auto\">Domain</h4>\n                        </Label>\n                        <Col md={3} className=\"d-flex\">\n                            <Input type=\"text\"\n                                name=\"domain\"\n                                value={this.state.domain}\n                                placeholder=\"Enter domain\"\n                                onChange={this.handleInputChange}\n                                className=\"d-flex my-auto\"\n                                    />\n                        </Col>\n                    </Row>\n\n                    <Row className=\"form-group\">\n                        <Label htmlFor=\"mentorsInput\" md={3}>\n                            <h4 className=\"font-weight-bold\">Mentors</h4>\n                        </Label>\n                        <Col md={9}>\n                            <Row>\n                            <Col xs={7} md={8} lg={9}>\n                                <Input type=\"email\"\n                                    name=\"mentorsInput\"\n                                    value={this.state.mentorsInput}\n                                    onChange={this.handleInputChange}\n                                    placeholder=\"Enter mentor's email ID\"\n                                    />\n                                <p className=\"text-danger m-0 px-2\">{this.state.mentorsInputErr}</p>\n                            </Col>\n                            <Col xs={5} md={4} lg={3} className=\"pl-0\">\n                                <Button color=\"info\" className=\"w-100\"\n                                    onClick={this.addMentor}\n                                    disabled={this.props.professorsLoading\n                                        || this.state.mentorAdding}\n                                    >\n                                    Add Mentor\n                                </Button>\n                            </Col>\n                            <Col xs={12} className=\"mt-1\">\n                                <div className=\"box w-100\">\n                                {\n                                    this.state.mentors.map((mentor) => {\n                                        return (\n                                            <div className=\"rounded-pill p-2 pl-3 mr-2 mt-2 bg-color-off-white d-inline-block\">\n                                                {mentor.user__email}\n                                                <Button className=\"rounded-circle ml-3\"\n                                                    size=\"sm\" color=\"danger\"\n                                                    onClick={() => this.removeFromList('mentors', mentor)}\n                                                        >\n                                                    <i className=\"fa fa-times\"></i>\n                                                </Button>\n                                            </div>\n                                        );\n                                    })\n                                }\n                                </div>\n                            </Col>\n                            </Row>\n                        </Col>\n\n                    </Row>\n\n                    <Row className=\"form-group\">\n                        <Label htmlFor=\"teamInput\" md={3}>\n                            <h4 className=\"font-weight-bold\">Team Members</h4>\n                        </Label>\n                        <Col md={9}>\n                            <Row>\n                            <Col xs={7} md={8} lg={9}>\n                                <Input type=\"email\"\n                                    name=\"teamInput\"\n                                    value={this.state.teamInput}\n                                    onChange={this.handleInputChange}\n                                    placeholder=\"Enter team member's email ID\"\n                                    />\n                                <p className=\"text-danger m-0 px-2\">{this.state.teamInputErr}</p>\n                            </Col>\n                            <Col xs={5} md={4} lg={3} className=\"pl-0\">\n                                <Button color=\"info\" className=\"w-100\" onClick={this.addTeamMember}\n                                    disabled={this.props.studentsLoading\n                                        || this.state.teamAdding}\n                                 >\n                                    Add Member\n                                </Button>\n                            </Col>\n                            <Col xs={12} className=\"mt-1\">\n                                <div className=\"box w-100\">\n                                {\n                                    this.state.team.map((member) => {\n                                        return (\n                                            <div className=\"rounded-pill p-2 pl-3 mr-2 mt-2 bg-color-off-white d-inline-block\">\n                                                {member.user__email}\n                                                <Button className=\"rounded-circle ml-3\"\n                                                    size=\"sm\" color=\"danger\"\n                                                    onClick={() => this.removeFromList('team', member)}\n                                                        >\n                                                    <i className=\"fa fa-times\"></i>\n                                                </Button>\n                                            </div>\n                                        );\n                                    })\n                                }\n                                </div>\n                            </Col>\n                            </Row>\n                        </Col>\n                    </Row>\n\n                    <Row className=\"form-group\">\n                        <Label htmlFor=\"tagsInput\" md={3}>\n                            <h4 className=\"font-weight-bold\">Tags</h4>\n                        </Label>\n                        <Col md={9}>\n                            <Row>\n                            <Col xs={7} md={8} lg={9}>\n                                <Input type=\"email\"\n                                    name=\"tagsInput\"\n                                    value={this.state.tagsInput}\n                                    onChange={this.handleInputChange}\n                                    placeholder=\"Enter tags\"\n                                    />\n                            </Col>\n                            <Col xs={5} md={4} lg={3} className=\"pl-0\">\n                                <Button color=\"info\" className=\"w-100\" onClick={this.addTag}\n                                    disabled={this.props.tagsLoading\n                                        || this.state.tagsAdding}\n                                 >\n                                    Add Tag\n                                </Button>\n                            </Col>\n                            <Col xs={12} className=\"mt-1\">\n                                <div className=\"box w-100\">\n                                {\n                                    this.state.tags.map((tag) => {\n                                        return (\n                                            <div className=\"rounded-pill p-2 pl-3 mr-2 mt-2 bg-color-off-white d-inline-block\">\n                                                {tag.title}\n                                                <Button className=\"rounded-circle ml-3\"\n                                                    size=\"sm\" color=\"danger\"\n                                                    onClick={() => this.removeFromList('tags', tag)}\n                                                        >\n                                                    <i className=\"fa fa-times\"></i>\n                                                </Button>\n                                            </div>\n                                        );\n                                    })\n                                }\n                                </div>\n                            </Col>\n                            </Row>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col xs=\"12\">\n                            <Button color=\"success\" className=\"mr-3\"\n                                disabled={this.props.addProjectPosting}\n                             >\n                                Request for Approval\n                            </Button>\n                            <Button color=\"danger\" onClick={this.clearState}\n                                disabled={this.props.addProjectPosting}\n                             >\n                                Clear Form\n                            </Button>\n                        </Col>\n\n                        <Col xs=\"12\" className=\"mt-2\">\n                            <h6 className={`${this.props.addProjectPostingError ? \"text-danger\" : \"text-success\"}`}>\n                                {this.props.addProjectPostingMessage}\n                            </h6>\n                        </Col>\n                    </Row>\n                </Form>\n            </Container>\n        )\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddProject));","import React from 'react';\nimport { Table, Button } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { ApprovedBadge } from '../components/Extras'\n\nfunction AchievementsTable({arrayOfAchievements, deleteAchievement, token}) {\n    return (\n        <Table hover responsive className=\"rounded-2\">\n            <thead>\n                <tr>\n                <th className=\"text-color-main h5\">#</th>\n                <th className=\"text-color-main h5\">Title</th>\n                <th className=\"text-color-main h5\">Description</th>\n                <th className=\"text-color-main h5\">Status</th>\n                <th className=\"text-color-main h5\">Date</th>\n                <th className=\"text-color-main h5\">Details</th>\n                <th className=\"text-color-main h5\">Edit</th>\n                <th className=\"text-color-main h5\">Delete</th>\n                </tr>\n            </thead>\n            <tbody>\n                {\n                    arrayOfAchievements.map((achievement) => {\n                        return (\n                            <tr>\n                            <th scope=\"row\">{achievement.id}</th>\n                            <td>{achievement.title}</td>\n                            <td>{achievement.description}</td>\n                            <td><h5><ApprovedBadge value={achievement.approved} /></h5></td>\n                            <td>{new Date(achievement.achievedDate).toLocaleString('default', {day: \"2-digit\", month: 'short', year: \"numeric\" })}</td>\n                            <td>\n                                <Link to={\"/achievement/\"+achievement.id}>\n                                <Button color=\"info\" >View</Button>\n                                </Link>\n                            </td>\n                            <td>\n                                <Link to={\"/editachievement/\"+achievement.id}>\n                                <Button color=\"secondary\"\n                                disabled={achievement.approved.toLowerCase() === 'approved'} >Edit</Button>\n                                </Link>\n                            </td>\n                            <td>\n                                <Button\n                                    onClick={() => deleteAchievement(token, achievement.id)}\n                                    color=\"danger\"\n                                    className=\"w-100\"\n                                    disabled={achievement.deleting || achievement.deleted}\n                                >\n                                    {\n                                        (achievement.deleted) ? \n                                            <i className=\"fa fa-check w-100 text-center\" aria-hidden=\"true\"></i>\n                                        :\n                                        <>Delete</>\n                                    }\n                                </Button>\n                            </td>\n                            </tr>\n                        )\n                    })\n                }\n            </tbody>\n        </Table>\n    );\n}\n\n\nfunction ProjectsTable({arrayofProjects, deleteProject, token}) {\n    return (\n        <Table hover responsive className=\"rounded-2\">\n            <thead>\n                <tr>\n                <th className=\"text-color-main h5\">#</th>\n                <th className=\"text-color-main h5\">Title</th>\n                <th className=\"text-color-main h5\">Description</th>\n                <th className=\"text-color-main h5\">Status</th>\n                <th className=\"text-color-main h5\">Start Date</th>\n                <th className=\"text-color-main h5\">End Date</th>\n                <th className=\"text-color-main h5\">Details</th>\n                <th className=\"text-color-main h5\">Edit</th>\n                <th className=\"text-color-main h5\">Delete</th>\n                </tr>\n            </thead>\n            <tbody>\n                {\n                    arrayofProjects.map((project) => {\n                        return (\n                            <tr>\n                            <th scope=\"row\">{project.id}</th>\n                            <td>{project.title}</td>\n                            <td>{project.description}</td>\n                            <td><h5><ApprovedBadge value={project.approved} /></h5></td>\n                            <td>{new Date(project.startDate).toLocaleString('default', {day: \"2-digit\", month: 'short', year: \"numeric\" })}</td>\n                            <td>{new Date(project.endDate).toLocaleString('default', {day: \"2-digit\", month: 'short', year: \"numeric\" })}</td>\n                            <td>\n                                <Link to={\"/project/\"+project.id}>\n                                <Button color=\"info\" >View</Button>\n                                </Link>\n                            </td>\n                            <td>\n                                <Link to={\"/editproject/\"+project.id}>\n                                <Button color=\"secondary\"\n                                disabled={project.approved.toLowerCase() === 'approved'} >Edit</Button>\n                                </Link>\n                            </td>\n                            <td>\n                                <Button\n                                    onClick={() => deleteProject(token, project.id)}\n                                    color=\"danger\"\n                                    className=\"w-100\"\n                                    disabled={project.deleting || project.deleting}\n                                >\n                                    {\n                                        (project.deleted) ?\n                                            <i className=\"fa fa-check w-100 text-center\" aria-hidden=\"true\"></i>\n                                        :\n                                            <>Delete</>\n                                    }\n                                </Button>\n                            </td>\n                            </tr>\n                        )\n                    })\n                }\n            </tbody>\n        </Table>\n    );\n}\n\nexport {AchievementsTable, ProjectsTable};","import React from 'react';\nimport { Redirect, withRouter } from 'react-router';\nimport { Container, Row, Col } from 'reactstrap';\nimport { AchievementsTable } from '../../components/Tables';\nimport { connect } from 'react-redux';\nimport { deleteAchievement, fetchUserAchievements} from '../../redux/ActionCreators';\nimport Loading from '../../components/Loading';\n\nconst mapStateToProps = (state) => ({\n    authorized: state.user.authorized,\n    token: state.user.token,\n    achievements: state.user.achievements,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    fetchUserAchievements: (key) => dispatch(fetchUserAchievements(key)),\n    deleteAchievement: (key, achievementId) => dispatch(deleteAchievement(key, achievementId))\n})\n\nfunction MyAchievements(props) {\n    if(!props.authorized)\n        return (\n            <Redirect to=\"/login\" />\n        );\n    if(!props.achievements) {\n        props.fetchUserAchievements(props.token);\n    }\n    console.log(props.token)\n\n    return (\n        <Container className=\"p-4 p-md-5 mt-4 mb-4 bg-color-lightest-grey rounded-3\">\n            <Row>\n                <Col xs=\"12 text-center\">\n                    <h2 className=\"font-weight-bold\">My Achievements</h2>\n                </Col>\n            </Row>\n\n            <Row className=\"mt-5\">\n                <Col xs=\"12\" className=\"bg-color-off-white rounded-2\">\n                    {\n                    props.achievements ? \n                        <AchievementsTable \n                            arrayOfAchievements={props.achievements}\n                            deleteAchievement={props.deleteAchievement}\n                            token={props.token}\n                            />\n                    :\n                        <Loading />\n                    }\n                </Col>\n            </Row>\n\n            {/* <Row className=\"mt-3\">\n                <Col xs=\"12 my-3\">\n                    <h3>Approved By Admin</h3>\n                </Col>\n                <Col xs=\"12\" className=\"bg-color-off-white rounded-2\">\n                    <Approved arrayOfAchievements={approveAchivements} />\n                </Col>\n            </Row> */}\n        </Container>\n    )\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(MyAchievements));","import React from 'react';\nimport { Redirect, withRouter } from 'react-router';\nimport { Container, Row, Col } from 'reactstrap';\nimport { ProjectsTable } from '../../components/Tables';\nimport { connect } from 'react-redux';\nimport { deleteProject, fetchUserProjects } from '../../redux/ActionCreators';\nimport Loading from '../../components/Loading';\n\nconst mapStateToProps = (state) => ({\n    authorized: state.user.authorized,\n    token: state.user.token,\n    projects: state.user.projects,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    fetchUserProjects: (key) => dispatch(fetchUserProjects(key)),\n    deleteProject: (key, projectId) => dispatch(deleteProject(key, projectId))\n})\n\nfunction MyAchievements(props) {\n    if(!props.authorized)\n        return (\n            <Redirect to=\"/login\" />\n        );\n    if(!props.projects) {\n        props.fetchUserProjects(props.token);\n    }\n\n    return (\n        <Container className=\"p-4 p-md-5 mt-4 mb-4 bg-color-lightest-grey rounded-3\">\n            <Row>\n                <Col xs=\"12 text-center\">\n                    <h2 className=\"font-weight-bold\">My Projects</h2>\n                </Col>\n            </Row>\n\n            <Row className=\"mt-5\">\n                <Col xs=\"12\" className=\"bg-color-off-white rounded-2\">\n                {\n                    props.projects ?\n                        <ProjectsTable\n                            arrayofProjects={props.projects}\n                            deleteProject={props.deleteProject}\n                            token={props.token}\n                            />\n                    :\n                        <Loading />\n                }\n                </Col>\n            </Row>\n\n            {/* <Row className=\"mt-3\">\n                <Col xs=\"12 my-3\">\n                    <h3>Approved By Admin</h3>\n                </Col>\n                <Col xs=\"12\" className=\"bg-color-off-white rounded-2\">\n                    <Approved arrayOfAchievements={approveAchivements} />\n                </Col>\n            </Row> */}\n        </Container>\n    )\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(MyAchievements));","import React, {useEffect, useState} from 'react';\nimport { Container, Row, Col, Badge, Button } from 'reactstrap';\nimport { Redirect, useParams, withRouter } from \"react-router\";\nimport { connect } from 'react-redux';\nimport { ApprovedBadge, RenderUser } from '../../components/Extras';\nimport Loading from '../../components/Loading';\nimport NotFound from '../../components/NotFound'\nimport { fetchAchievement } from '../../redux/ActionCreators';\nimport { baseUrl_ } from '../../shared/baseUrl';\n\nconst mapStateToProps = (state) => ({\n    authorized: state.user.authorized,\n    token: state.user.token,\n})\n\nfunction Achievement (props) {\n    const [loading, setLoading] = useState(false);\n    const [errorMessage, setErrorMessage] = useState(false);\n    const [achievementDetails, setAchievementDetails] = useState(false);\n    const {achievementId} = useParams();\n    useEffect(() => {\n        if(!loading && !errorMessage && !achievementDetails) {\n            setLoading(true);\n            fetchAchievement(props.token, achievementId, setAchievementDetails, setLoading, setErrorMessage);\n        }\n    }, [loading, errorMessage, achievementDetails, props, achievementId])\n\n    if(errorMessage)\n        return (\n            <NotFound />\n        );\n\n    return (\n        <Container className=\"p-3 p-md-4 p-lg-5 mt-4 mb-4 bg-color-lightest-grey rounded-3\">\n        {\n        (!props.authorized) ?\n        (\n            <Redirect to=\"/login\" />\n        ) :\n        (loading) ?\n        (\n            <Loading />\n        ) :\n        (\n            <>\n            <Row className=\"mb-5\">\n                <Col xs={8} md={10} className=\"d-flex\">\n                    <h2 className=\"d-flex d-md-none m-auto font-weight-bold\">Achievement</h2>\n                    <h1 className=\"d-none d-md-flex m-auto font-weight-bold\">Achievement</h1>\n                </Col>\n\n                <Col xs={4} md={2} className=\"d-flex\">\n                    <img src=\"/assets/medal.png\" alt=\"Medal\" className=\"d-flex m-auto\"\n                        style={{maxHeight: \"100%\", maxWidth: \"100%\"}} />\n                </Col>\n            </Row>\n\n            <Row className=\"mt-3\">\n                <Col md={4}>\n                    <h3>AID</h3>\n                </Col>\n                <Col md={8}>\n                    <p className=\"h4 text-black\">{achievementDetails.id}</p>\n                </Col>\n            </Row>\n\n            <Row className=\"mt-3\">\n                <Col md={4}>\n                    <h3 className=\"text-color-main\">Status</h3>\n                </Col>\n                <Col md={8}>\n                    <h3><ApprovedBadge value={achievementDetails.approved} /></h3>\n                </Col>\n            </Row>\n\n            {/* <Row className={`${achievementDetails.approvedBy ? \"d-block\" : \"d-none\"} mt-3`}>\n                <Col md={4}>\n                    <h3 className=\"text-color-main\">Approved By</h3>\n                </Col>\n                <Col md={8}>\n                <p className=\"h4 text-black\">{achievementDetails.approvedBy}</p>\n                </Col>\n            </Row> */}\n\n            <Row className=\"mt-3\">\n                <Col md={4}>\n                    <h3 className=\"text-color-main\">Title</h3>\n                </Col>\n                <Col md={8}>\n                <p className=\"h4 text-black\">{achievementDetails.title}</p>\n                </Col>\n            </Row>\n\n            <Row className=\"mt-3\">\n                <Col md={4}>\n                    <h3 className=\"text-color-main\">Institution</h3>\n                </Col>\n                <Col md={8}>\n                <p className=\"h4 text-black\">{(achievementDetails.institution) ? achievementDetails.institution.title : \"\"}</p>\n                </Col>\n            </Row>\n\n            <Row className=\"mt-3\">\n                <Col md={4}>\n                    <h3 className=\"text-color-main\">Added By</h3>\n                </Col>\n                <Col md={8}>\n                    <RenderUser user={achievementDetails.addedBy} />\n                </Col>\n            </Row>\n\n            <Row className={`mt-3`}>\n                <Col md={4}>\n                    <h3 className=\"text-color-main\">Team Members</h3>\n                </Col>\n                <Col md={8}>\n                <p className=\"h4 text-black\">\n                    {(achievementDetails.members && achievementDetails.members.length > 0) ?(\n                        achievementDetails.members.map((member) => {\n                            return (\n                                <RenderUser user={member} />\n                            );\n                        })\n                    )\n                    :\n                    (\n                        <>None</>\n                    )}\n                </p>\n                </Col>\n            </Row>\n\n            <Row className={`mt-3`}>\n                <Col md={4}>\n                    <h3 className=\"text-color-main\">Mentors</h3>\n                </Col>\n                <Col md={8}>\n                <p className=\"h4 text-black\">\n                    {(achievementDetails.mentors && achievementDetails.mentors.length > 0) ?(\n                        achievementDetails.mentors.map((mentor) => {\n                            return (\n                                <RenderUser user={mentor} />\n                            );\n                        })\n                    )\n                    :\n                    (\n                        <>None</>\n                    )}\n                </p>\n                </Col>\n            </Row>\n\n            <Row className=\"mt-3\">\n                <Col md={4}>\n                    <h3 className=\"text-color-main\">Description</h3>\n                </Col>\n                <Col md={8}>\n                <p className=\"h4 text-black\">{achievementDetails.description}</p>\n                </Col>\n            </Row>\n\n            <Row className=\"mt-3\">\n                <Col md={4}>\n                    <h3 className=\"text-color-main\">Technical</h3>\n                </Col>\n                <Col md={8}>\n                <p className=\"h4 text-black\">{achievementDetails.technical ? \"Yes\" : \"No\"}</p>\n                </Col>\n            </Row>\n\n            <Row className=\"mt-3\">\n                <Col md={4}>\n                    <h3 className=\"text-color-main\">Date Created</h3>\n                </Col>\n                <Col md={8}>\n                <p className=\"h4 text-black\">{new Date(achievementDetails.dateCreated).toLocaleString('default', {day: \"2-digit\", month: 'short', year: \"numeric\" })}</p>\n                </Col>\n            </Row>\n\n            <Row className=\"mt-3\">\n                <Col md={4}>\n                    <h3 className=\"text-color-main\">Date Achieved</h3>\n                </Col>\n                <Col md={8}>\n                <p className=\"h4 text-black\">{new Date(achievementDetails.achievedDate).toLocaleString('default', {day: \"2-digit\", month: 'short', year: \"numeric\" })}</p>\n                </Col>\n            </Row>\n\n            <Row className={`mt-3`}>\n                <Col md={4}>\n                    <h3 className=\"text-color-main\">Tags</h3>\n                </Col>\n                <Col md={8}>\n                <p className=\"h4 text-black\">\n                    {(achievementDetails.tags && achievementDetails.tags.length > 0) ?(\n                        achievementDetails.tags.map((tag) => {\n                            return (\n                                <Badge color=\"info\" pill className=\"mr-2 mb-2\">{tag.title}</Badge>\n                            );\n                        })\n                    )\n                    :\n                    (\n                        <>None</>\n                    )}\n                </p>\n                </Col>\n            </Row>\n\n            <Row className=\"mt-3\">\n                <Col md={4}>\n                    <h3 className=\"text-color-main\">Proof</h3>\n                </Col>\n                <Col md={8}>\n                    {\n                        (achievementDetails.files) ?\n                        achievementDetails.files.map((file) => {\n                            return (\n                            <a href={baseUrl_ + file.file} target='_blank' rel=\"noreferrer\">\n                                <Button>View Proof</Button>\n                            </a>\n                            )\n                        })\n                        :\n                        <>\n                        <p className=\"h4 text-black\">Not Available</p>\n                        </>\n                    }\n                </Col>\n            </Row>\n\n            <Row className={`mt-3 ${achievementDetails.feedback ? \"\" : \"d-none\"}`}>\n                <Col md={4}>\n                    <h3 className=\"text-color-main\">Feedback by admin</h3>\n                </Col>\n                <Col md={8}>\n                <p className=\"h4 text-black\">\n                    {achievementDetails.feedback}\n                </p>\n                </Col>\n            </Row>\n\n            </>\n        )\n        }\n        </Container>\n    );\n}\n\nexport default  withRouter(connect(mapStateToProps)(Achievement));","import React, {useEffect, useState} from 'react';\nimport { Container, Row, Col, Badge, Button } from 'reactstrap';\nimport { Redirect, useParams, withRouter } from \"react-router\";\nimport { connect } from 'react-redux';\nimport { ApprovedBadge, RenderUser } from '../../components/Extras';\nimport Loading from '../../components/Loading';\nimport NotFound from '../../components/NotFound';\nimport { fetchProject } from '../../redux/ActionCreators';\n\nconst mapStateToProps = (state) => ({\n    authorized: state.user.authorized,\n    token: state.user.token,\n})\n\nfunction Project (props) {\n    const [loading, setLoading] = useState(false);\n    const [errorMessage, setErrorMessage] = useState(false);\n    const [projectDetails, setProjectDetails] = useState(false);\n    const {projectId} = useParams();\n    useEffect(() => {\n        if(!loading && !errorMessage && !projectDetails) {\n            setLoading(true);\n            fetchProject(props.token, projectId, setProjectDetails, setLoading, setErrorMessage);\n        }\n    }, [loading, errorMessage, projectDetails, projectId, props.token])\n\n    if(errorMessage)\n        return (\n            <NotFound />\n        );\n\n    return (\n        <Container className=\"p-3 p-md-4 p-lg-5 mt-4 mb-4 bg-color-lightest-grey rounded-3\">\n        {\n        (!props.authorized) ?\n        (\n            <Redirect to=\"/login\" />\n        ) :\n        (loading) ?\n        (\n            <Loading />\n        ) :\n        (\n            <>\n            <Row className=\"mb-5\">\n                <Col xs={8} md={10} className=\"d-flex\">\n                    <h1 className=\"d-flex m-auto font-weight-bold\">Project</h1>\n                </Col>\n\n                <Col xs={4} md={2} className=\"d-flex\">\n                    <img src=\"/assets/idea.png\" alt=\"Idea\" className=\"d-flex m-auto\"\n                        style={{maxHeight: \"100%\", maxWidth: \"100%\"}} />\n                </Col>\n            </Row>\n\n            <Row className=\"mt-3\">\n                <Col md={4}>\n                    <h3>PID</h3>\n                </Col>\n                <Col md={8}>\n                    <p className=\"h4 text-black\">{projectDetails.id}</p>\n                </Col>\n            </Row>\n\n            <Row className=\"mt-3\">\n                <Col md={4}>\n                    <h3 className=\"text-color-main\">Title</h3>\n                </Col>\n                <Col md={8}>\n                <p className=\"h4 text-black\">{projectDetails.title}</p>\n                </Col>\n            </Row>\n\n            <Row className=\"mt-3\">\n                <Col md={4}>\n                    <h3 className=\"text-color-main\">Status</h3>\n                </Col>\n                <Col md={8}>\n                <h3><ApprovedBadge value={projectDetails.approved} /></h3>\n                </Col>\n            </Row>\n\n            <Row className=\"mt-3\">\n                <Col md={4}>\n                    <h3 className=\"text-color-main\">Added By</h3>\n                </Col>\n                <Col md={8}>\n                    <RenderUser user={projectDetails.addedBy} />\n                </Col>\n            </Row>\n\n            <Row className={`mt-3 ${projectDetails.url ? projectDetails.url : 'd-none' }`}>\n                <Col md={4}>\n                    <h3 className=\"text-color-main\">URL</h3>\n                </Col>\n                <Col md={8}>\n                    <a href={projectDetails.url} target='_blank' rel=\"noreferrer\">\n                        <Button color=\"primary\" className='px-4 rounded-pill'>\n                            Link\n                        </Button>\n                    </a>\n                </Col>\n            </Row>\n\n            <Row className={`mt-3`}>\n                <Col md={4}>\n                    <h3 className=\"text-color-main\">Team Members</h3>\n                </Col>\n                <Col md={8}>\n                <p className=\"h4 text-black\">\n                    {(projectDetails.members && projectDetails.members.length > 0) ?(\n                        projectDetails.members.map((member) => {\n                            return (\n                                <RenderUser user={member} />\n                            );\n                        })\n                    )\n                    :\n                    (\n                        <>None</>\n                    )}\n                </p>\n                </Col>\n            </Row>\n\n            <Row className={`mt-3`}>\n                <Col md={4}>\n                    <h3 className=\"text-color-main\">Mentors</h3>\n                </Col>\n                <Col md={8}>\n                <p className=\"h4 text-black\">\n                    {(projectDetails.mentors && projectDetails.mentors.length > 0) ?(\n                        projectDetails.mentors.map((mentor) => {\n                            return (\n                                <RenderUser user={mentor} />\n                            );\n                        })\n                    )\n                    :\n                    (\n                        <>None</>\n                    )}\n                </p>\n                </Col>\n            </Row>\n\n            <Row className=\"mt-3\">\n                <Col md={4}>\n                    <h3 className=\"text-color-main\">Domain</h3>\n                </Col>\n                <Col md={8}>\n                <p className=\"h4 text-black\">{projectDetails.domain}</p>\n                </Col>\n            </Row>\n\n            <Row className=\"mt-3\">\n                <Col md={4}>\n                    <h3 className=\"text-color-main\">Field</h3>\n                </Col>\n                <Col md={8}>\n                <p className=\"h4 text-black\">{projectDetails.field}</p>\n                </Col>\n            </Row>\n\n            <Row className=\"mt-3\">\n                <Col md={4}>\n                    <h3 className=\"text-color-main\">Description</h3>\n                </Col>\n                <Col md={8}>\n                <p className=\"h4 text-black\">{projectDetails.description}</p>\n                </Col>\n            </Row>\n\n            <Row className=\"mt-3\">\n                <Col md={4}>\n                    <h3 className=\"text-color-main\">Technical</h3>\n                </Col>\n                <Col md={8}>\n                <p className=\"h4 text-black\">{projectDetails.technical ? \"Yes\" : \"No\"}</p>\n                </Col>\n            </Row>\n\n            <Row className=\"mt-3\">\n                <Col md={4}>\n                    <h3 className=\"text-color-main\">Date Created</h3>\n                </Col>\n                <Col md={8}>\n                <p className=\"h4 text-black\">{new Date(projectDetails.dateCreated).toLocaleString('default', {day: \"2-digit\", month: 'short', year: \"numeric\" })}</p>\n                </Col>\n            </Row>\n\n            <Row className=\"mt-3\">\n                <Col md={4}>\n                    <h3 className=\"text-color-main\">Start Date</h3>\n                </Col>\n                <Col md={8}>\n                <p className=\"h4 text-black\">{new Date(projectDetails.startDate).toLocaleString('default', {day: \"2-digit\", month: 'short', year: \"numeric\" })}</p>\n                </Col>\n            </Row>\n\n            <Row className=\"mt-3\">\n                <Col md={4}>\n                    <h3 className=\"text-color-main\">End Date</h3>\n                </Col>\n                <Col md={8}>\n                <p className=\"h4 text-black\">{new Date(projectDetails.endDate).toLocaleString('default', {day: \"2-digit\", month: 'short', year: \"numeric\" })}</p>\n                </Col>\n            </Row>\n\n            <Row className={`${projectDetails.approvedBy ? \"\" : \"d-none\"} mt-3`}>\n                <Col md={4}>\n                    <h3 className=\"text-color-main\">Approved By</h3>\n                </Col>\n                <Col md={8}>\n                    <RenderUser user={projectDetails.approvedBy} />\n                </Col>\n            </Row>\n\n            <Row className={`mt-3`}>\n                <Col md={4}>\n                    <h3 className=\"text-color-main\">Tags</h3>\n                </Col>\n                <Col md={8}>\n                <p className=\"h4 text-black\">\n                    {(projectDetails.tags && projectDetails.tags.length > 0) ?(\n                        projectDetails.tags.map((tag) => {\n                            return (\n                                <Badge color=\"info\" pill className=\"mr-2 mb-2\">{tag.title}</Badge>\n                            );\n                        })\n                    )\n                    :\n                    (\n                        <>None</>\n                    )}\n                </p>\n                </Col>\n            </Row>\n\n            <Row className=\"mt-3\">\n                <Col md={4}>\n                    <h3 className=\"text-color-main\">URL</h3>\n                </Col>\n                <Col md={8}>\n                    {\n                        (projectDetails.url) ?\n                        <a href={projectDetails.url} target='_blank' rel=\"noreferrer\">\n                            <Button>View Proof</Button>\n                        </a>\n                        :\n                        <>\n                        <p className=\"h4 text-black\">Not Available</p>\n                        </>\n                    }\n                </Col>\n            </Row>\n\n            </>\n        )\n        }\n        </Container>\n    );\n}\n\nexport default  withRouter(connect(mapStateToProps)(Project));","import React, { useState } from 'react';\nimport { Table, Button } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from \"react-router\";\nimport { connect } from 'react-redux';\n\nimport { approveProject, rejectProject } from '../../redux/ActionCreators';\nimport { RejectionModal } from '../../components/Extras';\n\nconst mapStateToProps = (state) => ({\n    authorized: state.user.authorized,\n    token: state.user.token,\n    pendingProjects: state.admin.pendingProjects\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    approveProject: (key, projectId, userId) => dispatch(approveProject(key, projectId, userId)),\n    rejectProject: (key, projectId, userId, feedback) => dispatch(rejectProject(key, projectId, userId, feedback))\n});\n\nfunction PendingProjectsTable(props) {\n    const [modalOpen, setModalOpen] = useState(false);\n    const [projectId, setProjectId] = useState(null);\n    const [projectTitle, setProjectTitle] = useState(null);\n\n    if(!props.pendingProjects)\n        return (<></>);\n\n    return (\n        <>\n        <RejectionModal\n            modalOpen={modalOpen}\n            setModalOpen={setModalOpen}\n            id={projectId}\n            title={projectTitle}\n            onReject={(reason) => props.rejectProject(props.token, projectId, null, reason)}\n                />\n        <Table hover responsive className=\"rounded-2\">\n            <thead>\n                <tr>\n                <th className=\"text-color-main h5\">#</th>\n                <th className=\"text-color-main h5\">Title</th>\n                <th className=\"text-color-main h5\">Description</th>\n                <th className=\"text-color-main h5\">Date</th>\n                <th className=\"text-color-main h5\">Details</th>\n                <th className=\"text-color-main h5\">Approve</th>\n                <th className=\"text-color-main h5\">Reject</th>\n                </tr>\n            </thead>\n            <tbody>\n                {\n                    props.pendingProjects.map((project) => {\n                        return (\n                            <tr>\n                            <th scope=\"row\">{project.id}</th>\n                            <td>{project.title}</td>\n                            <td>{project.description}</td>\n                            <td>{new Date(project.dateCreated).toLocaleString('default', {day: \"2-digit\", month: 'short', year: \"numeric\" })}</td>\n                            <td>\n                                <Link to={\"/project/\"+project.id}>\n                                <Button color=\"info\" >View</Button>\n                                </Link>\n                            </td>\n                            <td>\n                                <Button\n                                onClick={() => props.approveProject(props.token, project.id, null)}\n                                color=\"success\"\n                                className=\"w-100\"\n                                disabled={project.approving || project.rejecting || (project.approved === 'approved') || (project.approved === 'rejected')} >\n                                    {\n                                        (project.approved === 'approved') ?\n                                            <i className=\"fa fa-check w-100 text-center\" aria-hidden=\"true\"></i>\n                                        :\n                                        <>Approve</>\n                                    }\n                                </Button>\n                            </td>\n                            <td>\n                                <Button\n                                disabled={project.approving || project.rejecting || (project.approved === 'approved') || (project.approved === 'rejected')}\n                                className=\"w-100\"\n                                onClick={() => {\n                                    setModalOpen(true)\n                                    setProjectId(project.id)\n                                    setProjectTitle(project.title)\n                                }}\n                                color=\"danger\" >\n                                    {\n                                        (project.approved === 'rejected') ?\n                                            <i className=\"fa fa-check w-100 text-center\" aria-hidden=\"true\"></i>\n                                        :\n                                        <>Reject</>\n                                    }\n                                </Button>\n                            </td>\n                            </tr>\n                        )\n                    })\n                }\n            </tbody>\n        </Table>\n        </>\n    );\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(PendingProjectsTable));","import React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { Redirect, withRouter } from 'react-router';\nimport Loading from '../../components/Loading';\nimport PendingProjectsTable from './PendingProjectsTable';\nimport { fetchPendingProjects } from '../../redux/ActionCreators';\nimport NotFound from '../../components/NotFound';\n\nconst mapStateToProps = (state) => ({\n    authorized: state.user.authorized,\n    token: state.user.token,\n\n    pendingProjects: state.admin.pendingProjects,\n    pendingProjectsLoading: state.admin.pendingProjectsLoading,\n    pendingProjectsLoadingError: state.admin.pendingProjectsLoadingError,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    fetchPendingProjects: (key) => dispatch(fetchPendingProjects(key))\n})\n\nfunction PendingProjects(props) {\n    if(!props.authorized)\n        return (\n            <Redirect to=\"/login\" />\n        );\n\n    if(!props.pendingProjectsLoading && !props.pendingProjects && !props.pendingProjectsLoadingError) {\n        props.fetchPendingProjects(props.token);\n    }\n\n    return (\n        <Container className=\"p-3 p-md-4 p-lg-5 mt-4 mb-4 bg-color-lightest-grey rounded-3\">\n            {\n                (props.pendingProjectsLoading) ?\n                (\n                    <Loading />\n                )\n                :\n                (props.pendingProjectsLoadingError) ?\n                (\n                    <NotFound message={props.pendingProjectsLoadingError} />\n                )\n                :\n                (\n                    <>\n                    <Row className=\"mb-5\">\n                        <Col xs={12}>\n                            <h2 className=\"font-weight-bold text-center\">Pending Projects</h2>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col xs={12}>\n                        <PendingProjectsTable />\n                        </Col>\n                    </Row>\n                    </>\n                )\n            }\n        </Container>\n    )\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(PendingProjects));","import React, { useState } from 'react';\nimport { Table, Button } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from \"react-router\";\nimport { connect } from 'react-redux';\n\nimport { approveAchievement, rejectAchievement } from '../../redux/ActionCreators';\nimport { RejectionModal } from '../../components/Extras';\n\nconst mapStateToProps = (state) => ({\n    authorized: state.user.authorized,\n    token: state.user.token,\n    pendingAchievements: state.admin.pendingAchievements\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    approveAchievement: (key, achievementId, userId) => dispatch(approveAchievement(key, achievementId, userId)),\n    rejectAchievement: (key, achievementId, userId, feedback) => dispatch(rejectAchievement(key, achievementId, userId, feedback))\n});\n\nfunction PendingAchievementsTable(props) {\n    const [modalOpen, setModalOpen] = useState(false);\n    const [achievementId, setAchievementId] = useState(null);\n    const [achievementTitle, setAchievementTitle] = useState(null);\n\n    if(!props.pendingAchievements)\n        return (<></>);\n    return (\n        <>\n        <RejectionModal\n            modalOpen={modalOpen}\n            setModalOpen={setModalOpen}\n            id={achievementId}\n            title={achievementTitle}\n            onReject={(reason) => props.rejectAchievement(props.token, achievementId, null, reason)}\n                />\n        <Table hover responsive className=\"rounded-2\">\n            <thead>\n                <tr>\n                <th className=\"text-color-main h5\">#</th>\n                <th className=\"text-color-main h5\">Title</th>\n                <th className=\"text-color-main h5\">Description</th>\n                <th className=\"text-color-main h5\">Date</th>\n                <th className=\"text-color-main h5\">Details</th>\n                <th className=\"text-color-main h5\">Approve</th>\n                <th className=\"text-color-main h5\">Reject</th>\n                </tr>\n            </thead>\n            <tbody>\n                {\n                    props.pendingAchievements.map((achievement) => {\n                        return (\n                            <tr>\n                            <th scope=\"row\">{achievement.id}</th>\n                            <td>{achievement.title}</td>\n                            <td>{achievement.description}</td>\n                            <td>{new Date(achievement.achievedDate).toLocaleString('default', {day: \"2-digit\", month: 'short', year: \"numeric\" })}</td>\n                            <td>\n                            <Link to={\"/achievement/\"+achievement.id}>\n                                <Button color=\"info\" >View</Button>\n                                </Link>\n                            </td>\n                            <td>\n                                <Button\n                                onClick={() => props.approveAchievement(props.token, achievement.id, null)}\n                                color=\"success\"\n                                className=\"w-100\"\n                                disabled={achievement.approving || achievement.rejecting || (achievement.approved === 'approved') || (achievement.approved === 'rejected')} >\n                                    {\n                                        (achievement.approved === 'approved') ?\n                                            <i className=\"fa fa-check w-100 text-center\" aria-hidden=\"true\"></i>\n                                        :\n                                        <>Approve</>\n                                    }\n                                </Button>\n                            </td>\n                            <td>\n                                <Button\n                                disabled={achievement.approving || achievement.rejecting || (achievement.approved === 'approved') || (achievement.approved === 'rejected')}\n                                className=\"w-100\"\n                                onClick={() => {\n                                    setModalOpen(true)\n                                    setAchievementId(achievement.id)\n                                    setAchievementTitle(achievement.title)\n                                }}\n                                color=\"danger\" >\n                                    {\n                                        (achievement.approved === 'rejected') ?\n                                            <i className=\"fa fa-check w-100 text-center\" aria-hidden=\"true\"></i>\n                                        :\n                                        <>Reject</>\n                                    }\n                                </Button>\n                            </td>\n                            </tr>\n                        )\n                    })\n                }\n            </tbody>\n        </Table>\n        </>\n    );\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(PendingAchievementsTable));","import React, { useEffect } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { Redirect, withRouter } from 'react-router';\nimport Loading from '../../components/Loading';\nimport PendingAchievementsTable from './PendingAchievementsTable.jsx';\nimport { fetchPendingAchievements } from '../../redux/ActionCreators';\nimport NotFound from '../../components/NotFound'\n\nconst mapStateToProps = (state) => ({\n    authorized: state.user.authorized,\n    token: state.user.token,\n\n    pendingAchievements: state.admin.pendingAchievements,\n    pendingAchievementsLoading: state.admin.pendingAchievementsLoading,\n    pendingAchievementsLoadingError: state.admin.pendingAchievementsLoadingError,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    fetchPendingAchievements: (key) => dispatch(fetchPendingAchievements(key))\n})\n\nfunction PendingAchievements(props) {\n    useEffect(() => {\n        console.log(props)\n        if(!props.pendingAchievementsLoading && !props.pendingAchievements && !props.pendingAchievementsLoadingError) {\n            props.fetchPendingAchievements(props.token);\n        }\n    }, [props])\n\n    if(!props.authorized)\n        return (\n            <Redirect to=\"/login\" />\n        );\n\n    return (\n        <Container className=\"p-3 p-md-4 p-lg-5 mt-4 mb-4 bg-color-lightest-grey rounded-3\">\n            {\n                (props.pendingAchievementsLoading) ? \n                (\n                    <Loading />\n                )\n                :\n                (props.pendingAchievementsLoadingError) ? \n                (\n                    <NotFound message={props.pendingAchievementsLoadingError} />\n                )\n                :\n                (\n                    <>\n                    <Row className=\"mb-5\">\n                        <Col xs={12}>\n                            <h2 className=\"font-weight-bold text-center\">Pending Achievements</h2>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col xs={12}>\n                        <PendingAchievementsTable />\n                        </Col>\n                    </Row>\n                    </>\n                )\n            }\n        </Container>\n    )\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(PendingAchievements));","import React, {useState} from 'react'\nimport { Col, Container, Row, Button, Table } from 'reactstrap';\nimport { Redirect, withRouter } from \"react-router\";\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport SearchBar from '../../components/Search'\nimport Loading from '../../components/Loading';\nimport NotFound from '../../components/NotFound'\nimport { baseUrl } from '../../shared/baseUrl';\nimport { useEffect } from 'react';\n\nconst mapStateToProps = (state) => ({\n    authorized: state.user.authorized,\n    token: state.user.token,\n})\n\nfunction fetchAchievements(key, query, setAchievements, setLoading, setErrorMessage) {\n    let token_head = 'Token '+key;\n\n    fetch(baseUrl+'main/api/search?q='+query, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': token_head\n        }\n    })\n    .then((response) => {\n        if(!response.ok)\n            throw new Error('Unexpected error occurred!')\n        console.log(response.error)\n        return response\n    })\n    .then(response => response.json())\n    .then(response => {\n        console.log(response)\n        setAchievements(response.achievements.filter(achievement => achievement.approved === 'approved'))\n        setLoading(false)\n        return response\n    })\n    .catch(error => {\n        setLoading(false)\n        setErrorMessage(error.message)\n        console.log(error)\n    })\n}\n\nfunction Results( {achievements} ) {\n    return (\n        <Table hover responsive className=\"rounded-2\">\n            <thead>\n                <th className=\"text-color-main h5\">#</th>\n                <th className=\"text-color-main h5\">Title</th>\n                <th className=\"text-color-main h5\">Description</th>\n                <th className=\"text-color-main h5\">Added By</th>\n                <th className=\"text-color-main h5\">Date Created</th>\n                <th className=\"text-color-main h5\">Details</th>\n            </thead>\n            <tbody>\n                {\n                    (achievements) ?\n                    achievements.map((achievement) => {\n                        return (\n                            <tr>\n                            <th scope=\"row\">{achievement.id}</th>\n                            <td>{achievement.title}</td>\n                            <td>{achievement.description}</td>\n                            <td>{(achievement.addedBy) ? achievement.addedBy.first_name: ''}</td>\n                            <td>{new Date(achievement.dateCreated).toLocaleString('default', {day: \"2-digit\", month: 'short', year: \"numeric\" })}</td>\n                            <td>\n                                <Link to={\"/achievement/\"+achievement.id}>\n                                    <Button color=\"info\">\n                                        View\n                                    </Button>\n                                </Link>\n                            </td>\n                            </tr>\n                        )\n                    })\n                    :\n                    <></>\n                }\n            </tbody>\n        </Table>\n    );\n}\n\nfunction Achievements(props) {\n    const [loading, setLoading] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n    const [achievements, setAchievements] = useState(false);\n    const [query, setQuery] = useState('');\n\n    useEffect(() => {\n        setLoading(true);\n        fetchAchievements(props.token, '', setAchievements, setLoading, setErrorMessage);\n    }, [props.token])\n\n    if(!props.authorized)\n        return (<Redirect to='/login' />);\n\n    if(errorMessage)\n        return ( <NotFound message={errorMessage} /> );\n\n    return (\n        <Container className=\"p-3 p-md-4 mt-4 mb-4 bg-color-lightest-grey rounded-3\">\n            <Row>\n                <Col md={{size: 8, offset: 2}}>\n                    <SearchBar query={query} setQuery={setQuery} onSearch={ () => {\n                        setLoading(true)\n                        fetchAchievements(props.token, query, setAchievements, setLoading, setErrorMessage);\n                    }} />\n                </Col>\n            </Row>\n            {/* <Row className=\"mt-4 bg-color-off-white rounded-2 p-2\">\n                <Col xs=\"auto\">\n                    <h3 className=\"text-color-main font-weight-bold mb-0 mr-4 d-inline\">Filters</h3>\n                </Col>\n                <Col xs=\"auto\">\n\n                </Col>\n            </Row> */}\n            <Row className=\"mt-4\">\n                {\n                    (loading) ?\n                        <Loading />\n                    :\n                        <Results achievements={achievements}/>\n                }\n            </Row>\n        </Container>\n    )\n}\n\nexport default withRouter(connect(mapStateToProps)(Achievements));","import React from 'react'\nimport {Container, Row, Col} from 'reactstrap'\n\nfunction About() {\n    return (\n        <Container className=\"mt-4 mb-4 bg-color-lightest-grey rounded-3\">\n            <Row className=\"p-3 p-md-4 \">\n                <Col xs=\"12 text-center\">\n                    <h2 className=\"font-weight-bold\">About IIITD</h2>\n                </Col>\n            </Row>\n            <Row>\n                <Col className=\"px-0\">\n                    <img src=\"/assets/About/administration-bg.jpg\"\n                        className=\"w-100\"\n                        alt=\"IIIT Delhi New Academic Building\" />\n                </Col>\n            </Row>\n            <Row className=\"p-3 p-md-4 p-lg-5\">\n                <Col className=\"xs-12 text-justify\">\n                    <p>\n                        Indraprastha Institute of Information Technology Delhi (IIIT-Delhi) was created by an act of Delhi legislature empowering it to carry out R and D, conduct educational programs, and grant degrees. The General Council is the apex body of the Institute, chaired by Hon'ble Lt. Governor of Delhi and the Board of Governors is the policy and decision-making body of the Institute. The Senate is empowered to take all academic decisions.\n                    </p>\n                    <p>\n                        This is the achievement portal of IIIT Delhi. Submit your achievements / projects here, and build your profile. The admins will approve your achievements / projects.\n                    </p>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default About;","import React, { useState, useEffect } from 'react'\nimport { Col, Row } from 'reactstrap'\nimport { RenderEducation } from '../../components/Extras'\nimport Loading from '../../components/Loading'\nimport { Field } from '../../components/ProfileComponents'\nimport { baseUrl } from '../../shared/baseUrl'\n\nfunction StudentProfile({ token, studentId, institutesList }) {\n    const [studObj, setStudObj] = useState({})\n    const [loading, setLoading] = useState(false)\n    const [errorMsg, setErrorMsg] = useState('')\n\n    useEffect(() => {\n        setLoading(true)\n        fetch(baseUrl + 'main/api/student/' + studentId + '/', {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Token ' + token\n            }\n        })\n        .then(response => {\n            if(!response.ok)\n                throw new Error('Error while fetching student data!')\n            return response.json()\n        })\n        .then(response => {\n            setStudObj(response)\n            setLoading(false)\n        })\n        .catch(err => {\n            console.log(err);\n            setErrorMsg(err.message)\n            setLoading(false)\n        })\n    }, [token, studentId])\n\n    return (\n        <>\n        <Row className=\"p-3 p-md-4 \">\n            <Col className=\"xs-12 text-center\">\n                <h2 className=\"font-weight-bold\">Student Details</h2>\n            </Col>\n        </Row>\n        <Row>\n            <Col>\n            {\n                (loading) ?\n                <Loading />\n                :\n                (errorMsg) ?\n                <p xs={12} className='text-danger'>{errorMsg}</p>\n                :\n                <>\n                    <Field title={\"Roll Number\"} value={studObj.rollNo} />\n                    <Field title={\"Batch\"} value={studObj.batch} />\n                    <Field title={\"Major\"} value={studObj.major} />\n                    <Field title={\"CGPA\"} value={studObj.GPA} />\n                    {/* <Field title={\"Bio\"} value={studObj.bio} /> */}\n                    <Row className=\"mt-3 mb-3\">\n                        <Col md=\"4\">\n                            <h3 className=\"font-weight-bold\">Education</h3>\n                        </Col>\n                        <Col md=\"8\">\n                        {\n                            (studObj && studObj.education) ?\n                            studObj.education.map((education) => (\n                                <RenderEducation\n                                    institution={(institutesList) ?\n                                        (institutesList.find((ins) => ins.id === education.institution)).title : ''}\n                                    degree={education.degree}\n                                    year={education.year}\n                                />\n                            ))\n                            :\n                            <></>\n                        }\n                        </Col>\n                    </Row>\n                </>\n            }\n            </Col>\n        </Row>\n        </>\n    );\n}\n\nexport default StudentProfile;","import React, { useState, useEffect } from 'react'\nimport { Col, Row } from 'reactstrap'\nimport { RenderEducation } from '../../components/Extras'\nimport Loading from '../../components/Loading'\nimport { Field } from '../../components/ProfileComponents'\nimport { baseUrl } from '../../shared/baseUrl'\n\nfunction StaffProfile({ token, staffId, institutesList, setTitle }) {\n    const [staffObj, setStaffObj] = useState({})\n    const [loading, setLoading] = useState(false)\n    const [errorMsg, setErrorMsg] = useState('')\n\n    useEffect(() => {\n        setLoading(true)\n        fetch(baseUrl + 'main/api/staff/' + staffId + '/', {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Token ' + token\n            }\n        })\n        .then(response => {\n            if(!response.ok)\n                throw new Error('Error while fetching staff data!')\n            return response.json()\n        })\n        .then(response => {\n            setStaffObj(response)\n            setTitle(response.title)\n            setLoading(false)\n        })\n        .catch(err => {\n            console.log(err);\n            setErrorMsg(err.message)\n            setLoading(false)\n        })\n    }, [token, staffId, setTitle])\n\n    return (\n        <>\n        <Row className=\"p-3 p-md-4 \">\n            <Col className=\"xs-12 text-center\">\n                <h2 className=\"font-weight-bold\">Staff Details</h2>\n            </Col>\n        </Row>\n        <Row>\n            <Col>\n            {\n                (loading) ?\n                <Loading />\n                :\n                (errorMsg) ?\n                <p xs={12} className='text-danger'>{errorMsg}</p>\n                :\n                <>\n                    <Field title={\"Employee Id.\"} value={staffObj.employeeId} />\n                    <Field title={\"Date of joining\"} value={staffObj.associatedSince} />\n                    <Field title={\"Deapartment\"} value={staffObj.department} />\n                    <Field title={\"Designation\"} value={staffObj.designation} />\n                    <Row className=\"mt-3 mb-3\">\n                        <Col md=\"4\">\n                            <h3 className=\"font-weight-bold\">Education</h3>\n                        </Col>\n                        <Col md=\"8\">\n                        {\n                            (staffObj && staffObj.education) ?\n                            staffObj.education.map((education) => (\n                                <RenderEducation\n                                    institution={(institutesList) ?\n                                        (institutesList.find((ins) => ins.id === education.institution)).title : ''}\n                                    degree={education.degree}\n                                    year={education.year}\n                                />\n                            ))\n                            :\n                            <></>\n                        }\n                        </Col>\n                    </Row>\n                </>\n            }\n            </Col>\n        </Row>\n        </>\n    );\n}\n\nexport default StaffProfile;","import React, { useCallback, useState } from \"react\";\nimport { PieChart, Pie, Cell, Sector } from \"recharts\";\n\nvar data = [\n    { name: \"Group A\", value: 400 },\n    { name: \"Group B\", value: 300 },\n    { name: \"Group C\", value: 300 },\n    { name: \"Group D\", value: 200 }\n];\n\nvar COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\n\nconst renderActiveShape = (props) => {\n    const RADIAN = Math.PI / 180;\n    const {\n        cx,\n        cy,\n        midAngle,\n        innerRadius,\n        outerRadius,\n        startAngle,\n        endAngle,\n        fill,\n        payload,\n        // percent,\n        value\n    } = props;\n    const sin = Math.sin(-RADIAN * midAngle);\n    const cos = Math.cos(-RADIAN * midAngle);\n    const sx = cx + (outerRadius + 10) * cos;\n    const sy = cy + (outerRadius + 10) * sin;\n    const mx = cx + (outerRadius + 30) * cos;\n    const my = cy + (outerRadius + 30) * sin;\n    const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n    const ey = my;\n    const textAnchor = cos >= 0 ? \"start\" : \"end\";\n\n    return (\n        <g>\n            <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>\n                {payload.name}\n            </text>\n            <Sector\n                cx={cx}\n                cy={cy}\n                innerRadius={innerRadius}\n                outerRadius={outerRadius}\n                startAngle={startAngle}\n                endAngle={endAngle}\n                fill={fill}\n            />\n            <Sector\n                cx={cx}\n                cy={cy}\n                startAngle={startAngle}\n                endAngle={endAngle}\n                innerRadius={outerRadius + 6}\n                outerRadius={outerRadius + 10}\n                fill={fill}\n            />\n            <path\n                d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`}\n                stroke={fill}\n                fill=\"none\"\n            />\n            <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n            <text\n                x={ex + (cos >= 0 ? 1 : -1) * 12}\n                y={ey}\n                textAnchor={textAnchor}\n                fill=\"#333\"\n            >{`${value}`}</text>\n            {/* <text\n                x={ex + (cos >= 0 ? 1 : -1) * 12}\n                y={ey}\n                dy={18}\n                textAnchor={textAnchor}\n                fill=\"#999\"\n            >\n                {`(Rate ${(percent * 100).toFixed(2)}%)`}\n            </text> */}\n        </g>\n    );\n};\n\nfunction ProfilePieChart(props) {\n    const [activeIndex, setActiveIndex] = useState(0);\n    const onPieEnter = useCallback(\n        (_, index) => {\n            setActiveIndex(index);\n        },\n        [setActiveIndex]\n    );\n\n    const [width, setWidth] = useState(50);\n    const div = useCallback(node => {\n        if (node !== null) {\n            setWidth(node.getBoundingClientRect().width);\n            console.log('widthhhhhh', node.getBoundingClientRect().width)\n        }\n    }, []);\n\n    const height_ = width\n    const width_ = width\n\n    if(props.data)\n        data = props.data\n    if (props.colors)\n        COLORS = props.colors\n\n    return (\n        <div ref={div} className=\"w-100\">\n        <PieChart width={width_} height={height_} className=\"d-flex m-auto\">\n            <Pie\n                activeIndex={activeIndex}\n                activeShape={renderActiveShape}\n                data={data}\n                cx={width_ / 2}\n                cy={height_ / 2}\n                innerRadius={0.22 * height_}\n                outerRadius={0.28 * height_}\n                dataKey=\"value\"\n                onMouseEnter={onPieEnter}\n            >\n                {data.map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                ))}\n            </Pie>\n        </PieChart>\n        </div>\n    );\n}\n\nexport default ProfilePieChart;","import React, { useState, useEffect } from 'react'\nimport { Redirect, withRouter, useParams } from 'react-router'\nimport { Container, Row, Col } from 'reactstrap';\nimport { connect } from 'react-redux';\n// import Loading from '../../components/Loading';\nimport { SocialMedia, Field, AchievementsTable, ProjectsTable } from '../../components/ProfileComponents'\nimport { baseUrl, baseUrl_ } from '../../shared/baseUrl';\nimport Loading from '../../components/Loading';\nimport NotFound from '../../components/NotFound';\nimport StudentProfile from './StudentProfile';\nimport { fetchInstitutesList } from '../../redux/ActionCreators';\nimport StaffProfile from './StaffProfile';\nimport { listOfTitles } from '../../components/Extras';\nimport ProfilePieChart from './ProfilePieChart';\n\nconst mapStateToProps = (state) => ({\n    authorized: state.user.authorized,\n    token: state.user.token,\n    institutesList: state.forms.institutesList,\n    institutesLoading: state.forms.institutesLoading,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    fetchInstitutesList: (key) => dispatch(fetchInstitutesList(key)),\n})\n\nfunction fetchProfile(key, profileId, setProfile, setLoading, setErrorMessage) {\n    let token_head = 'Token '+key;\n    console.log(token_head)\n    fetch(baseUrl+'auth/api/profile/'+profileId, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': token_head\n        }\n    })\n    .then((response) => {\n        if(!response.ok)\n            throw new Error('Profile not found!')\n        console.log(response.error)\n        return response\n    })\n    .then(response => response.json())\n    .then(response => {\n        console.log(response)\n        setProfile(response)\n        setLoading(false)\n        return response\n    })\n    .catch(error => {\n        setLoading(false)\n        setErrorMessage(error.message)\n        console.log(error)\n    })\n}\n\nfunction Profile(props) {\n    const [loading, setLoading] = useState(false);\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const [profile, setProfile] = useState(null);\n\n    // Use this title for staff title\n    const [title, setTitle] = useState('')\n\n    const {profileId} = useParams();\n\n    useEffect(() => {\n        setLoading(true);\n        fetchProfile(props.token, profileId, setProfile, setLoading, setErrorMessage);\n    }, [profileId, props.token])\n\n    useEffect(() => {\n        if(!props.institutesList && !props.institutesLoading) {\n            props.fetchInstitutesList(props.token)\n        }\n    }, [props])\n\n    const countItems = (list, approvedValue) => {\n        if(!list)\n            return 0\n        return list.filter((item) => item['approved'].toLowerCase() === approvedValue.toLowerCase()).length\n    }\n\n    if(!props.authorized)\n        return (\n            <Redirect to=\"/login\" />\n        );\n\n    if(errorMessage)\n        return (\n            <NotFound message={errorMessage} />\n        );\n\n\n    if(loading || !profile)\n        return (\n            <Loading />\n        )\n\n    // let skill_str = \"\"\n    // for(let i=0; profile && i<profile.skills.length; ++i) {\n    //     skill_str += profile.skills[i]\n    //     if(i !== profile.skills.length-1)\n    //         skill_str += ', '\n    // }\n    return (\n        <Container className=\"p-4 p-md-5 mt-4 mb-4 bg-color-lightest-grey rounded-3\">\n            <Row className=\"p-3 p-md-4 \">\n                <Col className=\"xs-12 text-center\">\n                    <h2 className=\"font-weight-bold\">User Profile</h2>\n                </Col>\n            </Row>\n            <Row>\n                <Col md=\"4\">\n                    <img src={(profile.profile_pic && profile.profile_pic !== '.') ? baseUrl_ + profile.profile_pic : \"/assets/Profile/dp.png\"} alt=\"profile\" className=\"rounded-circle w-100 p-3\"/>\n                </Col>\n                <Col md=\"8\">\n                    <Field title=\"Name\" value={(title ? (listOfTitles.find((t) => t.id === title)).title + ' ' : '') + profile.name} />\n                    <Field title=\"Role\" value={[\n                        \"Student\",\n                        \"Staff\",\n                        \"Admin\"\n                    ][profile.designation-1]} />\n                    <Field title=\"Date of Birth\" value={new Date(profile.dob).toLocaleString('default', {day: \"2-digit\", month: 'short', year: \"numeric\" })} />\n                    <Field title=\"Gender\" value={\n                        [\n                            \"Female\", \"Male\", \"Other\"\n                        ]\n                        [profile.gender-1]} />\n                    <SocialMedia\n                        instagram={profile.instagram}\n                        facebook={profile.facebook}\n                        twitter={profile.twitter}\n                        github={profile.github}\n                    />\n                </Col>\n            </Row>\n            {\n                (profile.show_email) ?\n                <Field title=\"Email\" value={profile.email} />\n                :\n                <></>\n            }\n            {\n                (profile.show_phone) ?\n                <Field title=\"Phone\" value={profile.phone_number} />\n                :\n                <></>\n            }\n            {/* <Field title=\"Group\" value={profile.group} /> */}\n            {/* <Field title=\"Skills\" value={skill_str} /> */}\n            <Field title=\"Bio\" value={profile.address}></Field>\n            {\n                (profile.designation !== 3) ?\n                <StudentProfile token={props.token} studentId={profile.user} institutesList={props.institutesList} />\n                :\n                <StaffProfile token={props.token} staffId={profile.user} institutesList={props.institutesList} setTitle={setTitle} />\n            }\n            <Field title=\"Achievements\" value=\"\" />\n            <AchievementsTable achievements={profile.achievements} />\n            <Field title=\"Projects\" value=\"\" />\n            <ProjectsTable projects={profile.projects} />\n            <Row>\n            <Col className={`${profile.projects && profile.projects.length > 0 ? 'd-flex' : 'd-none'}`} lg={6}>\n                <ProfilePieChart\n                data={[\n                    { name: \"Approved Projects\", value: countItems(profile.projects, 'approved') },\n                    { name: \"Pending Projects\", value: countItems(profile.projects, 'pending') },\n                    { name: \"Rejected Projects\", value: countItems(profile.projects, 'rejected') },\n                ]}\n                colors={[\n                    '#28a745', '#ffc107', '#dc3545'\n                ]} />\n            </Col>\n            <Col className={`${profile.achievements && profile.achievements.length > 0 ? 'd-flex' : 'd-none'}`} lg={6}>\n                <ProfilePieChart\n                data={[\n                    { name: \"Approved Achievements\", value: countItems(profile.achievements, 'approved') },\n                    { name: \"Pending Achievements\", value: countItems(profile.achievements, 'pending') },\n                    { name: \"Rejected Achievements\", value: countItems(profile.achievements, 'rejected') },\n                ]}\n                colors={[\n                    '#28a745', '#ffc107', '#dc3545'\n                ]} />\n            </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Profile));","import React, {useState, useEffect} from 'react';\nimport { Redirect, useParams, withRouter } from \"react-router\";\nimport { connect } from 'react-redux';\nimport { fetchProject } from '../../redux/ActionCreators';\nimport Loading from '../../components/Loading';\nimport NotFound from '../../components/NotFound';\nimport AddProject from '../AddProject';\n\nconst mapStateToProps = (state) => ({\n    authorized: state.user.authorized,\n    token: state.user.token,\n})\n\nfunction EditProject(props) {\n    const [loading, setLoading] = useState(false);\n    const [errorMessage, setErrorMessage] = useState(false);\n    const [projectDetails, setProjectDetails] = useState(false);\n    const {projectId} = useParams();\n    useEffect(() => {\n        if(!loading && !errorMessage && !projectDetails) {\n            setLoading(true);\n            fetchProject(props.token, projectId, setProjectDetails, setLoading, setErrorMessage);\n        }\n    }, [loading, errorMessage, projectDetails, projectId, props.token])\n\n    if(errorMessage)\n        return (\n            <NotFound />\n        );\n    return (\n        <>\n            {\n            (!props.authorized) ?\n            (\n                <Redirect to=\"/login\" />\n            ) :\n            (loading) ?\n            (\n                <Loading />\n            ) :\n                <AddProject edit={true} projectDetails={projectDetails} />\n            }\n        </>\n    );\n}\n\nexport default withRouter(connect(mapStateToProps)(EditProject));","import React, {useState, useEffect} from 'react';\nimport { Redirect, useParams, withRouter } from \"react-router\";\nimport { connect } from 'react-redux';\nimport { fetchAchievement } from '../../redux/ActionCreators';\nimport Loading from '../../components/Loading';\nimport NotFound from '../../components/NotFound';\nimport AddAchievement from '../AddAchievement';\n\nconst mapStateToProps = (state) => ({\n    authorized: state.user.authorized,\n    token: state.user.token,\n})\n\nfunction EditAchievement(props) {\n    const [loading, setLoading] = useState(false);\n    const [errorMessage, setErrorMessage] = useState(false);\n    const [achievementDetails, setAchievementDetails] = useState(false);\n    const {achievementId} = useParams();\n    useEffect(() => {\n        if(!loading && !errorMessage && !achievementDetails) {\n            setLoading(true);\n            fetchAchievement(props.token, achievementId, setAchievementDetails, setLoading, setErrorMessage);\n        }\n    }, [loading, errorMessage, achievementDetails, achievementId, props.token])\n\n    if(errorMessage)\n        return (\n            <NotFound />\n        );\n    return (\n        <>\n            {\n            (!props.authorized) ?\n            (\n                <Redirect to=\"/login\" />\n            ) :\n            (loading) ?\n            (\n                <Loading />\n            ) :\n                <AddAchievement edit={true} achievementDetails={achievementDetails} />\n            }\n        </>\n    );\n}\n\nexport default withRouter(connect(mapStateToProps)(EditAchievement));","import React, { useState} from 'react';\nimport { Modal, CustomInput, Row, Col, Button, ModalHeader, ModalBody, ModalFooter, Input } from 'reactstrap';\nimport { withRouter } from \"react-router\";\nimport { connect } from 'react-redux';\nimport { baseUrl } from '../../shared/baseUrl';\n\nconst mapStateToProps = (state) => ({\n    authorized: state.user.authorized,\n    token: state.user.token,\n})\n\nconst postBanner = (key, bannerObj, addBanner, setLoading, setError, setMessage) => {\n    setLoading(true)\n    setError(false)\n    setMessage('')\n\n    var form_data = new FormData()\n    for(const ke in bannerObj)\n        form_data.append(ke, bannerObj[ke])\n\n    fetch(baseUrl+'main/api/banner/', {\n        method: 'POST',\n        headers: {\n            'Authorization': 'Token ' + key\n        },\n        body: form_data\n    })\n    .then(response => {\n        if(!response.ok)\n            throw Error(\"Error occurred while fetching banners!\");\n        return response;\n    })\n    .then(response => response.json())\n    .then((response) => {\n        setLoading(false)\n        setMessage('Banner successfully added!')\n        addBanner(response)\n    })\n    .catch(err => {\n        console.log(err)\n        setLoading(false)\n        setError(true)\n        setMessage(err.message)\n    });\n}\n\nfunction PostBanner (props) {\n    const [isModalOpen, setIsModalOpen] = useState(false)\n    const [posting, setPosting] = useState(false);\n    const [error, setError] = useState(false)\n    const [message, setMessage] = useState('');\n\n    const [title, setTitle] = useState('')\n    const [desc, setDesc] = useState('')\n    const [link, setLink] = useState('')\n    const [file, setFile] = useState(false)\n\n    return (\n        <>\n        <Button color='success' onClick={() => setIsModalOpen(true)}>\n            Add New Banner\n        </Button>\n        <Modal centered isOpen={isModalOpen} toggle={() => setIsModalOpen(!isModalOpen)}>\n            <ModalHeader>\n                <h3 className='font-weight-bold'>Add New Banner</h3>\n            </ModalHeader>\n            <ModalBody>\n                <Row className='mb-3'>\n                    <Col xs={12}>\n                        <h4>Title</h4>\n                    </Col>\n                    <Col xs={12}>\n                        <Input type='textarea' value={title} onChange={(e) => setTitle(e.target.value)} />\n                    </Col>\n                </Row>\n                <Row className='mb-3'>\n                    <Col xs={12}>\n                        <h4>Description (Upto 50 words)</h4>\n                    </Col>\n                    <Col xs={12}>\n                        <Input type='textarea' value={desc} onChange={(e) => setDesc(e.target.value)} />\n                    </Col>\n                </Row>\n                <Row className='mb-3'>\n                    <Col xs={12}>\n                        <h4>Link</h4>\n                    </Col>\n                    <Col xs={12}>\n                        <Input type='text' value={link} onChange={(e) => setLink(e.target.value)} />\n                    </Col>\n                </Row>\n                <Row className=\"mt-3 mb-3\">\n                    <Col xs={12}>\n                        <h3>Image (16:9 ratio)</h3>\n                    </Col>\n                    <Col xs={12}>\n                        <CustomInput type=\"file\" id=\"file\"\n                            onChange={(e) => setFile(e.target.files[0])}/>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                    {\n                        <p className={`${error ? 'text-danger' : 'text-success'}`}>\n                            {message}\n                        </p>\n                    }\n                    </Col>\n                </Row>\n            </ModalBody>\n            <ModalFooter>\n                <Button color=\"success\"\n                    onClick={() => postBanner(props.token,\n                        {\n                            title: title,\n                            description: desc,\n                            link: link,\n                            image: file\n                        },\n                        props.addBanner, setPosting, setError, setMessage)}\n                        disabled={posting}\n                    >\n                    Add Banner\n                </Button>\n            </ModalFooter>\n        </Modal>\n        </>\n    );\n}\n\nexport default  withRouter(connect(mapStateToProps)(PostBanner));","import React from 'react'\nimport { Table, Button } from 'reactstrap';\nimport { baseUrl } from '../../shared/baseUrl';\n\nconst deleteBannerFromServer = (key, bannerId, deleteFromList) => {\n    fetch(baseUrl + 'main/api/banner/' + bannerId + '/', {\n        method: 'DELETE',\n        headers: {\n            'Authorization': 'Token ' + key\n        }\n    })\n    .then(response => {\n        if(!response.ok)\n            throw Error('Error!')\n        return response\n    })\n    .then(() => {\n        deleteFromList()\n    })\n    .catch((err) => {\n        console.log(err.message)\n    })\n}\n\nfunction RenderBanners({key, banners, deleteBanner}) {\n    return (\n        <Table hover responsive className=\"rounded-2\">\n            <thead>\n                <tr>\n                <th className=\"text-color-main h5\">#</th>\n                <th className=\"text-color-main h5\">Image</th>\n                <th className=\"text-color-main h5\">Title</th>\n                <th className=\"text-color-main h5\">Delete</th>\n                </tr>\n            </thead>\n            <tbody>\n                {\n                    (banners) ?\n                    banners.map((banner) => {\n                        return (\n                            <tr>\n                            <td>{banner.id}</td>\n                            <td>\n                                <img style={{maxWidth: '25vw'}} src={banner.image} alt={banner.Image} />\n                            </td>\n                            <td>{banner.title}</td>\n                            <td>\n                                <Button color='danger'\n                                    className='w-100'\n                                    disabled={banner.deleting}\n                                    onClick={() => {\n                                        banner.deleting = true\n                                        deleteBannerFromServer(key, banner.id, () => deleteBanner(banner))\n                                    }}\n                                >\n                                    Delete\n                                </Button>\n                            </td>\n                            </tr>\n                        )\n                    })\n                    :\n                    <></>\n                }\n            </tbody>\n        </Table>\n    )\n}\n\nexport default RenderBanners;","import React, { useEffect, useState} from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport { Redirect, withRouter } from \"react-router\";\nimport { connect } from 'react-redux';\nimport Loading from '../../components/Loading';\nimport NotFound from '../../components/NotFound'\nimport { fetchBanners } from '../../redux/ActionCreators';\nimport PostBanner from './PostBanner';\nimport RenderBanners from './RenderBanners';\n\nconst mapStateToProps = (state) => ({\n    authorized: state.user.authorized,\n    token: state.user.token,\n})\n\nfunction EditBanners (props) {\n    const [loading, setLoading] = useState(false);\n    const [errorMessage, setErrorMessage] = useState(false);\n    const [banners, setBanners] = useState([]);\n\n    const addBanner = (banner) => {\n        setBanners([...banners, banner])\n    }\n\n    const deleteBanner = (banner) => {\n        setBanners(banners.filter((ban) => ban.id !== banner.id))\n    }\n\n    useEffect(() => {\n        fetchBanners(props.token, setBanners, setLoading, setErrorMessage)\n    }, [props.token])\n\n    if(errorMessage)\n        return (\n            <NotFound message={errorMessage} />\n        );\n\n    return (\n        <Container className=\"p-3 p-md-4 p-lg-5 mt-4 mb-4 bg-color-lightest-grey rounded-3\">\n        {\n        (!props.authorized) ?\n        (\n            <Redirect to=\"/login\" />\n        ) :\n        (loading) ?\n        (\n            <Loading />\n        ) :\n        (\n            <>\n            <Row className=\"mb-5\">\n                <Col>\n                    <h2 className=\"text-center font-weight-bold\">Edit Banners</h2>\n                </Col>\n            </Row>\n            <Row className='mb-4'>\n                <Col>\n                <PostBanner addBanner={addBanner} deleteBanner={deleteBanner} />\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <RenderBanners banners={banners} />\n                </Col>\n            </Row>\n            </>\n        )\n        }\n        </Container>\n    );\n}\n\nexport default  withRouter(connect(mapStateToProps)(EditBanners));","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nimport Navigation from './components/Navigation';\nimport Footer from './components/Footer';\nimport Home from './pages/Home'\nimport Profile from './pages/Profile'\nimport Projects from './pages/Projects';\n\nimport './App.scss';\nimport Login from './pages/Authenticate/Login';\nimport LoginOld from './pages/Authenticate/LoginOld';\nimport SignUp from './pages/Authenticate/SignUp';\nimport AddAchievement from './pages/AddAchievement';\nimport AddProject from './pages/AddProject';\nimport MyAchievements from './pages/MyAchievements';\nimport MyProjects from './pages/MyProjects';\nimport Achievement from './pages/Achievement';\nimport Project from './pages/Project';\nimport PendingProjects from './pages/PendingProjects';\nimport PendingAchievements from './pages/PendingAchievements';\nimport Achievements from './pages/Achievements';\nimport About from './pages/About';\nimport UserProfile from './pages/UserProfile';\nimport EditProject from './pages/EditProject';\nimport EditAchievement from './pages/EditAchievement';\nimport EditBanners from './pages/EditBanners';\n\nconst store = ConfigureStore();\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <BrowserRouter basename=\"/\">\n        <div className=\"App pl-2 pr-2\" style={{minHeight: '95vh'}}>\n          <Navigation />\n\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/about\" exact component={About} />\n            <Route path=\"/profile\" exact component={Profile} />\n            <Route path=\"/profile/:profileId\" component={UserProfile} />\n            <Route path=\"/projects\" component={Projects}></Route>\n            <Route path=\"/achievements\" component={Achievements}></Route>\n            <Route path=\"/login\" component={Login}></Route>\n            <Route path =\"/oldlogin\" component={LoginOld}></Route>\n            <Route path=\"/signup\" component={SignUp}></Route>\n            <Route path=\"/addachievement\" component={AddAchievement}></Route>\n            <Route path=\"/addproject\" component={AddProject}></Route>\n            <Route path=\"/myachievements\" component={MyAchievements}></Route>\n            <Route path=\"/myprojects\" component={MyProjects}></Route>\n            <Route path=\"/achievement/:achievementId\" component={Achievement}></Route>\n            <Route path=\"/project/:projectId\" component={Project}></Route>\n            <Route path=\"/editproject/:projectId\" component={EditProject}></Route>\n            <Route path=\"/editachievement/:achievementId\" component={EditAchievement}></Route>\n            <Route path=\"/pending-projects\" component={PendingProjects}></Route>\n            <Route path=\"/pending-achievements\" component={PendingAchievements}></Route>\n            <Route path=\"/banners\" component={EditBanners} />\n          </Switch>\n\n        </div>\n\n        <Footer />\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { combineReducers, createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { Updates } from './updates';\nimport { User } from './user';\nimport { Forms } from './forms';\nimport { Admin } from './admin';\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n        combineReducers({\n            updates: Updates,\n            user: User,\n            forms: Forms,\n            admin: Admin\n        }),\n        applyMiddleware(thunk, logger)\n    );\n\n    return store;\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["shared/blogs.js","redux/blogs.js","shared/pending.js","redux/pending.js","redux/actionTypes.js","redux/updates.js","redux/user.js","redux/forms.js","redux/admin.js","shared/baseUrl.js","redux/ActionCreators.js","components/Navigation.jsx","components/Footer.jsx","pages/Home/Banner.jsx","components/Loading.jsx","pages/Home/HomeCard.jsx","pages/Home/index.jsx","components/Extras.jsx","components/ProfileComponents.jsx","pages/Profile/EditEducation.jsx","pages/Profile/EditStudentDetails.jsx","pages/Profile/EditStaffDetails.jsx","pages/Profile/index.jsx","components/Search.jsx","components/NotFound.jsx","pages/Projects/index.jsx","pages/Authenticate/Login.jsx","pages/Authenticate/SignUp.jsx","pages/AddAchievement/index.jsx","firebase/index.js","pages/AddProject/index.jsx","components/Tables.jsx","pages/MyAchievements/index.jsx","pages/MyProjects/index.jsx","pages/Achievement/index.jsx","pages/Project/index.jsx","pages/PendingProjects/PendingProjectsTable.jsx","pages/PendingProjects/index.jsx","pages/PendingAchievements/PendingAchievementsTable.jsx","pages/PendingAchievements/index.jsx","pages/Achievements/index.jsx","pages/About/index.jsx","pages/UserProfile/StudentProfile.jsx","pages/UserProfile/StaffProfile.jsx","pages/UserProfile/ProfilePieChart.jsx","pages/UserProfile/index.jsx","pages/EditProject/index.jsx","pages/EditAchievement/index.jsx","App.jsx","redux/configureStore.js","reportWebVitals.js","index.jsx"],"names":["blogs","title","story","plot","detailedPlot","author","imagePath","Blogs","state","BLOGS","action","type","pending","id","addedBy","description","proof","date","Pending","PENDING","UPDATES_LOADING","UPDATES_FAILED","ADD_UPDATES","LOGGING_IN","LOGIN_FAILED","LOAD_KEY","LOAD_PROFILE","LOAD_PROFILE_ACHIEVEMENTS","LOAD_PROFILE_PROJECTS","CLEAR_USER_DATA","LOAD_PROFESSORS_LIST","PROFESSORS_LIST_LOADING","LOAD_STUDENTS_LIST","STUDENTS_LIST_LOADING","LOAD_INSTITUTES_LIST","INSTITUTES_LIST_LOADING","LOAD_TAGS_LIST","TAGS_LIST_LOADING","ADD_TAG_LIST","ADD_ACHIEVEMENT_POSTING","ADD_ACHIEVEMENT_POSTING_ERROR","ADD_ACHIEVEMENT_POSTING_SUCCESS","ADD_PROJECT_POSTING","ADD_PROJECT_POSTING_ERROR","ADD_PROJECT_POSTING_SUCCESS","ADD_PENDING_ACHIEVEMENTS","PENDING_ACHIEVEMENTS_LOADING","PENDING_ACHIEVEMENTS_LOADING_ERROR","ADD_PENDING_PROJECTS","PENDING_PROJECTS_LOADING","PENDING_PROJECTS_LOADING_ERROR","PROJECT_APPROVING","PROJECT_REJECTING","PROJECT_DELETING","PROJECT_APPROVED","PROJECT_REJECTED","PROJECT_DELETED","PROJECT_ERROR","ACHIEVEMENT_APPROVING","ACHIEVEMENT_REJECTING","ACHIEVEMENT_DELETING","ACHIEVEMENT_APPROVED","ACHIEVEMENT_REJECTED","ACHIEVEMENT_ERROR","ACHIEVEMENT_DELETED","Updates","isLoading","errMess","updates","ActionTypes","payload","initialState","authorized","sessionStorage","getItem","Cookies","get","loggingIn","error","token","admin","profileLoaded","profile","achievements","projects","User","objIndex","newState","setItem","clear","undefined","findIndex","obj","deleting","deleted","console","log","professorsList","professorsLoading","studentsList","studentsLoading","institutesList","institutesLoading","tagsList","tagsLoading","awardCategory","addAchievementPosting","addAchievementPostingError","addAchievementPostingMessage","addProjectPosting","addProjectPostingError","addProjectPostingMessages","Forms","addProjectPostingMessage","pendingProjects","pendingProjectsLoading","pendingProjectsLoadingError","pendingAchievements","pendingAchievementsLoading","pendingAchievementsLoadingError","Admin","approving","approved","rejecting","baseUrl","baseUrl_","loadKey","key","value","loginFailed","err","fetchUserProfile","dispatch","token_head","fetch","method","headers","then","response","json","catch","fetchUserAchievements","fetchUserProjects","updatesLoading","addUpdates","fetchStudentsList","studentsListLoading","loadStudentsList","students","loadProfessorsList","professors","professorsListLoading","fetchInstitutesList","loadInstitutesList","institutes","fetchTagsList","loadTagsList","tags","postTag","tag","callback","errorFunction","body","JSON","stringify","ok","Error","message","fetchProject","projectId","setProjectDetails","setLoading","setErrorMessage","fetchAchievement","achievementId","setAchievementDetails","addAchievementPostingSuccess","addFileToAchievement","aId","file","form_data","FormData","append","addProjectPostingSuccess","fetchPendingProjects","details","unapproved","fetchPendingAchievements","projectError","approveProject","userId","projectApproving","approvedBy","projectApproved","rejectProject","feedback","projectRejecting","projectRejected","deleteProject","projectDeleting","projectDeleted","achievementError","approveAchievement","achievementApproving","achievementApproved","rejectAchievement","achievementRejecting","achievementRejected","deleteAchievement","achievementDeleting","achievementDeleted","UserIcon","logout","UncontrolledDropdown","inNavbar","DropdownToggle","className","nav","caret","width","height","src","alt","DropdownMenu","right","to","DropdownItem","divider","onClick","withRouter","connect","user","props","useState","collapsed","setCollapsed","setAdmin","useEffect","designation","Navbar","light","expand","NavbarBrand","href","NavbarText","NavbarToggler","Collapse","isOpen","navbar","Nav","NavItem","Footer","Container","fluid","Row","Col","Arrow","icon","class","BannerCard","image","Button","color","size","slidesPerPage","centered","arrowLeft","arrowRight","addArrowClickHandler","infinite","autoPlay","animationSpeed","breakpoints","768","storyNo","Loading","margin","UpdatesCard","heading","buttonText","buttonLink","length","map","update","Home","this","publications","fetchUpdates","equal","sm","lg","xxl","staff","Component","staff_achievements","student_achievements","listOfTitles","listOfDegrees","ApprovedBadge","toLowerCase","Badge","pill","RejectionModal","modalOpen","setModalOpen","onReject","reason","setReason","toggle","Modal","ModalHeader","ModalBody","Input","onChange","e","target","name","placeholder","ModalFooter","RenderUser","outline","first_name","last_name","RenderEducation","institution","degree","year","captializeFirstWord","string","replace","letter","toUpperCase","AddInstitutionModal","isModalOpen","setIsModalOpen","setInstitution","city","setCity","saving","setSaving","savingError","setSavingError","savingMsg","setSavingMsg","disabled","setError","setMsg","postInstitution","Field","md","FieldInput","setValue","FieldInputDropDown","values","category","InputSocialMedia","instagram","setInstagram","facebook","setFacebook","github","setGithub","twitter","setTwitter","InputGroup","InputGroupText","bsSize","SocialMedia","pathname","AchievementsTable","Table","hover","responsive","achievement","index","indexOf","scope","Date","achievedDate","toLocaleString","day","month","ProjectsTable","project","field","domain","forms","institute","setInstitute","setDegree","setYear","educationList","education","xs","find","ins","setEducationList","filter","edu","parseInt","rollNo","setRollNo","batch","setBatch","major","setMajor","gpa","setGpa","bio","setBio","setEducation","studId","setStudId","loading","savingMessage","setSavingMessage","res","GPA","studObject","patchStudentDetials","empId","setEmpId","joiningDate","setJoiningDate","department","setDepartment","setTitle","setDesignation","staffId","setStaffId","employeeId","associatedSince","staffObject","patchStaffDetials","patchUserProfile","studObj","setSavingSuccess","profile_pic","setName","email","setEmail","phone","setPhone","showemail","setShowemail","showphone","setShowphone","group","setGroup","dob","setdob","gender","setGender","address","setAddress","profilepic","setProfilepic","setFile","savingSuccess","phone_number","show_email","show_phone","files","reader","FileReader","readAsDataURL","onloadend","result","FormGroup","check","inline","checked","Label","for","e_mail","SearchBar","query","setQuery","onSearch","InputGroupAddon","addonType","aria-hidden","event","NotFound","style","maxWidth","maxHeight","fetchProjects","setProjects","Results","dateCreated","errorMessage","offset","Search","Login","username","password","handleSubmit","bind","handleUsernameChange","handlePasswordChange","setState","login","Form","loginOSA","rel","SignUp","dateofachievement","team","teamInput","teamAdding","teamInputErr","tagsInput","tagsAdding","tagsInputErr","progress","AddAchievement","edit","achievementDetails","teamMembers","handleInputChange","addTeamMember","addTag","removeFromList","clearState","handleFileChange","addAchievementPostingMessageClear","patchAchievement","postNewAchievement","preventDefault","studentObj","student","user__email","validation","input","split","s","charAt","substring","join","tagObj","processing","capitalize","listName","item","list","ind","splice","onSubmit","htmlFor","member","CustomInput","stateObj","clearFunction","bodyObj","app","initializeApp","apiKey","authDomain","storageBucket","messagingSenderId","appId","measurementId","storage","getStorage","startdate","enddate","mentors","mentorsInput","mentorAdding","mentorsInputErr","url","AddProject","projectDetails","startDate","endDate","members","addMentor","handleUpload","addProjectPostingMessageClear","storageRef","ref","uploadTask","uploadBytesResumable","on","snapshot","Math","round","bytesTransferred","totalBytes","getDownloadURL","downloadURL","patchProject","postNewProject","fetchProfessorsList","profObj","prof","mentor","arrayOfAchievements","arrayofProjects","useParams","technical","setProjectId","projectTitle","setProjectTitle","setAchievementId","achievementTitle","setAchievementTitle","fetchAchievements","setAchievements","About","StudentProfile","studentId","setStudObj","errorMsg","setErrorMsg","StaffProfile","staffObj","setStaffObj","data","COLORS","renderActiveShape","RADIAN","PI","cx","cy","midAngle","innerRadius","outerRadius","startAngle","endAngle","fill","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","x","y","dy","Sector","d","stroke","r","ProfilePieChart","activeIndex","setActiveIndex","onPieEnter","useCallback","_","setWidth","div","node","getBoundingClientRect","height_","width_","colors","PieChart","Pie","activeShape","dataKey","onMouseEnter","entry","Cell","setProfile","profileId","fetchProfile","countItems","approvedValue","t","store","createStore","combineReducers","applyMiddleware","thunk","logger","App","basename","minHeight","path","exact","component","Profile","UserProfile","Projects","Achievements","MyAchievements","MyProjects","Achievement","Project","EditProject","EditAchievement","PendingProjects","PendingAchievements","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9a31027.chunk.js","sourcesContent":["export const blogs = [\n    {\n        title: \"Lorem ipsum dolor sit amet, conse ctet uradipiscing elit.\",\n        story: \"Sit amet consecteturad elit\",\n        plot:\"Lorem ipsum dolor sit amet, conse ctet uradipiscing elit. Etiam quis sapien vitaemauris interdum elementum Sed accumsan nulla velit, vel imperdiet mi euismod eget. Nunc viverra\",\n        detailedPlot:\"Lorem ipsum dolor sit amet, conse ctet uradipiscing elit. Etiam quis sapien vitaemauris interdum elementum Sed accumsan nulla velit, vel imperdiet mi euismod eget. Nunc viverra elementum Sed  accumsan nulla velit, vel imperdiet mi euismod eget. Nun\",\n        author:\"\",\n        imagePath: \"assets/Home/1.jpg\",\n    },\n    {\n        title: \"Lorem ipsum dolor sit amet, conse ctet uradipiscing elit.\",\n        story: \"Sit amet consecteturad elit\",\n        plot:\"Lorem ipsum dolor sit amet, conse ctet uradipiscing elit. Etiam quis sapien vitaemauris interdum elementum Sed accumsan nulla velit, vel imperdiet mi euismod eget. Nunc viverra\",\n        detailedPlot:\"Lorem ipsum dolor sit amet, conse ctet uradipiscing elit. Etiam quis sapien vitaemauris interdum elementum Sed accumsan nulla velit, vel imperdiet mi euismod eget. Nunc viverra elementum Sed  accumsan nulla velit, vel imperdiet mi euismod eget. Nun\",\n        author:\"\",\n        imagePath: \"assets/Home/2.jpg\",\n    },\n    {\n        title: \"Lorem ipsum dolor sit amet, conse ctet uradipiscing elit.\",\n        story: \"Sit amet consecteturad elit\",\n        plot:\"Lorem ipsum dolor sit amet, conse ctet uradipiscing elit. Etiam quis sapien vitaemauris interdum elementum Sed accumsan nulla velit, vel imperdiet mi euismod eget. Nunc viverra\",\n        detailedPlot:\"Lorem ipsum dolor sit amet, conse ctet uradipiscing elit. Etiam quis sapien vitaemauris interdum elementum Sed accumsan nulla velit, vel imperdiet mi euismod eget. Nunc viverra elementum Sed  accumsan nulla velit, vel imperdiet mi euismod eget. Nun\",\n        author:\"\",\n        imagePath: \"assets/Home/3.jpg\",\n    },\n    {\n        title: \"Lorem ipsum dolor sit amet, conse ctet uradipiscing elit.\",\n        story: \"Sit amet consecteturad elit\",\n        plot:\"Lorem ipsum dolor sit amet, conse ctet uradipiscing elit. Etiam quis sapien vitaemauris interdum elementum Sed accumsan nulla velit, vel imperdiet mi euismod eget. Nunc viverra\",\n        detailedPlot:\"Lorem ipsum dolor sit amet, conse ctet uradipiscing elit. Etiam quis sapien vitaemauris interdum elementum Sed accumsan nulla velit, vel imperdiet mi euismod eget. Nunc viverra elementum Sed  accumsan nulla velit, vel imperdiet mi euismod eget. Nun\",\n        author:\"\",\n        imagePath: \"assets/Home/1.jpg\",\n    },\n    {\n        title: \"Lorem ipsum dolor sit amet, conse ctet uradipiscing elit.\",\n        story: \"Sit amet consecteturad elit\",\n        plot:\"Lorem ipsum dolor sit amet, conse ctet uradipiscing elit. Etiam quis sapien vitaemauris interdum elementum Sed accumsan nulla velit, vel imperdiet mi euismod eget. Nunc viverra\",\n        detailedPlot:\"Lorem ipsum dolor sit amet, conse ctet uradipiscing elit. Etiam quis sapien vitaemauris interdum elementum Sed accumsan nulla velit, vel imperdiet mi euismod eget. Nunc viverra elementum Sed  accumsan nulla velit, vel imperdiet mi euismod eget. Nun\",\n        author:\"\",\n        imagePath: \"assets/Home/2.jpg\",\n    },\n    {\n        title: \"Lorem ipsum dolor sit amet, conse ctet uradipiscing elit.\",\n        story: \"Sit amet consecteturad elit\",\n        plot:\"Lorem ipsum dolor sit amet, conse ctet uradipiscing elit. Etiam quis sapien vitaemauris interdum elementum Sed accumsan nulla velit, vel imperdiet mi euismod eget. Nunc viverra\",\n        detailedPlot:\"Lorem ipsum dolor sit amet, conse ctet uradipiscing elit. Etiam quis sapien vitaemauris interdum elementum Sed accumsan nulla velit, vel imperdiet mi euismod eget. Nunc viverra elementum Sed  accumsan nulla velit, vel imperdiet mi euismod eget. Nun\",\n        author:\"\",\n        imagePath: \"assets/Home/3.jpg\",\n    },\n    {\n        title: \"Lorem ipsum dolor sit amet, conse ctet uradipiscing elit.\",\n        story: \"Sit amet consecteturad elit\",\n        plot:\"Lorem ipsum dolor sit amet, conse ctet uradipiscing elit. Etiam quis sapien vitaemauris interdum elementum Sed accumsan nulla velit, vel imperdiet mi euismod eget. Nunc viverra\",\n        detailedPlot:\"Lorem ipsum dolor sit amet, conse ctet uradipiscing elit. Etiam quis sapien vitaemauris interdum elementum Sed accumsan nulla velit, vel imperdiet mi euismod eget. Nunc viverra elementum Sed  accumsan nulla velit, vel imperdiet mi euismod eget. Nun\",\n        author:\"\",\n        imagePath: \"assets/Home/1.jpg\",\n    },\n    {\n        title: \"Lorem ipsum dolor sit amet, conse ctet uradipiscing elit.\",\n        story: \"Sit amet consecteturad elit\",\n        plot:\"Lorem ipsum dolor sit amet, conse ctet uradipiscing elit. Etiam quis sapien vitaemauris interdum elementum Sed accumsan nulla velit, vel imperdiet mi euismod eget. Nunc viverra\",\n        detailedPlot:\"Lorem ipsum dolor sit amet, conse ctet uradipiscing elit. Etiam quis sapien vitaemauris interdum elementum Sed accumsan nulla velit, vel imperdiet mi euismod eget. Nunc viverra elementum Sed  accumsan nulla velit, vel imperdiet mi euismod eget. Nun\",\n        author:\"\",\n        imagePath: \"assets/Home/2.jpg\",\n    },\n    {\n        title: \"Lorem ipsum dolor sit amet, conse ctet uradipiscing elit.\",\n        story: \"Sit amet consecteturad elit\",\n        plot:\"Lorem ipsum dolor sit amet, conse ctet uradipiscing elit. Etiam quis sapien vitaemauris interdum elementum Sed accumsan nulla velit, vel imperdiet mi euismod eget. Nunc viverra\",\n        detailedPlot:\"Lorem ipsum dolor sit amet, conse ctet uradipiscing elit. Etiam quis sapien vitaemauris interdum elementum Sed accumsan nulla velit, vel imperdiet mi euismod eget. Nunc viverra elementum Sed  accumsan nulla velit, vel imperdiet mi euismod eget. Nun\",\n        author:\"\",\n        imagePath: \"assets/Home/3.jpg\",\n    },\n]","import { blogs as BLOGS } from '../shared/blogs';\n// import * as ActionTypes from './actionTypes';\n\nexport const Blogs = (state = BLOGS, action) => {\n    switch(action.type) {\n        default:\n            return state;\n    }\n}","export const pending = [\n    {\n        id: 123,\n        addedBy: \"Lorem ipsum\",\n        title: \"Ut sit amet commodo aute qui\",\n        description: \"Consectetur exercitation exercitation in eiusmod aliqua qui culpa deserunt.\",\n        proof: \"#\",\n        date: \"21 Jan, 20\"\n    },\n    {\n        id: 123,\n        addedBy: \"Lorem ipsum\",\n        title: \"Ut sit amet commodo aute qui\",\n        description: \"Consectetur exercitation exercitation in eiusmod aliqua qui culpa deserunt.\",\n        proof: \"#\",\n        date: \"21 Jan, 20\"\n    },\n    {\n        id: 123,\n        addedBy: \"Lorem ipsum\",\n        title: \"Ut sit amet commodo aute qui\",\n        description: \"Consectetur exercitation exercitation in eiusmod aliqua qui culpa deserunt.\",\n        proof: \"#\",\n        date: \"21 Jan, 20\"\n    },\n    {\n        id: 123,\n        addedBy: \"Lorem ipsum\",\n        title: \"Ut sit amet commodo aute qui\",\n        description: \"Consectetur exercitation exercitation in eiusmod aliqua qui culpa deserunt.\",\n        proof: \"#\",\n        date: \"21 Jan, 20\"\n    },\n    {\n        id: 123,\n        addedBy: \"Lorem ipsum\",\n        title: \"Ut sit amet commodo aute qui\",\n        description: \"Consectetur exercitation exercitation in eiusmod aliqua qui culpa deserunt.\",\n        proof: \"#\",\n        date: \"21 Jan, 20\"\n    },\n    {\n        id: 123,\n        addedBy: \"Lorem ipsum\",\n        title: \"Ut sit amet commodo aute qui\",\n        description: \"Consectetur exercitation exercitation in eiusmod aliqua qui culpa deserunt.\",\n        proof: \"#\",\n        date: \"21 Jan, 20\"\n    },\n    {\n        id: 123,\n        addedBy: \"Lorem ipsum\",\n        title: \"Ut sit amet commodo aute qui\",\n        description: \"Consectetur exercitation exercitation in eiusmod aliqua qui culpa deserunt.\",\n        proof: \"#\",\n        date: \"21 Jan, 20\"\n    },\n    {\n        id: 123,\n        addedBy: \"Lorem ipsum\",\n        title: \"Ut sit amet commodo aute qui\",\n        description: \"Consectetur exercitation exercitation in eiusmod aliqua qui culpa deserunt.\",\n        proof: \"#\",\n        date: \"21 Jan, 20\"\n    },\n    {\n        id: 123,\n        addedBy: \"Lorem ipsum\",\n        title: \"Ut sit amet commodo aute qui\",\n        description: \"Consectetur exercitation exercitation in eiusmod aliqua qui culpa deserunt.\",\n        proof: \"#\",\n        date: \"21 Jan, 20\"\n    },\n    {\n        id: 123,\n        addedBy: \"Lorem ipsum\",\n        title: \"Ut sit amet commodo aute qui\",\n        description: \"Consectetur exercitation exercitation in eiusmod aliqua qui culpa deserunt.\",\n        proof: \"#\",\n        date: \"21 Jan, 20\"\n    },\n    {\n        id: 123,\n        addedBy: \"Lorem ipsum\",\n        title: \"Ut sit amet commodo aute qui\",\n        description: \"Consectetur exercitation exercitation in eiusmod aliqua qui culpa deserunt.\",\n        proof: \"#\",\n        date: \"21 Jan, 20\"\n    },\n    {\n        id: 123,\n        addedBy: \"Lorem ipsum\",\n        title: \"Ut sit amet commodo aute qui\",\n        description: \"Consectetur exercitation exercitation in eiusmod aliqua qui culpa deserunt.\",\n        proof: \"#\",\n        date: \"21 Jan, 20\"\n    }\n]","import { pending as PENDING } from '../shared/pending';\n// import * as ActionTypes from './actionTypes';\n\nexport const Pending = (state = PENDING, action) => {\n    switch(action.type) {\n        default:\n            return state;\n    }\n}","/**\n * Define action types here\n *\n * Action Types are string constants to indentify different actions\n * in the reducers of Redux Store\n */\n\nexport const UPDATES_LOADING = 'UPDATES_LOADING';\nexport const UPDATES_FAILED = 'UPDATES_FAILED';\nexport const ADD_UPDATES = 'ADD_UPDATES';\n\nexport const LOGIN = 'LOGIN';\nexport const LOGGING_IN = 'LOGGING_IN';\nexport const LOGIN_FAILED = 'LOGIN_FAILED';\n\nexport const LOAD_KEY = 'LOAD_KEY';\nexport const LOAD_PROFILE = 'LOAD_PROFILE';\nexport const LOAD_PROFILE_ACHIEVEMENTS = 'LOAD_PROFILE_ACHIEVEMENTS';\nexport const LOAD_PROFILE_PROJECTS = 'LOAD_PROFILE_PROJECTS';\nexport const CLEAR_USER_DATA = 'CLEAR_USER_DATA';\n\nexport const LOAD_PROFESSORS_LIST = 'LOAD_PROFESSORS_LIST';\nexport const PROFESSORS_LIST_LOADING = 'PROFESSORS_LIST_LOADING';\nexport const LOAD_STUDENTS_LIST = 'LOAD_STUDENTS_LIST';\nexport const STUDENTS_LIST_LOADING = 'STUDENTS_LIST_LOADING';\nexport const LOAD_INSTITUTES_LIST = 'LOAD_INSTITUTES_LIST';\nexport const INSTITUTES_LIST_LOADING = 'INSTITUTES_LIST_LOADING';\nexport const LOAD_TAGS_LIST = 'LOAD_TAGS_LIST';\nexport const TAGS_LIST_LOADING = 'TAGS_LIST_LOADING';\nexport const ADD_TAG_LIST = 'ADD_TAG_LIST';\n\nexport const ADD_ACHIEVEMENT_POSTING = 'ADD_ACHIEVEMENT_POSTING';\nexport const ADD_ACHIEVEMENT_POSTING_ERROR = 'ADD_ACHIEVEMENT_POSTING_ERROR';\nexport const ADD_ACHIEVEMENT_POSTING_SUCCESS = 'ADD_ACHIEVEMENT_POSTING_SUCCESS';\n\nexport const ADD_PROJECT_POSTING = 'ADD_PROJECT_POSTING';\nexport const ADD_PROJECT_POSTING_ERROR = 'ADD_PROJECT_POSTING_ERROR';\nexport const ADD_PROJECT_POSTING_SUCCESS = 'ADD_PROJECT_POSTING_SUCCESS';\n\nexport const ADD_PENDING_ACHIEVEMENTS = 'ADD_PENDING_ACHIEVEMENTS';\nexport const PENDING_ACHIEVEMENTS_LOADING = 'PENDING_ACHIEVEMENTS_LOADING';\nexport const PENDING_ACHIEVEMENTS_LOADING_ERROR = 'PENDING_ACHIEVEMENTS_LOADING_ERROR';\n\nexport const ADD_PENDING_PROJECTS = 'ADD_PENDING_PROJECTS';\nexport const PENDING_PROJECTS_LOADING = 'PENDING_PROJECTS_LOADING';\nexport const PENDING_PROJECTS_LOADING_ERROR = 'PENDING_PROJECTS_LOADING_ERROR';\n\nexport const PROJECT_APPROVING = 'PROJECT_APPROVING';\nexport const PROJECT_REJECTING = 'PROJECT_REJECTING';\nexport const PROJECT_DELETING = 'PROJECT_DELETING';\nexport const PROJECT_APPROVED = 'PROJECT_APPROVED';\nexport const PROJECT_REJECTED = 'PROJECT_REJECTED';\nexport const PROJECT_DELETED = 'PROJECT_DELETED';\nexport const PROJECT_ERROR = 'PROJECT_ERROR';\n\nexport const ACHIEVEMENT_APPROVING = 'ACHIEVEMENT_APPROVING';\nexport const ACHIEVEMENT_REJECTING = 'ACHIEVEMENT_REJECTING';\nexport const ACHIEVEMENT_DELETING = 'ACHIEVEMENT_DELETING';\nexport const ACHIEVEMENT_APPROVED = 'ACHIEVEMENT_APPROVED';\nexport const ACHIEVEMENT_REJECTED = 'ACHIEVEMENT_REJECTED';\nexport const ACHIEVEMENT_ERROR = 'ACHIEVEMENT_ERROR';\nexport const ACHIEVEMENT_DELETED = 'ACHIEVEMENT_DELETED';\n","import * as ActionTypes from './actionTypes';\n\nexport const Updates = (state = {\n        isLoading: false,\n        errMess: null,\n        updates: {}\n    }, action) => {\n    switch(action.type) {\n        case ActionTypes.ADD_UPDATES:\n            return {...state, isLoading: false, errMess: null, updates: action.payload}\n\n        case ActionTypes.UPDATES_LOADING:\n            return {...state, isLoading: action.payload, errMess: null}\n\n        case ActionTypes.UPDATES_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, updates: {}}\n\n        default:\n            return state;\n    }\n}","import * as ActionTypes from './actionTypes';\nimport Cookies from 'cookies-js';\n\nconst initialState = {\n    authorized: (sessionStorage.getItem('key') ? sessionStorage.getItem('key') : Cookies.get('osa_token')) ? true : false,\n    loggingIn: false,\n    error: \"\",\n    token: sessionStorage.getItem('key') ? sessionStorage.getItem('key') : Cookies.get('osa_token'),\n    admin: false,\n\n    profileLoaded: false,\n    profile: {},\n    achievements: null,\n    projects: null,\n}\n\nexport const User = (state = initialState, action) => {\n    var newState = {...state}\n    var objIndex\n    switch(action.type) {\n        case ActionTypes.LOAD_KEY:\n            sessionStorage.setItem('key', action.payload);\n            return {...state, token: action.payload, authorized: true};\n        case ActionTypes.LOAD_PROFILE:\n            return {...state, profileLoaded: true, profile: action.payload}\n        case ActionTypes.LOAD_PROFILE_ACHIEVEMENTS:\n            return {...state, achievements: action.payload}\n        case ActionTypes.LOAD_PROFILE_PROJECTS:\n            return {...state, projects: action.payload}\n        case ActionTypes.CLEAR_USER_DATA:\n            sessionStorage.clear();\n            initialState.authorized = false;\n            initialState.token = undefined;\n            return initialState;\n        case ActionTypes.LOGIN_FAILED:\n            return {...state, error: action.payload}\n        case ActionTypes.LOGGING_IN:\n            return {...state, loggingIn: action.payload}\n        case ActionTypes.ACHIEVEMENT_DELETING:\n            if(!state.achievements)\n                return state\n            newState.achievements = [...newState.achievements]\n            objIndex = newState.achievements.findIndex((obj => obj.id === action.payload));\n            if(objIndex < 0)\n                return newState\n            newState.achievements[objIndex].deleting = true\n            newState.achievements[objIndex].error = ''\n            return newState\n        case ActionTypes.ACHIEVEMENT_DELETED:\n            if(!state.achievements)\n                return state\n            newState.achievements = [...newState.achievements]\n            objIndex = newState.achievements.findIndex((obj => obj.id === action.payload));\n            if(objIndex < 0)\n                return newState\n            newState.achievements[objIndex].deleting = false\n            newState.achievements[objIndex].deleted = true\n            newState.achievements[objIndex].error = ''\n            return newState\n        case ActionTypes.PROJECT_DELETING:\n            if(!state.projects)\n                return state\n            newState.projects = [...newState.projects]\n            objIndex = newState.projects.findIndex((obj => obj.id === action.payload));\n            if(objIndex < 0)\n                return newState\n            console.log(newState)\n            newState.projects[objIndex].deleting = true\n            newState.projects[objIndex].error = ''\n            return newState\n        case ActionTypes.PROJECT_DELETED:\n            if(!state.projects)\n                return state\n            newState.projects = [...newState.projects]\n            objIndex = newState.achievements.findIndex((obj => obj.id === action.payload));\n            if(objIndex < 0)\n                return newState\n            newState.projects[objIndex].deleting = false\n            newState.projects[objIndex].deleted = true\n            newState.projects[objIndex].error = ''\n            return newState\n        default:\n            return state;\n    }\n}","import * as ActionTypes from './actionTypes';\n\nconst initialState = {\n    professorsList: null,\n    professorsLoading: false,\n\n    studentsList: null,\n    studentsLoading: false,\n\n    institutesList: null,\n    institutesLoading: false,\n\n    tagsList: null,\n    tagsLoading: false,\n\n    awardCategory: [\n        { id: 0, title: 'Not Applicable' },\n        { id: 1, title: 'Intra College' },\n        { id: 2, title: 'Inter College' },\n        { id: 3, title: 'District Level' },\n        { id: 4, title: 'State Level' },\n        { id: 5, title: 'National Level' },\n        { id: 6, title: 'International Level' },\n    ],\n\n    addAchievementPosting: false,\n    addAchievementPostingError: false,\n    addAchievementPostingMessage: '',\n\n    addProjectPosting: false,\n    addProjectPostingError: false,\n    addProjectPostingMessages: ''\n}\n\nexport const Forms = (state = initialState, action) => {\n    switch(action.type) {\n        case ActionTypes.PROFESSORS_LIST_LOADING:\n            return {...state, professorsLoading: action.payload}\n        case ActionTypes.LOAD_PROFESSORS_LIST:\n            return {...state, professorsList: action.payload, professorsLoading: false};\n        case ActionTypes.STUDENTS_LIST_LOADING:\n            return {...state, studentsLoading: action.payload};\n        case ActionTypes.LOAD_STUDENTS_LIST:\n            return {...state, studentsList: action.payload, studentsLoading: false};\n        case ActionTypes.INSTITUTES_LIST_LOADING:\n            return {...state, institutesLoading: action.payload};\n        case ActionTypes.LOAD_INSTITUTES_LIST:\n            return {...state, institutesList: action.payload, institutesLoading: false};\n        case ActionTypes.TAGS_LIST_LOADING:\n            return {...state, tagsLoading: action.payload};\n        case ActionTypes.LOAD_TAGS_LIST:\n            return {...state, tagsList: action.payload, tagsLoading: false};\n        case ActionTypes.ADD_TAG_LIST:\n            return {...state, tagsList: [...state.tagsList, action.payload]};\n        case ActionTypes.ADD_ACHIEVEMENT_POSTING:\n            return {...state, addAchievementPosting: action.payload};\n        case ActionTypes.ADD_ACHIEVEMENT_POSTING_ERROR:\n            return {...state, addAchievementPostingError: true, addAchievementPostingMessage: action.payload, addAchievementPosting: false};\n        case ActionTypes.ADD_ACHIEVEMENT_POSTING_SUCCESS:\n            return {...state, addAchievementPostingError: false, addAchievementPostingMessage: action.payload, addAchievementPosting: false};\n        case ActionTypes.ADD_PROJECT_POSTING:\n            return {...state, addProjectPosting: action.payload};\n        case ActionTypes.ADD_PROJECT_POSTING_ERROR:\n            return {...state, addProjectPostingError: true, addProjectPostingMessage: action.payload, addProjectPosting: false};\n        case ActionTypes.ADD_PROJECT_POSTING_SUCCESS:\n            return {...state, addProjectPostingError: false, addProjectPostingMessage: action.payload, addProjectPosting: false};\n        default:\n            return state;\n    }\n}","import * as ActionTypes from './actionTypes';\n\nconst initialState = {\n    pendingProjects: null,\n    pendingProjectsLoading: false,\n    pendingProjectsLoadingError: '',\n\n    pendingAchievements: null,\n    pendingAchievementsLoading: false,\n    pendingAchievementsLoadingError: ''\n}\n\nexport const Admin = (state = initialState, action) => {\n    var newState = {...state}\n    var objIndex\n    switch(action.type) {\n        case ActionTypes.ADD_PENDING_PROJECTS:\n            return {...state, pendingProjects: action.payload, pendingProjectsLoading: false, pendingProjectsLoadingError: ''};\n        case ActionTypes.PENDING_PROJECTS_LOADING:\n            return {...state, pendingProjectsLoading: action.payload}\n        case ActionTypes.PENDING_PROJECTS_LOADING_ERROR:\n            return {...state, pendingProjectsLoading: false, pendingProjectsLoadingError: action.payload}\n        case ActionTypes.ADD_PENDING_ACHIEVEMENTS:\n            return {...state, pendingAchievements: action.payload, pendingAchievementsLoading: false, pendingAchievementsLoadingError: ''};\n        case ActionTypes.PENDING_ACHIEVEMENTS_LOADING:\n            return {...state, pendingAchievementsLoading: action.payload}\n        case ActionTypes.PENDING_ACHIEVEMENTS_LOADING_ERROR:\n            return {...state, pendingAchievementsLoading: false, pendingAchievementsLoadingError: action.payload}\n        case ActionTypes.PROJECT_APPROVING:\n            if(!state.pendingProjects)\n                return newState\n            newState.pendingProjects = [...newState.pendingProjects]\n            objIndex = newState.pendingProjects.findIndex((obj => obj.id === action.payload));\n            if(objIndex < 0)\n                return newState\n\n            newState.pendingProjects[objIndex].approving = true\n            newState.pendingProjects[objIndex].error = ''\n\n            return newState\n        case ActionTypes.PROJECT_APPROVED:\n\n            if(!state.pendingProjects)\n                return state\n            newState.pendingProjects = [...newState.pendingProjects]\n            objIndex = newState.pendingProjects.findIndex((obj => obj.id === action.payload));\n            if(objIndex < 0)\n                return newState\n            newState.pendingProjects[objIndex].approving = false\n            newState.pendingProjects[objIndex].approved = 'approved'\n            return newState\n        case ActionTypes.PROJECT_REJECTING:\n\n            if(!state.pendingProjects)\n                return state\n            newState.pendingProjects = [...newState.pendingProjects]\n            objIndex = newState.pendingProjects.findIndex((obj => obj.id === action.payload));\n            if(objIndex < 0)\n                return newState\n            newState.pendingProjects[objIndex].rejecting = true\n            newState.pendingProjects[objIndex].error = ''\n            return newState\n        case ActionTypes.PROJECT_REJECTED:\n\n            if(!state.pendingProjects)\n                return state\n            newState.pendingProjects = [...newState.pendingProjects]\n            objIndex = newState.pendingProjects.findIndex((obj => obj.id === action.payload));\n            if(objIndex < 0)\n                return newState\n            newState.pendingProjects[objIndex].rejecting = false\n            newState.pendingProjects[objIndex].approved = 'rejected'\n            return newState\n        case ActionTypes.PROJECT_ERROR:\n            if(!state.pendingProjects)\n                return state\n            newState.pendingProjects = [...newState.pendingProjects]\n            objIndex = newState.pendingProjects.findIndex((obj => obj.id === action.payload[0]));\n            if(objIndex < 0)\n                return newState\n            newState.pendingProjects[objIndex].rejecting = false\n            newState.pendingProjects[objIndex].approving = false\n            newState.pendingProjects[objIndex].error = action.payload[1]\n            return newState\n        case ActionTypes.ACHIEVEMENT_APPROVING:\n            if(!state.pendingAchievements)\n                return newState\n            newState.pendingAchievements = [...newState.pendingAchievements]\n            objIndex = newState.pendingAchievements.findIndex((obj => obj.id === action.payload));\n            if(objIndex < 0)\n                return newState\n\n            newState.pendingAchievements[objIndex].approving = true\n            newState.pendingAchievements[objIndex].error = ''\n\n            return newState\n        case ActionTypes.ACHIEVEMENT_APPROVED:\n\n            if(!state.pendingAchievements)\n                return state\n            newState.pendingAchievements = [...newState.pendingAchievements]\n            objIndex = newState.pendingAchievements.findIndex((obj => obj.id === action.payload));\n            if(objIndex < 0)\n                return newState\n            newState.pendingAchievements[objIndex].approving = false\n            newState.pendingAchievements[objIndex].approved = 'approved'\n            return newState\n        case ActionTypes.ACHIEVEMENT_REJECTING:\n\n            if(!state.pendingAchievements)\n                return state\n            newState.pendingAchievements = [...newState.pendingAchievements]\n            objIndex = newState.pendingAchievements.findIndex((obj => obj.id === action.payload));\n            if(objIndex < 0)\n                return newState\n            newState.pendingAchievements[objIndex].rejecting = true\n            newState.pendingAchievements[objIndex].error = ''\n            return newState\n        case ActionTypes.ACHIEVEMENT_REJECTED:\n\n            if(!state.pendingAchievements)\n                return state\n            newState.pendingAchievements = [...newState.pendingAchievements]\n            objIndex = newState.pendingAchievements.findIndex((obj => obj.id === action.payload));\n            if(objIndex < 0)\n                return newState\n            newState.pendingAchievements[objIndex].rejecting = false\n            newState.pendingAchievements[objIndex].approved = 'rejected'\n            return newState\n        case ActionTypes.ACHIEVEMENT_ERROR:\n            if(!state.pendingAchievements)\n                return state\n            newState.pendingAchievements = [...newState.pendingAchievements]\n            objIndex = newState.pendingAchievements.findIndex((obj => obj.id === action.payload[0]));\n            if(objIndex < 0)\n                return newState\n            newState.pendingAchievements[objIndex].rejecting = false\n            newState.pendingAchievements[objIndex].approving = false\n            newState.pendingAchievements[objIndex].error = action.payload[1]\n            return newState\n        default:\n            return state;\n    }\n}","export const baseUrl = 'https://achievements-midas.herokuapp.com/';\nexport const baseUrl_ = 'https://achievements-midas.herokuapp.com';","import * as ActionTypes from './actionTypes';\nimport { baseUrl } from '../shared/baseUrl';\nimport fetch from 'cross-fetch';\n\n// Thunk, returns a function\nexport const fetchUpdates = (key) => (dispatch) => {\n    let token_head = 'Token '+key;\n    dispatch(updatesLoading(true));\n    return fetch(baseUrl+'main/homepage', {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': token_head\n        }\n    })\n    .then(response => {\n        if(!response.ok)\n            throw Error(\"Error occurred while fetching /main/homepage\");\n        return response;\n    })\n    .then(response => response.json())\n    .then((response) => {\n        dispatch(addUpdates(response));\n        dispatch(updatesLoading(false));\n    })\n    .catch(err => {\n        console.log(err);\n        dispatch(updatesLoading(false));\n    });\n}\n\nexport const loadKey = (key) => ({\n    type: ActionTypes.LOAD_KEY,\n    payload: key\n});\n\nexport const loadProfile = (profile) => ({\n    type: ActionTypes.LOAD_PROFILE,\n    payload: profile\n});\n\nexport const loadProfileAchievements = (achievements) => ({\n    type: ActionTypes.LOAD_PROFILE_ACHIEVEMENTS,\n    payload: achievements\n});\n\n// Clear User Data and token\nexport const clearUserData = () => ({\n    type: ActionTypes.CLEAR_USER_DATA\n});\n\n// Login thunk, returns a function\nexport const login = (username, password) => (dispatch) => {\n    dispatch(loggingIn(true));\n    return fetch(baseUrl+'rest-auth/login/', {\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            username: username,\n            password: password\n        }) // body data type must match \"Content-Type\" header\n    })\n    .then(response => {\n        if(!response.ok)\n            throw Error(\"Error occurred!\");\n        return response;\n    })\n    .then(response => response.json())\n    .then(({key}) => {\n        dispatch(loadKey(key));\n        dispatch(loggingIn(false));\n    })\n    .catch(err => {\n        console.log(err);\n        dispatch(loggingIn(false));\n        dispatch(loginFailed(err.message));\n    });\n}\n\nexport const loginOSA = (username, password) => (dispatch) => {\n    dispatch(loggingIn(true));\n    return fetch(baseUrl+'auth/login/', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            username: username,\n            password: password\n        }) // body data type must match \"Content-Type\" header\n    })\n    .then(response => {\n        if(!response.ok)\n            throw Error(\"Error occurred!\");\n        return response;\n    })\n    .then(response => response.json())\n    .then(({key}) => {\n        dispatch(loadKey(key));\n        dispatch(loggingIn(false));\n    })\n    .catch(err => {\n        console.log(err);\n        dispatch(loggingIn(false));\n        dispatch(loginFailed(err.message));\n    });\n}\n\nexport const loggingIn = (value) => ({\n    type: ActionTypes.LOGGING_IN,\n    payload: value\n})\n\nexport const loginFailed = (err) => ({\n    type: ActionTypes.LOGIN_FAILED,\n    payload: err\n})\n\n// Thunk to fetch profile\nexport const fetchUserProfile = (key) => (dispatch) => {\n    let token_head = 'Token '+key;\n    // Fetch profile details\n    return fetch(baseUrl+'auth/api/profile/', {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': token_head\n        }\n    })\n    .then(response => response.json())\n    .then(response => {\n        console.log(response.profile);\n        dispatch(loadProfile(response.profile));\n    })\n    .catch(err => {\n        console.log(err);\n    })\n}\n\nexport const patchUserProfile = (key, id, studObj,\n        setSaving, setSavingMessage, setSavingSuccess\n    ) => (dispatch) => {\n    setSaving(true)\n    setSavingMessage('')\n    let token_head = 'Token '+key;\n\n    if(!studObj.profile_pic)\n        delete studObj.profile_pic\n\n    let form_data = new FormData();\n    for(const key in studObj)\n        form_data.append(key, studObj[key])\n\n    return fetch(baseUrl+'auth/api/profile/'+id+'/', {\n        method: 'PATCH',\n        headers: {\n            'Authorization': token_head\n        },\n        body: form_data\n    })\n    .then(response => {\n        if(!response.ok)\n            throw new Error('Error while saving profile!')\n        return response.json()\n    })\n    .then(response => {\n        setSavingMessage('Profile saved!')\n        setSavingSuccess(true)\n        setSaving(false)\n    })\n    .catch(err => {\n        console.log(err);\n        setSaving(false)\n        setSavingSuccess(false)\n        setSavingMessage(err.message)\n    })\n}\n\nexport const fetchUserAchievements = (key) => (dispatch) => {\n    let token_head = 'Token '+key;\n    // Fetch achievements of the logged in user\n    fetch(baseUrl+'main/api/achievement', {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': token_head\n        }\n    })\n    .then(response => response.json())\n    .then(response => {\n        console.log(response);\n        dispatch(loadProfileAchievements(response.achievements));\n    })\n    .catch(err => {\n        console.log(err);\n    })\n}\n\nexport const loadProfileProjects = (projects) => ({\n    type: ActionTypes.LOAD_PROFILE_PROJECTS,\n    payload: projects\n});\n\nexport const fetchUserProjects = (key) => (dispatch) => {\n    let token_head = 'Token '+key;\n    // Fetch achievements of the logged in user\n    fetch(baseUrl+'main/api/project/', {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': token_head\n        }\n    })\n    .then(response => response.json())\n    .then(response => {\n        console.log(response);\n        dispatch(loadProfileProjects(response.projects));\n    })\n    .catch(err => {\n        console.log(err);\n    })\n}\n\n// Create action to indicate updates are loading\nexport const updatesLoading = (value) => ({\n    type: ActionTypes.UPDATES_LOADING,\n    payload: value\n});\n\n// Create action to indicate loading updates has failed\nexport const updatesFailed = (errmess) => ({\n    type: ActionTypes.UPDATES_FAILED,\n    payload: errmess\n});\n\n// Create action to add loaded updates\nexport const addUpdates = (updates) => ({\n    type: ActionTypes.ADD_UPDATES,\n    payload: updates\n});\n\n\nexport const fetchStudentsList = (key) => (dispatch) => {\n    let token_head = 'Token '+key;\n    dispatch(studentsListLoading(true));\n    fetch(baseUrl+'main/api/get-students', {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': token_head\n        }\n    })\n    .then(response => response.json())\n    .then(response => {\n        dispatch(loadStudentsList(response.students));\n    })\n    .catch(err => {\n        console.log(err);\n        dispatch(studentsListLoading(false));\n    })\n}\n\nexport const loadStudentsList = (students) => ({\n    type: ActionTypes.LOAD_STUDENTS_LIST,\n    payload: students\n})\n\nexport const studentsListLoading = (value) => ({\n    type: ActionTypes.STUDENTS_LIST_LOADING,\n    payload: value\n})\n\nexport const fetchProfessorsList = (key) => (dispatch) => {\n    dispatch(professorsListLoading(true));\n    let token_head = 'Token '+key;\n    fetch(baseUrl+'main/api/get-professors', {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': token_head\n        }\n    })\n    .then(response => response.json())\n    .then(response => {\n        dispatch(loadProfessorsList(response.professors));\n    })\n    .catch(err => {\n        console.log(err);\n        dispatch(professorsListLoading(false));\n    })\n}\n\nexport const loadProfessorsList = (professors) => ({\n    type: ActionTypes.LOAD_PROFESSORS_LIST,\n    payload: professors\n})\n\nexport const professorsListLoading = (value) => ({\n    type: ActionTypes.PROFESSORS_LIST_LOADING,\n    payload: value\n})\n\nexport const fetchInstitutesList = (key) => (dispatch) => {\n    dispatch(institutesLoading(true));\n    let token_head = 'Token '+key;\n    fetch(baseUrl+'main/api/institution/', {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': token_head\n        }\n    })\n    .then(response => response.json())\n    .then(response => {\n        dispatch(loadInstitutesList(response));\n    })\n    .catch(err => {\n        console.log(err);\n        dispatch(institutesLoading(false));\n    })\n}\n\nexport const postInstitution = (key, institution,  setSaving, setError, setMsg, clear) => {\n    let token_head = 'Token '+key;\n    setSaving(true)\n    setError(false)\n    setMsg('')\n    fetch(baseUrl+'main/api/institution/', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': token_head\n        },\n        body: JSON.stringify({\n            title: institution\n        })\n    })\n    .then(response => {\n        if(!response.ok) {\n            throw new Error('Error while saving institution!')\n        }\n        return response.json()\n    })\n    .then(() => {\n        setSaving(false)\n        setMsg('Successfully saved!')\n        clear()\n    })\n    .catch(err => {\n        console.log(err);\n        setSaving(false)\n        setError(true);\n        setMsg(err.message)\n    })\n}\n\nexport const loadInstitutesList = (institutes) => ({\n    type: ActionTypes.LOAD_INSTITUTES_LIST,\n    payload: institutes\n})\n\nexport const institutesLoading = (value) => ({\n    type: ActionTypes.INSTITUTES_LIST_LOADING,\n    payload: value\n})\n\nexport const fetchTagsList = (key) => (dispatch) => {\n    dispatch(tagsLoading(true));\n    let token_head = 'Token '+key;\n    fetch(baseUrl+'main/api/tag/', {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': token_head\n        }\n    })\n    .then(response => response.json())\n    .then(response => {\n        dispatch(loadTagsList(response));\n    })\n    .catch(err => {\n        console.log(err);\n        dispatch(tagsLoading(false));\n    })\n}\n\nexport const addTagList = (tagObj) => ({\n    type: ActionTypes.ADD_TAG_LIST,\n    payload: tagObj\n})\n\nexport const loadTagsList = (tags) => ({\n    type: ActionTypes.LOAD_TAGS_LIST,\n    payload: tags\n})\n\nexport const tagsLoading = (value) => ({\n    type: ActionTypes.TAGS_LIST_LOADING,\n    payload: value\n})\n\nexport const postTag = (key, tag, callback, errorFunction) => (dispatch) => {\n    let token_head = 'Token '+key;\n    fetch(baseUrl+'main/api/tag/', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': token_head\n        },\n        body: JSON.stringify({\n            title: tag\n        })\n    })\n    .then((response) => {\n        if(!response.ok)\n            throw new Error('There was a problem adding this tag to the database!')\n        return response\n    })\n    .then(response => response.json())\n    .then(response => {\n        console.log(response)\n        dispatch(addTagList(response))\n        return response\n    })\n    .then((response) => callback(response))\n    .catch(error => {\n        console.log(error)\n        errorFunction(error.message)\n    })\n}\n\nexport const fetchProject = (key, projectId, setProjectDetails, setLoading, setErrorMessage) => {\n    let token_head = 'Token '+key;\n    console.log(token_head)\n    fetch(baseUrl+'main/api/project/'+projectId, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': token_head\n        }\n    })\n    .then((response) => {\n        if(!response.ok)\n            throw new Error('Project not found!')\n        console.log(response.error)\n        return response\n    })\n    .then(response => response.json())\n    .then(response => {\n        console.log(response)\n        setProjectDetails(response)\n        setLoading(false)\n        return response\n    })\n    .catch(error => {\n        setLoading(false)\n        setErrorMessage(error.message)\n        console.log(error)\n    })\n}\n\nexport const fetchAchievement = (key, achievementId, setAchievementDetails, setLoading, setErrorMessage) => {\n    let token_head = 'Token '+key;\n    console.log(token_head)\n    fetch(baseUrl+'main/api/achievement/'+achievementId, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': token_head\n        }\n    })\n    .then((response) => {\n        if(!response.ok)\n            throw new Error('Achievement not found!')\n        console.log(response.error)\n        return response\n    })\n    .then(response => response.json())\n    .then(response => {\n        console.log(response)\n        setAchievementDetails(response)\n        setLoading(false)\n        return response\n    })\n    .catch(error => {\n        setLoading(false)\n        setErrorMessage(error.message)\n        console.log(error)\n    })\n}\n\nexport const addAchievementPosting = (value) => ({\n    type: ActionTypes.ADD_ACHIEVEMENT_POSTING,\n    payload: value\n})\n\nexport const addAchievementPostingError = (message) => ({\n    type: ActionTypes.ADD_ACHIEVEMENT_POSTING_ERROR,\n    payload: message\n})\n\nexport const addAchievementPostingSuccess = (message) => ({\n    type: ActionTypes.ADD_ACHIEVEMENT_POSTING_SUCCESS,\n    payload: message\n})\n\nconst addFileToAchievement = (key, aId, file) => {\n    var form_data = new FormData()\n    form_data.append('files', file)\n    fetch(baseUrl + 'main/api/achievement/'+aId+'/', {\n        method: 'PATCH',\n        headers: {\n            'Authorization' : 'Token '+key\n        },\n        body: form_data\n    })\n}\n\nexport const postNewAchievement = (key, stateObj, clearFunction) => (dispatch) => {\n    dispatch(addAchievementPosting(true));\n    let token_head = 'Token '+key;\n\n    var bodyObj = {\n        title: stateObj.title,\n        description: stateObj.description,\n        institution: stateObj.institution,\n        achievedDate: stateObj.dateofachievement,\n        teamMembers: stateObj.team.map(member => member.id),\n        tags: stateObj.tags.map(tag => tag.id),\n        category: stateObj.category\n    }\n\n    fetch(baseUrl+'main/api/achievement/', {\n        method: 'POST',\n        headers: {\n            'Authorization': token_head,\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(bodyObj)\n    })\n    .then((response) => {\n        if(!response.ok)\n            throw new Error('There was a problem adding this achievement!')\n        return response\n    })\n    .then(response => response.json())\n    .then(response => {\n        console.log(response, response.id)\n        if(stateObj.file)\n            addFileToAchievement(key, response.id, stateObj.file)\n        return response\n    })\n    .then(response => {\n        // Success dispatch\n        clearFunction();\n        dispatch(addAchievementPostingSuccess(\"Your achivement has been posted! Wait for the admin to approve it.\"))\n        return response\n    })\n    .catch(error => {\n        console.log(error)\n        dispatch(addAchievementPostingError(error.message))\n    })\n}\n\nexport const patchAchievement = (key, stateObj, clearFunction, aId) => (dispatch) => {\n    dispatch(addAchievementPosting(true));\n    let token_head = 'Token '+key;\n\n    var bodyObj = {\n        title: stateObj.title,\n        description: stateObj.description,\n        institution: (stateObj.institution.id) ? (stateObj.institution.id) : stateObj.institution,\n        achievedDate: stateObj.dateofachievement,\n        teamMembers: stateObj.team.map(member => member.id),\n        tags: stateObj.tags.map(tag => tag.id),\n        category: stateObj.category\n    }\n\n    fetch(baseUrl+'main/api/achievement/'+aId+'/', {\n        method: 'PUT',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': token_head\n        },\n        body: JSON.stringify(bodyObj)\n    })\n    .then((response) => {\n        if(!response.ok)\n            throw new Error('There was a problem saving this achievement!')\n        console.log(response)\n        return response\n    })\n    .then(response => response.json())\n    .then(response => {\n        if(stateObj.file)\n            addFileToAchievement(key, response.id, stateObj.file)\n        return response\n    })\n    .then(response => {\n        // Success dispatch\n        clearFunction();\n        dispatch(addAchievementPostingSuccess(\"Your achivement has been saved! Wait for the admin to approve it.\"))\n        return response\n    })\n    .catch(error => {\n        console.log(error)\n        dispatch(addAchievementPostingError(error.message))\n    })\n}\n\nexport const addProjectPosting = (value) => ({\n    type: ActionTypes.ADD_PROJECT_POSTING,\n    payload: value\n})\n\nexport const addProjectPostingError = (message) => ({\n    type: ActionTypes.ADD_PROJECT_POSTING_ERROR,\n    payload: message\n})\n\nexport const addProjectPostingSuccess = (message) => ({\n    type: ActionTypes.ADD_PROJECT_POSTING_SUCCESS,\n    payload: message\n})\n\nexport const postNewProject = (key, stateObj, clearFunction) => (dispatch) => {\n    dispatch(addProjectPosting(true));\n    let token_head = 'Token '+key;\n\n    var bodyObj = {\n        title: stateObj.title,\n        description: stateObj.description,\n        institution: stateObj.institution,\n        startDate: stateObj.startdate,\n        endDate: stateObj.enddate,\n        field: stateObj.field,\n        domain: stateObj.domain,\n        url: stateObj.url,\n        students: stateObj.team.map(member => member.id),\n        mentors: stateObj.mentors.map(mentor => mentor.id),\n        tags: stateObj.tags.map(tag => tag.id),\n        proof: stateObj.proof\n    }\n\n    fetch(baseUrl+'main/api/project/', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': token_head\n        },\n        body: JSON.stringify(bodyObj)\n    })\n    .then((response) => {\n        if(!response.ok)\n            throw new Error('There was a problem adding this project!')\n        console.log(response)\n        return response\n    })\n    .then(response => response.json())\n    .then(response => {\n        // Success dispatch\n        clearFunction();\n        dispatch(addProjectPostingSuccess(\"Your project has been posted! Wait for the admin to approve it.\"))\n        return response\n    })\n    .catch(error => {\n        console.log(error)\n        dispatch(addProjectPostingError(error.message))\n    })\n}\n\nexport const patchProject = (key, stateObj, clearFunction, projectId) => (dispatch) => {\n    dispatch(addProjectPosting(true));\n    let token_head = 'Token '+key;\n\n    var bodyObj = {\n        title: stateObj.title,\n        description: stateObj.description,\n        institution: stateObj.institution.id,\n        startDate: stateObj.startdate,\n        endDate: stateObj.enddate,\n        field: stateObj.field,\n        domain: stateObj.domain,\n        url: stateObj.url,\n        students: stateObj.team.map(member => member.id),\n        mentors: stateObj.mentors.map(mentor => mentor.id),\n        tags: stateObj.tags.map(tag => tag.id),\n        proof: stateObj.proof\n    }\n\n    fetch(baseUrl+'main/api/project/'+projectId+'/', {\n        method: 'PATCH',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': token_head\n        },\n        body: JSON.stringify(bodyObj)\n    })\n    .then((response) => {\n        if(!response.ok)\n            throw new Error('There was a problem saving this project!')\n        console.log(response)\n        return response\n    })\n    .then(response => response.json())\n    .then(response => {\n        // Success dispatch\n        clearFunction();\n        dispatch(addProjectPostingSuccess(\"Your project has been saved! Wait for the admin to approve it.\"))\n        return response\n    })\n    .catch(error => {\n        console.log(error)\n        dispatch(addProjectPostingError(error.message))\n    })\n}\n\nexport const addPendingProjects = (pendingProjects) => ({\n    type: ActionTypes.ADD_PENDING_PROJECTS,\n    payload: pendingProjects\n})\n\nexport const pendingProjectsLoading = (value) => ({\n    type: ActionTypes.PENDING_PROJECTS_LOADING,\n    payload: value\n})\n\nexport const pendingProjectsLoadingError = (message) => ({\n    type: ActionTypes.PENDING_PROJECTS_LOADING_ERROR,\n    payload: message\n})\n\nexport const fetchPendingProjects = (key) => (dispatch) => {\n    dispatch(pendingProjectsLoading(true));\n    let token_head = 'Token '+key;\n    fetch(baseUrl+'main/api/get-projects-admin', {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': token_head\n        }\n    })\n    .then((response) => {\n        if(!response.ok)\n            throw new Error('There was a problem fetching pending projects!')\n        console.log(response)\n        return response\n    })\n    .then(response => response.json())\n    .then(response => {\n        if(response.details)\n            throw new Error(response.details)\n        return response\n    })\n    .then(response => {\n        dispatch(addPendingProjects(response.unapproved))\n        return response\n    })\n    .catch(error => {\n        console.log(error)\n        dispatch(pendingProjectsLoadingError(error.message))\n    })\n}\n\nexport const addPendingAchievements = (pendingAchievements) => ({\n    type: ActionTypes.ADD_PENDING_ACHIEVEMENTS,\n    payload: pendingAchievements\n})\n\nexport const pendingAchievementsLoading = (value) => ({\n    type: ActionTypes.PENDING_ACHIEVEMENTS_LOADING,\n    payload: value\n})\n\nexport const pendingAchievementsLoadingError = (message) => ({\n    type: ActionTypes.PENDING_ACHIEVEMENTS_LOADING_ERROR,\n    payload: message\n})\n\nexport const fetchPendingAchievements = (key) => (dispatch) => {\n    dispatch(pendingAchievementsLoading(true));\n    let token_head = 'Token '+key;\n    fetch(baseUrl+'main/api/get-achievements-admin', {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': token_head\n        }\n    })\n    .then((response) => {\n        if(!response.ok)\n            throw new Error('There was a problem fetching pending achievements!')\n        console.log(response)\n        return response\n    })\n    .then(response => response.json())\n    .then(response => {\n        if(response.details)\n            throw new Error(response.details)\n        return response\n    })\n    .then(response => {\n        dispatch(addPendingAchievements(response.unapproved))\n        return response\n    })\n    .catch(error => {\n        console.log(error)\n        dispatch(pendingAchievementsLoadingError(error.message))\n    })\n}\n\nexport const projectApproving = (projectId) => ({\n    type: ActionTypes.PROJECT_APPROVING,\n    payload: projectId\n})\n\nexport const projectApproved = (projectId) => ({\n    type: ActionTypes.PROJECT_APPROVED,\n    payload: projectId\n})\n\nexport const projectRejecting = (projectId) => ({\n    type: ActionTypes.PROJECT_REJECTING,\n    payload: projectId\n})\n\nexport const projectRejected = (projectId) => ({\n    type: ActionTypes.PROJECT_REJECTED,\n    payload: projectId\n})\n\nexport const projectDeleting = (projectId) => ({\n    type: ActionTypes.PROJECT_DELETING,\n    payload: projectId\n})\n\nexport const projectDeleted = (projectId) => ({\n    type: ActionTypes.PROJECT_DELETED,\n    payload: projectId\n})\n\nexport const projectError = (projectId, message) => ({\n    type: ActionTypes.PROJECT_ERROR,\n    payload: [projectId, message]\n})\n\nexport const approveProject = (key, projectId, userId) => (dispatch) => {\n    dispatch(projectApproving(projectId));\n    let token_head = 'Token '+key;\n    fetch(baseUrl+'main/api/project/'+projectId+'/', {\n        method: 'PATCH',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': token_head\n        },\n        body: JSON.stringify({\n            approved: 'approved',\n            approvedBy: userId\n        })\n    })\n    .then((response) => {\n        if(!response.ok) {\n            console.log(response)\n            throw new Error('There was a problem approving this project!')\n        }\n        console.log(response)\n        return response\n    })\n    .then(response => response.json())\n    .then(response => {\n        dispatch(projectApproved(projectId))\n        return response\n    })\n    .catch(error => {\n        console.log(error)\n        dispatch(projectError(projectId, error.message))\n    })\n}\n\nexport const rejectProject = (key, projectId, userId, feedback) => (dispatch) => {\n    dispatch(projectRejecting(projectId));\n    let token_head = 'Token '+key;\n    fetch(baseUrl+'main/api/project/'+projectId+'/', {\n        method: 'PATCH',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': token_head\n        },\n        body: JSON.stringify({\n            approved: 'rejected',\n            approvedBy: userId,\n            feedback: feedback\n        })\n    })\n    .then((response) => {\n        if(!response.ok) {\n            console.log(response)\n            throw new Error('There was a problem rejecting this project!')\n        }\n        return response\n    })\n    .then(response => response.json())\n    .then(response => {\n        dispatch(projectRejected(projectId))\n        return response\n    })\n    .catch(error => {\n        console.log(error)\n        dispatch(projectError(projectId, error.message))\n    })\n}\n\nexport const deleteProject = (key, projectId) => (dispatch) => {\n    dispatch(projectDeleting(projectId));\n    let token_head = 'Token '+key;\n    fetch(baseUrl+'main/api/project/'+projectId+'/', {\n        method: 'DELETE',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': token_head\n        }\n    })\n    .then((response) => {\n        if(!response.ok) {\n            console.log(response)\n            throw new Error('There was a problem deleting this project!')\n        }\n        console.log(response)\n        return response\n    })\n    .then(response => {\n        dispatch(projectDeleted(projectId))\n        return response\n    })\n    .catch(error => {\n        console.log(error)\n        // the error here is for pending projects, make something similar here\n        // dispatch(projectError(projectId, error.message))\n    })\n}\n\nexport const achievementApproving = (achievementId) => ({\n    type: ActionTypes.ACHIEVEMENT_APPROVING,\n    payload: achievementId\n})\n\nexport const achievementApproved = (achievementId) => ({\n    type: ActionTypes.ACHIEVEMENT_APPROVED,\n    payload: achievementId\n})\n\nexport const achievementRejecting = (achievementId) => ({\n    type: ActionTypes.ACHIEVEMENT_REJECTING,\n    payload: achievementId\n})\n\nexport const achievementRejected = (achievementId) => ({\n    type: ActionTypes.ACHIEVEMENT_REJECTED,\n    payload: achievementId\n})\n\nexport const achievementDeleting = (achievementId) => ({\n    type: ActionTypes.ACHIEVEMENT_DELETING,\n    payload: achievementId\n})\n\nexport const achievementDeleted = (achievementId) => ({\n    type: ActionTypes.ACHIEVEMENT_DELETED,\n    payload: achievementId\n})\n\nexport const achievementError = (achievementId, message) => ({\n    type: ActionTypes.ACHIEVEMENT_ERROR,\n    payload: [achievementId, message]\n})\n\nexport const approveAchievement = (key, achievementId, userId) => (dispatch) => {\n    dispatch(achievementApproving(achievementId));\n    let token_head = 'Token '+key;\n    fetch(baseUrl+'main/api/achievement/'+achievementId+'/', {\n        method: 'PATCH',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': token_head\n        },\n        body: JSON.stringify({\n            approved: 'approved',\n            approvedBy: userId\n        })\n    })\n    .then((response) => {\n        if(!response.ok) {\n            console.log(response)\n            throw new Error('There was a problem approving this achievement!')\n        }\n        console.log(response)\n        return response\n    })\n    .then(response => response.json())\n    .then(response => {\n        dispatch(achievementApproved(achievementId))\n        return response\n    })\n    .catch(error => {\n        console.log(error)\n        dispatch(achievementError(achievementId, error.message))\n    })\n}\n\nexport const rejectAchievement = (key, achievementId, userId, feedback) => (dispatch) => {\n    dispatch(achievementRejecting(achievementId));\n    let token_head = 'Token '+key;\n    fetch(baseUrl+'main/api/achievement/'+achievementId+'/', {\n        method: 'PATCH',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': token_head\n        },\n        body: JSON.stringify({\n            approved: 'rejected',\n            approvedBy: userId,\n            feedback: feedback\n        })\n    })\n    .then((response) => {\n        if(!response.ok) {\n            console.log(response)\n            throw new Error('There was a problem rejecting this achievement!')\n        }\n        return response\n    })\n    .then(response => response.json())\n    .then(response => {\n        dispatch(achievementRejected(achievementId))\n        return response\n    })\n    .catch(error => {\n        console.log(error)\n        dispatch(achievementError(achievementId, error.message))\n    })\n}\n\nexport const deleteAchievement = (key, achievementId) => (dispatch) => {\n    dispatch(achievementDeleting(achievementId));\n    let token_head = 'Token '+key;\n    fetch(baseUrl+'main/api/achievement/'+achievementId+'/', {\n        method: 'DELETE',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': token_head\n        }\n    })\n    .then((response) => {\n        if(!response.ok) {\n            console.log(response)\n            throw new Error('There was a problem deleting this achievement!')\n        }\n        console.log(response)\n        return response\n    })\n    .then(response => {\n        dispatch(achievementDeleted(achievementId))\n        return response\n    })\n    .catch(error => {\n        console.log(error)\n        // error is for pending achievements, make something similar here\n        // dispatch(achievementError(achievementId, error.message))\n    })\n}","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavbarText, UncontrolledDropdown, DropdownItem, DropdownToggle, DropdownMenu } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { clearUserData, fetchUserProfile } from '../redux/ActionCreators'\nimport { useEffect } from 'react';\n\nconst mapStateToProps = state => ({\n  authorized: state.user.authorized,\n  token: state.user.token,\n  profile: state.user.profile,\n  profileLoaded: state.user.profileLoaded\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  logout: () => dispatch(clearUserData()),\n  fetchUserProfile: (key) => dispatch(fetchUserProfile(key))\n});\n\nfunction UserIcon({authorized, admin, logout}) {\n  return (\n    (authorized) ?\n    <div>\n      <UncontrolledDropdown inNavbar>\n        <DropdownToggle className=\"m-auto p-auto\" nav caret>\n          <img className={`rounded-circle mr-2 ${admin?\"red-glow\":\"\"}`} width=\"50\" height=\"50\"\n            src=\"/assets/Profile/dp.png\" alt=\"Display\" />\n        </DropdownToggle>\n        <DropdownMenu right>\n\n          <Link to=\"/addachievement\">\n            <DropdownItem>\n            Add Achievement\n            </DropdownItem>\n          </Link>\n\n          <Link to=\"/addproject\">\n            <DropdownItem>\n            Add Project\n            </DropdownItem>\n          </Link>\n\n          <Link to=\"/myachievements\">\n            <DropdownItem>\n            My Achievements\n            </DropdownItem>\n          </Link>\n\n          <Link to=\"/myprojects\">\n            <DropdownItem>\n            My Projects\n            </DropdownItem>\n          </Link>\n\n          <Link to=\"/profile\">\n            <DropdownItem>\n              My Profile\n            </DropdownItem>\n          </Link>\n\n          <Link className={admin ? '' : 'd-none'} to=\"/pending-projects\">\n            <DropdownItem>\n              Pending Projects\n            </DropdownItem>\n          </Link>\n\n          <Link className={admin ? '' : 'd-none'} to=\"/pending-achievements\">\n            <DropdownItem>\n              Pending Achievements\n            </DropdownItem>\n          </Link>\n\n          <DropdownItem divider />\n          <DropdownItem onClick={logout}>\n            Logout\n          </DropdownItem>\n        </DropdownMenu>\n      </UncontrolledDropdown>\n    </div>\n    :\n    <>\n    </>\n  )\n}\n\nfunction Navigation(props) {\n  const [collapsed, setCollapsed] = useState(true);\n  const toggleNavbar = () => setCollapsed(!collapsed);\n  const [admin, setAdmin] = useState(false)\n\n  useEffect(() => {\n    if(props.authorized && !props.profileLoaded)\n      props.fetchUserProfile(props.token);\n    setAdmin(props.profile && props.profile.designation === 3)\n  }, [props])\n\n  return (\n    <Navbar light expand=\"md\" className=\"navigation pr-lg-3 pl-lg-3\">\n      <NavbarBrand className=\"mr-sm-3 d-flex\" href=\"/\">\n        <img src=\"/IIITDLogo.png\" className=\"\" alt=\"AP\" height=\"50\" />\n        <NavbarText className=\"h1 font-weight-bold text-color-main d-flex d-sm-none my-auto ml-3 p-0\">\n        AP\n        </NavbarText>\n        <NavbarText className=\"h3 font-weight-bold text-color-main d-none d-sm-flex d-md-none my-auto ml-3 p-0\">\n        Achievements Portal\n        </NavbarText>\n      </NavbarBrand>\n\n      <NavbarToggler onClick={toggleNavbar} />\n\n      <Collapse isOpen={!collapsed} navbar>\n        <Nav navbar>\n          <NavItem className=\"mr-4 my-2\" >\n            <Link className=\"m-auto text-center d-block\" to=\"/\">Home</Link>\n          </NavItem>\n          <NavItem className=\"mr-4 my-2 d-block\">\n            <Link className=\"m-auto text-center d-block\" to=\"/about\">About</Link>\n          </NavItem>\n\n          {/* SHOW ONLY WHEN AUTHORIZED  */}\n          <NavItem className={`mr-4 my-2 ${!props.authorized ? \"d-none\" : \"d-block\"}`}>\n            <Link className=\"m-auto text-center d-block\" to=\"/projects\">Projects</Link>\n          </NavItem>\n          <NavItem className={`mr-4 my-2 ${!props.authorized ? \"d-none\" : \"d-block\"}`}>\n            <Link className=\"m-auto text-center d-block\" to=\"/achievements\">Achievements</Link>\n          </NavItem>\n\n          {/* SHOW ONLY WHEN NOT AUTHORIZED  */}\n          {/* <NavItem className={`mr-4 my-2 ${props.authorized ? \"d-none\" : \"d-block\"}`}>\n            <Link className=\"m-auto text-center d-block\" to=\"/signup\">Sign Up</Link>\n          </NavItem> */}\n          <NavItem className={`mr-4 my-2 ${props.authorized ? \"d-none\" : \"d-block\"}`}>\n            <Link className=\"m-auto text-center d-block\" to=\"/login\">Login</Link>\n          </NavItem>\n\n          <NavItem className=\"d-block d-md-none my-2\">\n            <div className=\"m-auto text-center d-block\">\n              <UserIcon authorized={props.authorized} admin={admin}  logout={props.logout} />\n            </div>\n          </NavItem>\n        </Nav>\n      </Collapse>\n\n      <NavbarText className=\"h2 font-weight-bold text-color-main text-center d-none d-lg-block\">\n      Achievements Portal\n      </NavbarText>\n      <div className=\"d-none d-md-block ml-4\">\n        <UserIcon authorized={props.authorized} admin={admin} logout={props.logout} />\n      </div>\n    </Navbar>\n  );\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Navigation));\n","import React from 'react';\nimport { Container, Row, Col} from 'reactstrap';\n\nfunction Footer() {\n    return (\n        <Container fluid className=\"bg-color-lightest-grey p-3 mt-5\">\n            <Row>\n                <Col>\n                Developed by hadron43, tushar2407\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n\nexport default Footer;","import React from 'react';\nimport {Button} from 'reactstrap';\nimport Carousel from '@brainhubeu/react-carousel';\nimport '@brainhubeu/react-carousel/lib/style.css';\n\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\n\nconst mapStateToProps = state => {\n    return {\n        blogs: state.blogs\n    };\n}\n\nfunction Arrow({icon}) {\n    return (\n        <div className=\"rounded-circle bg-color-main d-flex p-2 arrow m-2\">\n            <i class={\"fa fa-2x d-flex m-auto \"+icon}></i>\n        </div>\n    );\n}\n\nfunction BannerCard(props) {\n    return (\n        <div>\n        <div className=\"container-fluid row pl-3 pr-3\">\n        <div className=\"col-xs-12 col-sm-5 d-flex\">\n            <img className=\"d-flex m-auto\" src={props.image} alt=\"Banner\" width=\"90%\"></img>\n        </div>\n        \n        <div className=\"col-xs-12 col-sm-7 pt-3 pb-3\">\n            <h3 className=\"text-color-main pt-lg-5 pt-3\">\n                {props.title} \n            </h3>\n            <p>\n                {props.plot}\n            </p>\n            <Button color=\"info\" className=\"rounded bg-color-main-ui pl-3 pr-3\" size=\"lg\" >Read More </Button>\n            </div>\n        </div>\n        </div>\n    );\n}\n\nfunction Banner(props) {\n    return (\n        <Carousel\n            slidesPerPage={1}\n            centered\n            arrowLeft={<Arrow icon=\"fa-arrow-left\"/>}\n            arrowRight={<Arrow icon=\"fa-arrow-right\"/>}\n            addArrowClickHandler\n            infinite\n            autoPlay={8000}\n            animationSpeed={1500}\n            breakpoints={{\n              768: {\n                arrowLeft: false,\n                arrowRight: false\n              }\n            }}\n            className=\"bg-color-lightest-grey\"\n        >\n            <BannerCard storyNo=\"1\" image={props.blogs[0].imagePath} title={props.blogs[0].title} plot={props.blogs[0].detailedPlot}/>\n            <BannerCard storyNo=\"2\" image={props.blogs[1].imagePath} title={props.blogs[1].title} plot={props.blogs[1].detailedPlot}/>\n            <BannerCard storyNo=\"3\" image={props.blogs[2].imagePath} title={props.blogs[2].title} plot={props.blogs[2].detailedPlot}/>\n        </Carousel>\n    );\n}\n\nexport default withRouter(connect(mapStateToProps)(Banner));","import React from 'react';\n\nfunction Loading(props) {\n    let size = (props.size) ? props.size : \"fa-5x\";\n    let margin = (props.margin) ? props.margin : \"my-5\";\n    let color = (props.color) ? props.color : '';\n    return (\n        <div className=\"w-100 d-flex\">\n            <div className=\"d-flex m-auto\">\n                <i className={`fa fa-spinner fa-pulse fa-fw text-color-main ${size} ${margin} ${color}`}></i>\n            </div>\n        </div>\n    );\n}\n\nexport default Loading;","import React from 'react';\nimport {Container, Row, Col, Button} from 'reactstrap';\nimport {Link} from 'react-router-dom';\n\nimport Loading from '../../components/Loading';\n\nfunction UpdatesCard({heading, updates, buttonText=\"More Updates\", buttonLink}) {\n    if(!updates)\n        return (<></>)\n    return (\n        <Container className=\"shadow rounded-lg bg-color-lightest-grey p-4 pb-5 h-100\">\n\n            <h4 className=\"text-color-main font-weight-bold mb-4\">\n                {heading}\n            </h4>\n\n            {\n                (!updates.length) ?\n                <p className=\"text-info\">No updates yet!</p>\n                :\n                updates.map((update) => {\n                    return (\n                        <>\n                        <p>{update.title}</p>\n                        </>\n                    );\n                })\n            }\n\n            <br />\n\n            <div className=\"bottom clearfix w-100\">\n                <Link to={buttonLink}>\n                    <Button color=\"info\" className=\"mt-2 float-right bottom-button bg-color-main-ui\">{buttonText}</Button>\n                </Link>\n            </div>\n\n        </Container>\n    );\n}\n\nfunction rankToColor(rank) {\n    var color = \"bg-white\";\n    if(rank === 1)\n        color = \"bg-warning\";\n    else if(rank === 2)\n        color = \"bg-color-silver\";\n    else if(rank === 3)\n        color = \"bg-color-bronze\";\n    return color;\n}\n\nfunction TopCard({heading, toppers, buttonText, buttonLink, isLoading, errMess}) {\n    return (\n        <Container fluid className=\"shadow rounded-lg bg-color-lightest-grey p-4 pb-5 h-100\">\n\n            <h4 className=\"text-color-main font-weight-bold mb-4\">\n                {(!isLoading && !errMess) ? heading : (errMess) ? {errMess} : \"Loading...\"}\n            </h4>\n            {\n                (!isLoading && !errMess) ?\n                    <>\n                    {toppers.map((update) => {\n                        return (\n                            <Row className=\"mb-2\">\n                                <Col xs=\"1\" className=\"d-flex\">\n                                    <p className=\"d-flex m-auto\">{update.rank}</p>\n                                </Col>\n                                <Col xs=\"8\" className=\"d-flex\">\n                                <p className=\"d-flex mt-auto mb-auto\">{update.name}</p>\n                                </Col>\n                                <Col xs=\"2\" className={`d-flex rounded p-2 ${rankToColor(update.rank)}`}>\n                                    <p className=\"d-flex m-auto\">{update.points}</p>\n                                </Col>\n                            </Row>\n                        );\n                    })}\n                    <br />\n                    <div className=\"bottom clearfix w-100\">\n                        <Link to={buttonLink}>\n                            <Button color=\"info\" className=\"mt-2 float-right bottom-button bg-color-main-ui\">{buttonText}</Button>\n                        </Link>\n                    </div>\n                    </>\n                :\n                (errMess) ? <></>\n                :\n                <Loading />\n            }\n\n        </Container>\n    );\n}\n\nexport {UpdatesCard, TopCard};","import React, {Component} from 'react';\nimport { Container, Row, Col } from 'reactstrap';\n\nimport Banner from './Banner';\nimport { UpdatesCard } from './HomeCard';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\n\nimport { fetchUpdates } from '../../redux/ActionCreators';\nimport Loading from '../../components/Loading';\n\nconst mapStateToProps = state => {\n    return {\n        isLoading: state.updates.isLoading,\n        errMess: state.updates.errMess,\n\n        publications: state.updates.updates.publications,\n        staff: state.updates.updates.staff_achievements,\n        students: state.updates.updates.student_achievements,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    fetchUpdates: () => {dispatch(fetchUpdates())}\n});\n\nclass  Home extends Component {\n    componentDidMount() {\n        console.log(this.props.isLoading, this.props.errMess, this.props.publications)\n        if(!this.props.isLoading && !this.props.errMess && !this.props.publications)\n            this.props.fetchUpdates();\n    }\n\n    render() {\n        return (\n            <>\n            <Banner />\n\n            <Container fluid className=\"mt-3 mb-3\">\n                <Row equal className=\"p-1 p-sm-2 p-lg-3 p-xl-5\">\n                    {\n                        (this.props.isLoading) ?\n                        <Loading />\n                        :\n                        (this.props.errMess) ?\n                        <>\n                        <p className=\"text-danger text-center\">{this.props.errMess}</p>\n                        </>\n                        :\n                        <>\n                            <Col size=\"12\" sm=\"6\" lg=\"4\" xxl=\"3\" className=\"mb-4\">\n                                <div className=\"col-12 h-100\">\n                                    <UpdatesCard\n                                        heading=\"Publications\"\n                                        updates={this.props.publications}\n                                        errMess={this.props.errMess}/>\n                                </div>\n                            </Col>\n                            <Col size=\"12\" sm=\"6\" lg=\"4\" xxl=\"3\" className=\"mb-4\">\n                                <div className=\"col-12 h-100\">\n                                    <UpdatesCard\n                                        heading=\"Staff Achievements\"\n                                        updates={this.props.staff}\n                                        errMess={this.props.errMess}/>\n                                </div>\n                            </Col>\n                            <Col size=\"12\" sm=\"6\" lg=\"4\" xxl=\"3\" className=\"mb-4\">\n                                <div className=\"col-12 h-100\">\n                                    <UpdatesCard\n                                        heading=\"Student Achievements\"\n                                        updates={this.props.students}\n                                        errMess={this.props.errMess}/>\n                                </div>\n                            </Col>\n                        </>\n                    }\n                </Row>\n            </Container>\n            </>\n        );\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Home));","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Badge, Input, Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap'\nimport { postInstitution } from '../redux/ActionCreators';\n\nconst listOfTitles = [\n    {id: 1, title: 'Dr.'},\n    {id: 2, title: 'Mr.'},\n    {id: 3, title: 'Mrs.'},\n    {id: 4, title: 'Ms.'},\n]\n\nconst listOfDegrees = [\n    'Matriculation',\n    'Intermediate',\n    'B.Tech.',\n    'B.Sc.',\n    'B.Com.',\n    'B.Arts.',\n    'B.Arch.',\n    'B.B.A.',\n    'M.B.A.',\n    'M.Tech.',\n    'M.Sc.',\n    'M.Com.',\n    'M.Arts.',\n    'M.Arch.',\n    'M.B.B.S.',\n    'M.Phil.',\n    'Ph.D.',\n    'Others',\n]\n\nfunction ApprovedBadge({ value }) {\n    return (\n        <>\n        {\n            (!value) ?\n            <Badge color=\"danger\" pill>Error</Badge>\n            :\n            (value.toLowerCase() === 'approved') ?\n            <Badge color=\"success\" pill>Approved</Badge>\n            :\n            (value.toLowerCase() === 'pending') ?\n            <Badge color=\"warning\" pill>Pending</Badge>\n            :\n            <Badge color=\"danger\" pill>Rejected</Badge>\n        }\n        </>\n    )\n}\n\nfunction RejectionModal({ modalOpen, setModalOpen, onReject, title, id, className=\"\"}) {\n    const [reason, setReason] = useState(\"\");\n    const toggle = () => setModalOpen(!modalOpen)\n\n    return (\n        <Modal isOpen={modalOpen} toggle={toggle} className={className}>\n            <ModalHeader toggle={toggle}>\n                {id}. {title}\n            </ModalHeader>\n            <ModalBody>\n                <Input type=\"textarea\"\n                    value={reason}\n                    onChange={(e) => setReason(e.target.value)}\n                    name=\"reason\"\n                    placeholder=\"Enter reason for rejection\"\n                    className=\"w-100 px-2\"\n                        />\n            </ModalBody>\n            <ModalFooter>\n                <Button color=\"danger\" onClick={() => {\n                    onReject(reason)\n                    toggle()\n                }}>\n                    Reject\n                </Button>{' '}\n                <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n            </ModalFooter>\n        </Modal>\n    )\n}\n\nfunction RenderUser({ user }) {\n    if(!user)\n        return (<></>)\n\n    return (\n        <Link to={`/profile/${user.id ? user.id : user.user}`}>\n        <Button outline color=\"primary\" className=\"rounded-pill\">\n            {user.first_name + ' ' + user.last_name}\n        </Button>\n        </Link>\n    );\n}\n\nfunction RenderEducation({ institution, degree, year }) {\n    return(\n        <p>\n        {`${degree} ⁃ ${institution} ⁃ (${year})`}\n        </p>\n    )\n}\n\nfunction captializeFirstWord(string) {\n    return string.replace(/(^\\w{1})|(\\s+\\w{1})/g, letter => letter.toUpperCase());\n}\n\nfunction AddInstitutionModal({ token, isModalOpen, setIsModalOpen }) {\n    const [institution, setInstitution] = useState('')\n    const [city, setCity] = useState('')\n\n    const [saving, setSaving] = useState(false)\n    const [savingError, setSavingError] = useState(false)\n    const [savingMsg, setSavingMsg] = useState(false)\n\n    const getString = () => captializeFirstWord(institution) + ', ' + captializeFirstWord(city)\n    const clear = () => { setCity(''); setInstitution('') }\n\n    return (\n        <Modal isOpen={isModalOpen} centered toggle={() => setIsModalOpen(!isModalOpen)}>\n            <ModalHeader>\n                Add Institute\n            </ModalHeader>\n            <ModalBody>\n                <span className=\"text-danger font-weight-bold\">\n                    NOTE: Go through these instructions before adding new institute.\n                </span>\n                <ul className='text-danger'>\n                    <li>Make sure the institute that you are adding is not already present.</li>\n                    <li>Enter full name of city and institute.</li>\n                    <li>Refresh page after adding new institute.</li>\n                </ul>\n                <Input placeholder=\"Institute Name\" value={institution}\n                    onChange={e => setInstitution(e.target.value)}\n                    className='mb-2'\n                     />\n                <Input placeholder=\"City Name\" value={city}\n                    onChange={e => setCity(e.target.value)}\n                    className='mb-2'\n                     />\n                <p className={`${savingError ? 'text-danger' : 'text-success'}`}>{savingMsg}</p>\n            </ModalBody>\n            <ModalFooter>\n                <Button color='danger'\n                    disabled={!institution || !city || saving}\n                    onClick={() => postInstitution(token, getString(), setSaving, setSavingError, setSavingMsg, clear)}\n                    >\n                    Add New Institute\n                </Button>\n                <Button color='success' onClick={() => setIsModalOpen(false)}>Cancel</Button>\n            </ModalFooter>\n        </Modal>\n    );\n}\n\nfunction getWindowDimensions() {\n    const { innerWidth: width, innerHeight: height } = window;\n    return {\n        width,\n        height\n    };\n}\n\nfunction useWindowDimensions() {\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n    useEffect(() => {\n        function handleResize() {\n        setWindowDimensions(getWindowDimensions());\n        }\n\n        window.addEventListener('resize', handleResize);\n        return () => window.removeEventListener('resize', handleResize);\n    }, []);\n\n    return windowDimensions;\n}\n\nexport { ApprovedBadge, RejectionModal, RenderUser, RenderEducation, AddInstitutionModal, useWindowDimensions, listOfTitles, listOfDegrees };","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Table, Button, Input, InputGroup, InputGroupText } from 'reactstrap';\nimport { ApprovedBadge } from '../components/Extras';\nimport Loading from './Loading';\n\nfunction Field({title, value}) {\n    return (\n        <Row className=\"mt-3 mb-3\">\n            <Col md=\"4\">\n                <h3 className=\"font-weight-bold\">{title}</h3>\n            </Col>\n            <Col md=\"8\">\n                <p className=\"h4\">{value}</p>\n            </Col>\n        </Row>\n    )\n}\n\nfunction FieldInput({title, value, setValue, type=\"text\"}) {\n    return (\n        <Row className=\"mt-3 mb-3\">\n            <Col md=\"4\">\n                <h3 className=\"font-weight-bold\">{title}</h3>\n            </Col>\n            <Col md=\"8\">\n                <Input type={type} value={value}\n                    onChange={(e) => setValue(e.target.value)}\n                    ></Input>\n            </Col>\n        </Row>\n    )\n}\n\nfunction FieldInputDropDown({title, value, setValue, values}) {\n    return (\n        <Row className=\"mt-3 mb-3\">\n            <Col md=\"4\">\n                <h3 className=\"font-weight-bold\">{title}</h3>\n            </Col>\n            <Col md=\"8\">\n                <Input type='select' value={value}\n                    onChange={(e) => setValue(e.target.value)}\n                    >\n                    <>\n                    {\n                        values.map((category) => {\n                            return (\n                                <option value={category.id}>{category.title}</option>\n                            );\n                        })\n                    }\n                    </>\n                </Input>\n            </Col>\n        </Row>\n    )\n}\n\nfunction InputSocialMedia({instagram, setInstagram, facebook, setFacebook,\n    github, setGithub, twitter, setTwitter}) {\n    return (\n        <Row className=\"mt-3 mb-3\">\n            <Col md=\"4\">\n                <h3 className=\"font-weight-bold\">Social Media</h3>\n            </Col>\n            <Col md=\"8\">\n                <InputGroup className=\"mb-2\">\n                    <InputGroupText className=\"p-1\">\n                        <i class={`fa fa-facebook-square fa-2x text-primary`}></i>\n                    </InputGroupText>\n                    <Input bsSize=\"lg\" value={facebook} onChange={(e) => setFacebook(e.target.value)} />\n                </InputGroup>\n                <InputGroup className=\"mb-2\">\n                    <InputGroupText className=\"p-1\">\n                        <i class={`fa fa-instagram fa-2x text-danger`}></i>\n                    </InputGroupText>\n                    <Input bsSize=\"lg\" value={instagram} onChange={(e) => setInstagram(e.target.value)} />\n                </InputGroup>\n                <InputGroup className=\"mb-2\">\n                    <InputGroupText className=\"p-1\">\n                        <i class={`fa fa-twitter-square fa-2x text-info`}></i>\n                    </InputGroupText>\n                    <Input bsSize=\"lg\" value={twitter} onChange={(e) => setTwitter(e.target.value)} />\n                </InputGroup>\n                <InputGroup className=\"mb-2\">\n                    <InputGroupText className=\"p-1\">\n                        <i class={`fa fa-github-square fa-2x text-dark`}></i>\n                    </InputGroupText>\n                    <Input bsSize=\"lg\" value={github} onChange={(e) => setGithub(e.target.value)} />\n                </InputGroup>\n            </Col>\n        </Row>\n    )\n}\n\nfunction SocialMedia({instagram, facebook, github, twitter}) {\n    return (\n        <Row className=\"mt-3 mb-3\">\n            <Col md=\"4\">\n                <h3 className=\"font-weight-bold\">Social Media</h3>\n            </Col>\n            <Col md=\"8\">\n                <Link to={{pathname: facebook}} target=\"_blank\">\n                    <i class={`fa fa-facebook-square fa-2x mr-3 text-primary ${!facebook ? \"d-none\" : \"\"}`}></i>\n                </Link>\n                <Link to={{pathname: instagram}} target=\"_blank\">\n                    <i class={`fa fa-instagram fa-2x mr-3 text-danger ${!instagram ? \"d-none\" : \"\"}`}></i>\n                </Link>\n                <Link to={{pathname: twitter}} target=\"_blank\">\n                    <i class={`fa fa-twitter-square fa-2x mr-3 text-info ${!twitter ? \"d-none\" : \"\"}`}></i>\n                </Link>\n                <Link to={{pathname: github}} target=\"_blank\">\n                    <i class={`fa fa-github-square fa-2x mr-3 text-dark ${!github ? \"d-none\" : \"\"}`}></i>\n                </Link>\n            </Col>\n        </Row>\n    );\n}\n\nfunction AchievementsTable(props) {\n    if(!props.achievements)\n        return (\n            <Loading />\n        );\n    else if(props.achievements.length === 0)\n        return (\n            <div className=\"w-100 rounded-3 p-3 bg-color-silver\">\n                <p className=\"h3 text-center my-5\">No achievements to show</p>\n            </div>\n        );\n\n    return (\n        <div className=\"bg-color-off-white rounded-2 col-12\">\n        <Table hover responsive className=\"rounded-2\">\n            <thead>\n                <th className=\"text-color-main h5\">#</th>\n                <th className=\"text-color-main h5\">Title</th>\n                <th className=\"text-color-main h5\">Status</th>\n                <th className=\"text-color-main h5\">Description</th>\n                <th className=\"text-color-main h5\">Achieved Date</th>\n                <th className=\"text-color-main h5\">Details</th>\n            </thead>\n            <tbody>\n                {\n                    props.achievements.map((achievement) => {\n                        let index = props.achievements.indexOf(achievement)\n                        return (\n                            <tr>\n                            <th scope=\"row\">{index+1}</th>\n                            <td>{achievement.title}</td>\n                            <td><h5><ApprovedBadge value={achievement.approved} /></h5></td>\n                            <td>{achievement.description}</td>\n                            <td>{new Date(achievement.achievedDate).toLocaleString('default', {day: \"2-digit\", month: 'short', year: \"numeric\" })}</td>\n                            <td>\n                                <Link to={\"/achievement/\"+achievement.id}>\n                                <Button color=\"info\" >View</Button>\n                                </Link>\n                            </td>\n                            </tr>\n                        )\n                    })\n                }\n            </tbody>\n        </Table>\n        </div>\n    );\n\n}\n\nfunction ProjectsTable(props) {\n    if(!props.projects)\n        return (\n            <Loading />\n        );\n    else if(props.projects.length === 0)\n        return (\n            <div className=\"w-100 rounded-3 p-3 bg-color-silver\">\n                <p className=\"h3 text-center my-5\">No projects to show</p>\n            </div>\n        );\n\n    return (\n        <div className=\"bg-color-off-white rounded-2 col-12\">\n        <Table hover responsive className=\"rounded-2\">\n            <thead>\n                <th className=\"text-color-main h5\">#</th>\n                <th className=\"text-color-main h5\">Title</th>\n                <th className=\"text-color-main h5\">Status</th>\n                <th className=\"text-color-main h5\">Description</th>\n                <th className=\"text-color-main h5\">Field</th>\n                <th className=\"text-color-main h5\">Domain</th>\n                <th className=\"text-color-main h5\">Details</th>\n            </thead>\n            <tbody>\n                {\n                    props.projects.map((project) => {\n                        let index = props.projects.indexOf(project)\n                        return (\n                            <tr>\n                            <th scope=\"row\">{index+1}</th>\n                            <td>{project.title}</td>\n                            <td><h5><ApprovedBadge value={project.approved} /></h5></td>\n                            <td>{project.description}</td>\n                            <td>{project.field}</td>\n                            <td>{project.domain}</td>\n                            <td>\n                                <Link to={\"/project/\"+project.id}>\n                                <Button color=\"info\">View</Button>\n                                </Link>\n                            </td>\n                            </tr>\n                        )\n                    })\n                }\n            </tbody>\n        </Table>\n        </div>\n    );\n\n}\n\nexport {Field, SocialMedia, AchievementsTable, ProjectsTable, FieldInput, FieldInputDropDown, InputSocialMedia};","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { Row, Col, Button, Input } from 'reactstrap';\nimport { AddInstitutionModal, listOfDegrees, RenderEducation } from '../../components/Extras';\nimport { fetchInstitutesList } from '../../redux/ActionCreators';\n\nconst mapStateToProps = (state) => ({\n    authorized: state.user.authorized,\n    token: state.user.token,\n    institutesList: state.forms.institutesList,\n    institutesLoading: state.forms.institutesLoading,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    fetchInstitutesList: (key) => dispatch(fetchInstitutesList(key))\n})\n\nfunction EditEducation(props) {\n    const [institute, setInstitute] = useState(1)\n    const [degree, setDegree] = useState(listOfDegrees[0])\n    const [year, setYear] = useState('')\n    const [isModalOpen, setIsModalOpen] = useState(false)\n\n    useEffect(() => {\n        if(!props.institutesList && !props.institutesLoading) {\n            props.fetchInstitutesList(props.token)\n        }\n    }, [props])\n\n    return (\n        <Row className=\"mt-3 mb-3\">\n            <AddInstitutionModal token={props.token} isModalOpen={isModalOpen} setIsModalOpen={setIsModalOpen} />\n            <Col md=\"4\">\n            <h3 className=\"font-weight-bold\">Education</h3>\n            </Col>\n            <Col md=\"8\">\n                <Row>\n                    {/* render education objects from education list */}\n                    {\n                        (props.educationList) ?\n                        <>\n                        {\n                            props.educationList.map((education) => (\n                                <>\n                                <Col xs={9} lg={10} className='pr-1'>\n                                    <RenderEducation\n                                        institution={(props.institutesList) ?\n                                            (props.institutesList.find((ins) => ins.id === education.institution)).title : ''}\n                                        degree={education.degree}\n                                        year={education.year}\n                                     />\n                                </Col>\n                                <Col xs={3} lg={2} className='pl-1'>\n                                    <Button\n                                        color='danger'\n                                        className='w-100'\n                                        onClick={() => props.setEducationList(props.educationList.filter((edu) => edu !== education))}\n                                        >\n                                        Delete\n                                    </Button>\n                                </Col>\n                                </>\n                            ))\n                        }\n                        </>\n                        :\n                        <></>\n                    }\n                </Row>\n                <Row className='mt-3'>\n                    <Col xs={4} lg={5} className='pr-1'>\n                        <Input type=\"select\" name=\"institution\" value={institute} onChange={e => setInstitute(e.target.value)} className=\"w-100\"\n                            disabled={props.institutesLoading}\n                            >\n                            <>\n                            {\n                                (props.institutesList) ?\n                                props.institutesList.map((institute) => {\n                                    return (\n                                        <option value={institute.id}>{institute.title}</option>\n                                    );\n                                })\n                                :\n                                <></>\n                            }\n                            </>\n                        </Input>\n                    </Col>\n                    <Col xs={3} className='px-1'>\n                        <Input type=\"select\" name=\"degree\" value={degree} onChange={e => setDegree(e.target.value)} className=\"w-100\">\n                            <>\n                            {\n                                (listOfDegrees) ?\n                                listOfDegrees.map((degree) => {\n                                    return (\n                                        <option value={degree}>{degree}</option>\n                                    );\n                                })\n                                :\n                                <></>\n                            }\n                            </>\n                        </Input>\n                    </Col>\n                    <Col xs={2} className='px-1'>\n                        <Input type=\"text\"\n                            value={year}\n                            onChange={e => setYear(e.target.value)}\n                            name=\"year\"\n                            placeholder=\"Year\"\n                            className=\"w-100\"\n                                />\n                    </Col>\n                    <Col xs={3} lg={2} className='pl-1'>\n                        <Button\n                            disabled={props.institutesLoading}\n                            outline\n                            className='w-100'\n                            onClick={() => {\n                                props.setEducationList([...props.educationList, {institution: parseInt(institute), degree, year: parseInt(year)}])\n                            }}\n                                >\n                            Add\n                        </Button>\n                    </Col>\n                </Row>\n                <Row className='mt-2'>\n                    <Col><Button color='link' onClick={() => setIsModalOpen(true)}>Can't find your institute? Click here to add institute.</Button></Col>\n                </Row>\n            </Col>\n        </Row>\n    );\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(EditEducation));","import React, {useState, useEffect} from 'react'\nimport { FieldInput } from '../../components/ProfileComponents'\nimport { withRouter } from 'react-router'\nimport Loading from '../../components/Loading';\nimport { connect } from 'react-redux';\nimport { Row, Col, Button } from 'reactstrap';\n\nimport { baseUrl } from '../../shared/baseUrl';\nimport EditEducation from './EditEducation';\n\nconst mapStateToProps = (state) => ({\n    profileLoaded: state.user.profileLoaded,\n    profile: state.user.profile,\n    authorized: state.user.authorized,\n    token: state.user.token\n})\n\nfunction patchStudentDetials(key, studId, studObject, setSaving, setSavingError, setSavingMessage) {\n    setSaving(true)\n    setSavingError(false)\n    setSavingMessage('')\n    fetch(baseUrl + 'main/api/student/' + studId + '/', {\n        method: 'PUT',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Token ' + key\n        },\n        body: JSON.stringify(studObject)\n    })\n    .then(response => {\n        if(response.ok)\n            return response\n        throw new Error('Error saving student details!')\n    })\n    .then(response => response.json())\n    .then(res => {\n        setSaving(false)\n        setSavingMessage('Student details successfully saved!')\n    })\n    .catch(err => {\n        console.log(err)\n        setSaving(false)\n        setSavingError(true)\n        setSavingMessage(err.message)\n    })\n}\n\nfunction EditStudentDetails(props) {\n    const [rollNo, setRollNo] = useState('')\n    const [batch, setBatch] = useState('')\n    const [major, setMajor] = useState('')\n    const [gpa, setGpa] = useState('')\n    const [bio, setBio] = useState('')\n    const [education, setEducation] = useState([])\n    const [studId, setStudId] = useState('')\n\n    const [error, setError] = useState('')\n    const [loading, setLoading] = useState(true)\n    const [saving, setSaving] = useState(false)\n    const [savingError, setSavingError] = useState(false)\n    const [savingMessage, setSavingMessage] = useState('')\n\n    useEffect(() => {\n        fetch(baseUrl+'main/api/student/', {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Token ' + props.token\n            }\n        })\n        .then(response => {\n            if(response.ok)\n                return response\n            throw new Error('Error fetching student details!')\n        })\n        .then(response => response.json())\n        .then(res => {\n            res = res[0]\n            setRollNo(res.rollNo)\n            setBatch(res.batch)\n            setMajor(res.major)\n            setGpa(res.GPA)\n            setBio(res.bio)\n            setEducation(res.education)\n            setStudId(res.id)\n            setLoading(false)\n        })\n        .catch(err => {\n            console.log(err)\n            setError(err.message)\n            setLoading(false)\n        })\n    }, [props.token])\n\n    return (\n        <>\n        <Row className=\"p-3 p-md-4 \">\n            <Col className=\"xs-12 text-center\">\n                <h2 className=\"font-weight-bold\">Edit Student Details</h2>\n            </Col>\n        </Row>\n        <Row>\n            <Col>\n            {\n                (loading) ?\n                <Loading />\n                :\n                (error) ?\n                <p xs={12} className='text-danger'>{error}</p>\n                :\n                <>\n                    <FieldInput title={\"Roll Number\"} value={rollNo} setValue={setRollNo} />\n                    <FieldInput title={\"Batch\"} value={batch} setValue={setBatch} type=\"number\" />\n                    <FieldInput title={\"Major\"} value={major} setValue={setMajor} />\n                    <FieldInput title={\"CGPA\"} value={gpa} setValue={setGpa} />\n                    {/* <FieldInput title={\"Bio\"} value={bio} setValue={setBio} type=\"textarea\" /> */}\n                    <EditEducation educationList={education} setEducationList={setEducation} />\n                    <Button\n                        color='success'\n                        disabled={saving}\n                        onClick={() => patchStudentDetials(props.token,\n                            studId,\n                            {\n                                rollNo: rollNo,\n                                batch: batch,\n                                major: major,\n                                GPA: gpa,\n                                bio: bio,\n                                education: education\n                            },\n                            setSaving, setSavingError, setSavingMessage\n                        )}\n                    >\n                        Save Student Details\n                    </Button>\n\n                    <p className={`${savingError ? 'text-danger' : 'text-success'} mt-3`}>\n                        {savingMessage}\n                    </p>\n                </>\n            }\n            </Col>\n        </Row>\n        </>\n    )\n}\n\nexport default withRouter(connect(mapStateToProps)(EditStudentDetails));","import React, {useState, useEffect} from 'react'\nimport { FieldInput, FieldInputDropDown } from '../../components/ProfileComponents'\nimport { withRouter } from 'react-router'\nimport Loading from '../../components/Loading';\nimport { connect } from 'react-redux';\nimport { Row, Col, Button } from 'reactstrap';\n\nimport { baseUrl } from '../../shared/baseUrl';\nimport EditEducation from './EditEducation';\nimport { listOfTitles } from '../../components/Extras';\n\nconst mapStateToProps = (state) => ({\n    profileLoaded: state.user.profileLoaded,\n    profile: state.user.profile,\n    authorized: state.user.authorized,\n    token: state.user.token\n})\n\nfunction patchStaffDetials(key, staffId, staffObject, setSaving, setSavingError, setSavingMessage) {\n    setSaving(true)\n    setSavingError(false)\n    setSavingMessage('')\n    fetch(baseUrl + 'main/api/staff/' + staffId + '/', {\n        method: 'PUT',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Token ' + key\n        },\n        body: JSON.stringify(staffObject)\n    })\n    .then(response => {\n        if(response.ok)\n            return response\n        throw new Error('Error saving staff details!')\n    })\n    .then(response => response.json())\n    .then(res => {\n        setSaving(false)\n        setSavingMessage('Staff details successfully saved!')\n    })\n    .catch(err => {\n        console.log(err)\n        setSaving(false)\n        setSavingError(true)\n        setSavingMessage(err.message)\n    })\n}\n\nfunction EditStaffDetails(props) {\n    const [empId, setEmpId] = useState('')\n    const [joiningDate, setJoiningDate] = useState('')\n    const [department, setDepartment] = useState('')\n    const [title, setTitle] = useState('')\n    const [designation, setDesignation] = useState('')\n    const [education, setEducation] = useState([])\n    const [staffId, setStaffId] = useState('')\n\n    const [error, setError] = useState('')\n    const [loading, setLoading] = useState(true)\n    const [saving, setSaving] = useState(false)\n    const [savingError, setSavingError] = useState(false)\n    const [savingMessage, setSavingMessage] = useState('')\n\n    useEffect(() => {\n        fetch(baseUrl+'main/api/staff/', {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Token ' + props.token\n            }\n        })\n        .then(response => {\n            if(response.ok)\n                return response\n            throw new Error('Error fetching student details!')\n        })\n        .then(response => response.json())\n        .then(res => {\n            res = res[0]\n            setEmpId(res.employeeId)\n            setJoiningDate(res.associatedSince)\n            setDepartment(res.department)\n            setTitle(res.title)\n            setDesignation(res.designation)\n            setEducation(res.education)\n            setStaffId(res.id)\n            setLoading(false)\n        })\n        .catch(err => {\n            console.log(err)\n            setError(err.message)\n            setLoading(false)\n        })\n    }, [props.token])\n\n    return (\n        <>\n        <Row className=\"p-3 p-md-4 \">\n            <Col className=\"xs-12 text-center\">\n                <h2 className=\"font-weight-bold\">Edit Staff Details</h2>\n            </Col>\n        </Row>\n        <Row>\n            <Col>\n            {\n                (loading) ?\n                <Loading />\n                :\n                (error) ?\n                <p xs={12} className='text-danger'>{error}</p>\n                :\n                <>\n                    <FieldInput title={\"Employee Id\"} value={empId} setValue={setEmpId} type=\"number\" />\n                    <FieldInput title={\"Joining Date\"} value={joiningDate} setValue={setJoiningDate} type=\"date\" />\n                    <FieldInput title={\"Department\"} value={department} setValue={setDepartment} />\n                    <FieldInputDropDown title=\"Title\" value={title} setValue={setTitle} values={listOfTitles} />\n                    {/* <FieldInput title={\"Title\"} value={title} setValue={setTitle} /> */}\n                    <FieldInput title={\"Designation\"} value={designation} setValue={setDesignation} />\n                    <EditEducation educationList={education} setEducationList={setEducation} />\n                    <Button\n                        color='success'\n                        disabled={saving}\n                        onClick={() => patchStaffDetials(props.token,\n                            staffId,\n                            {\n                                employeeId: empId,\n                                associatedSince: joiningDate,\n                                department: department,\n                                title: title,\n                                designation: designation,\n                                education: education\n                            },\n                            setSaving, setSavingError, setSavingMessage\n                        )}\n                    >\n                        Save Staff Details\n                    </Button>\n\n                    <p className={`${savingError ? 'text-danger' : 'text-success'} mt-3`}>\n                        {savingMessage}\n                    </p>\n                </>\n            }\n            </Col>\n        </Row>\n        </>\n    )\n}\n\nexport default withRouter(connect(mapStateToProps)(EditStaffDetails));","import React, { useEffect, useState } from 'react'\nimport { Redirect, withRouter } from 'react-router'\nimport { Container, Row, Col, FormGroup, Input, Label, Button } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport Loading from '../../components/Loading';\nimport { Field, FieldInput, FieldInputDropDown, InputSocialMedia } from '../../components/ProfileComponents'\nimport { fetchUserProfile, patchUserProfile } from '../../redux/ActionCreators';\nimport { Link } from 'react-router-dom';\nimport EditStudentDetails from './EditStudentDetails';\nimport EditStaffDetails from './EditStaffDetails';\nimport { baseUrl_ } from '../../shared/baseUrl';\n// import EditPhoneNumbers from './EditPhoneNumbers';\n\nconst mapStateToProps = (state) => ({\n    profileLoaded: state.user.profileLoaded,\n    profile: state.user.profile,\n    authorized: state.user.authorized,\n    token: state.user.token,\n    achievements: state.user.achievements,\n    projects: state.user.projects\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    fetchUserProfile: (key) => dispatch(fetchUserProfile(key)),\n    patchUserProfile: (key, id, studObj,\n        setSaving, setSavingMessage, setSavingSuccess\n    ) => dispatch(patchUserProfile(key, id, studObj,\n        setSaving, setSavingMessage, setSavingSuccess\n    ))\n});\n\nfunction Profile(props) {\n    useEffect(() => {\n        if(props.authorized && !props.profileLoaded)\n            props.fetchUserProfile(props.token);\n    }, [props])\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [phone, setPhone] = useState('')\n    const [showemail, setShowemail] = useState(false)\n    const [showphone, setShowphone] = useState(false)\n    const [group, setGroup] = useState('')\n    const [dob, setdob] = useState(undefined)\n    const [gender, setGender] = useState(0)\n    const [address, setAddress] = useState('')\n    const [github, setGithub] = useState('')\n    const [instagram, setInstagram] = useState('')\n    const [facebook, setFacebook] = useState('')\n    const [twitter, setTwitter] = useState('')\n    const [profilepic, setProfilepic] = useState('')\n\n    const [file, setFile] = useState('')\n\n    const [saving, setSaving] = useState(false)\n    const [savingMessage, setSavingMessage] = useState('')\n    const [savingSuccess, setSavingSuccess] = useState(true)\n\n    useEffect(() => {\n        setName(props.profile.name)\n        setGroup(props.profile.group)\n        setAddress(props.profile.address)\n        setGender(props.profile.gender)\n        setdob(props.profile.dob)\n        setEmail(props.profile.email)\n        setPhone(props.profile.phone_number)\n        setShowemail(props.profile.show_email)\n        setShowphone(props.profile.show_phone)\n        setTwitter(props.profile.twitter)\n        setFacebook(props.profile.instagram)\n        setGithub(props.profile.github)\n        setInstagram(props.profile.instagram)\n        if(props.profile.profile_pic)\n            setProfilepic(baseUrl_ + props.profile.profile_pic)\n    }, [props.profile])\n\n    if(!props.authorized)\n        return (\n            <Redirect to=\"/login\" />\n        );\n    else if(!props.profileLoaded) {\n        return(\n            <Loading />\n        );\n    }\n\n    // let skill_str = \"\"\n    // for(let i=0; i<props.profile.skills.length; ++i) {\n    //     skill_str += props.profile.skills[i]\n    //     if(i !== props.profile.skills.length-1)\n    //         skill_str += ', '\n    // }\n    return (\n        <Container className=\"p-4 p-md-5 mt-4 mb-4 bg-color-lightest-grey rounded-3\">\n            <Row className=\"p-3 p-md-4 \">\n                <Col className=\"xs-12 text-center\">\n                    <h2 className=\"font-weight-bold\">Edit Profile</h2>\n                </Col>\n            </Row>\n            <Row>\n                <Col md=\"4\">\n                    <img src={(profilepic && profilepic !== '.') ? profilepic : \"assets/Profile/dp.png\"}\n                        alt=\"profile\" className=\"rounded-circle w-100 p-3\"/>\n\n                    <p className=\"text-danger\">Note: Picture should be in 1:1 aspect ratio. File size less than 2 MB.</p>\n                    <Input type=\"file\" id=\"profile_pic\" name=\"profile_pic\"\n                        onChange={(e) => {\n                            if(!e.target.files[0])\n                                return\n\n                            setFile(e.target.files[0])\n\n                            var reader = new FileReader();\n                            reader.readAsDataURL(e.target.files[0]);\n\n                            reader.onloadend = () => {\n                                setProfilepic(reader.result)\n                            }\n                        }}/>\n                </Col>\n                <Col md=\"8\">\n                    <FieldInput title=\"Name\" value={name} setValue={setName} />\n                    <Field title=\"Role\" value={[\n                        \"Student\",\n                        \"Staff\",\n                        \"Admin\"\n                    ][props.profile.designation-1]} />\n                    <Field title=\"Email\" value={email} />\n                    <FieldInput title=\"Date of Birth\" value={dob}\n                        setValue={setdob} type=\"date\" />\n                    <FieldInputDropDown title=\"Gender\" value={gender} setValue={setGender}\n                        values={[{id: 1, title: \"Female\"}, {id: 2, title: \"Male\"}, {id: 3, title: \"Others\"}]} />\n                    {/* <FieldInput title=\"Group\" value={group} setValue={setGroup} /> */}\n                    {/* <EditPhoneNumbers /> */}\n                    <FieldInput title=\"Phone\" value={phone} setValue={setPhone} type=\"number\" />\n                    <Row className=\"mt-3 mb-3\">\n                        <Col md=\"4\">\n                        </Col>\n                        <Col md=\"8\">\n                            <FormGroup check inline>\n                                <Input id=\"showemail\" type=\"checkbox\" checked={showemail} onChange={(e) => setShowemail(e.target.checked)} />\n                                <Label check for=\"showemail\">\n                                Show Email\n                                </Label>\n                            </FormGroup>\n                            <FormGroup check inline>\n                                <Input id=\"showphone\" type=\"checkbox\" checked={showphone} onChange={(e) => setShowphone(e.target.checked)} />\n                                <Label check for=\"showphone\">\n                                Show Phone\n                                </Label>\n                            </FormGroup>\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n            {/* <Field title=\"Skills\" value={skill_str} /> */}\n            <FieldInput title=\"Bio\" value={address} setValue={setAddress} type=\"textarea\" />\n            <InputSocialMedia\n                instagram={instagram} setInstagram={setInstagram}\n                facebook={facebook} setFacebook={setFacebook}\n                twitter={twitter} setTwitter={setTwitter}\n                github={github} setGithub={setGithub}\n            />\n            <Button disabled={saving}\n            onClick={() => props.patchUserProfile(\n                props.token, props.profile.id,\n                {\n                    name: name,\n                    e_mail: email,\n                    phone_number: phone,\n                    show_email: showemail,\n                    show_phone: showphone,\n                    group: group,\n                    dob: dob,\n                    gender: gender,\n                    address: address,\n                    github: github,\n                    instagram: instagram,\n                    facebook: facebook,\n                    twitter: twitter,\n                    profile_pic: file\n                },\n                setSaving, setSavingMessage, setSavingSuccess\n            )} color=\"success\">\n                Save Changes\n            </Button>\n            <Link to={\"/profile/\"+props.profile.user}>\n            <Button color='primary' className='ml-3'>\n                View Public Profile\n            </Button>\n            </Link>\n            <p className={`${savingSuccess ? 'text-success' : 'text-danger'} mt-3`}>{savingMessage}</p>\n            {\n                (props.profile.designation === 1) ?\n                <EditStudentDetails />\n                :\n                <EditStaffDetails />\n            }\n        </Container>\n    )\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Profile));","import React from 'react'\nimport {Row, Col, InputGroup, InputGroupText, Input, InputGroupAddon, Button} from 'reactstrap'\n\nfunction SearchBar({query, setQuery, onSearch}) {\n    return (\n        <Row className=\"w-100\">\n            <Col xs=\"9\">\n            <InputGroup className=\"rounded-pill p-0\">\n                <InputGroupAddon addonType=\"prepend\">\n                <InputGroupText className=\"text-color-main bg-color-lightest-grey\"> <i class=\"fa fa-search\" aria-hidden=\"true\"></i> </InputGroupText>\n                </InputGroupAddon>\n                <Input placeholder=\"Enter title\" value={query} onChange={(event) => {\n                        setQuery(event.target.value)\n                    }} className=\"p-3\"/>\n            </InputGroup>\n            </Col>\n            <Col xs=\"3\" className=\"p-0\">\n                <Button color=\"info\" onClick={onSearch} className=\"bg-color-main-ui w-100 rounded-pill\">Search</Button>\n            </Col>\n        </Row>\n    );\n}\n\nexport default SearchBar;","import React from 'react';\nimport {Container, Row, Col} from 'reactstrap';\n\nfunction NotFound (props) {\n    let message = props.message ? props.message : \"Error 404! Page Not Found.\"\n    return (\n        <Container className=\"p-3 p-md-4 p-lg-5 mt-4 mb-4 bg-color-lightest-grey rounded-3\">\n            <Row>\n                <Col xs={12} className=\"d-flex\">\n                    <img src=\"/assets/page-not-found.png\" alt=\"Page not found\" className=\"d-flex m-auto\"\n                        style={{maxWidth: \"80%\", maxHeight: \"80%\"}} />\n                </Col>\n\n                <Col xs={12}>\n                    <h3 className=\"text-danger text-center mt-5\">{message}</h3>\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n\nexport default NotFound;","import React, { useState, useEffect } from 'react'\nimport { Col, Container, Row, Button, Table } from 'reactstrap';\nimport { Redirect, withRouter } from \"react-router\";\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport SearchBar from '../../components/Search'\nimport Loading from '../../components/Loading';\nimport NotFound from '../../components/NotFound'\nimport { baseUrl } from '../../shared/baseUrl';\n\nconst mapStateToProps = (state) => ({\n    authorized: state.user.authorized,\n    token: state.user.token,\n})\n\nfunction fetchProjects(key, query, setProjects, setLoading, setErrorMessage) {\n    let token_head = 'Token '+key;\n\n    fetch(baseUrl+'main/api/search?q='+query, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': token_head\n        }\n    })\n    .then((response) => {\n        if(!response.ok)\n            throw new Error('Unexpected error occurred!')\n        console.log(response.error)\n        return response\n    })\n    .then(response => response.json())\n    .then(response => {\n        console.log(response)\n        setProjects(response.projects.filter(project => project.approved === 'approved'))\n        setLoading(false)\n        return response\n    })\n    .catch(error => {\n        setLoading(false)\n        setErrorMessage(error.message)\n        console.log(error)\n    })\n}\n\nfunction Results( {projects} ) {\n    return (\n        <Table hover responsive className=\"rounded-2\">\n            <thead>\n                <th className=\"text-color-main h5\">#</th>\n                <th className=\"text-color-main h5\">Title</th>\n                <th className=\"text-color-main h5\">Description</th>\n                <th className=\"text-color-main h5\">Added By</th>\n                <th className=\"text-color-main h5\">Date Created</th>\n                <th className=\"text-color-main h5\">Details</th>\n            </thead>\n            <tbody>\n                {\n                    (projects) ?\n                    projects.map((project) => {\n                        return (\n                            <tr>\n                            <th scope=\"row\">{project.id}</th>\n                            <td>{project.title}</td>\n                            <td>{project.description}</td>\n                            <td>{(project.addedBy) ? project.addedBy.first_name: ''}</td>\n                            <td>{new Date(project.dateCreated).toLocaleString('default', {day: \"2-digit\", month: 'short', year: \"numeric\" })}</td>\n                            <td>\n                                <Link to={\"/project/\"+project.id}>\n                                    <Button color=\"info\">\n                                        View\n                                    </Button>\n                                </Link>\n                            </td>\n                            </tr>\n                        )\n                    })\n                    :\n                    <></>\n                }\n            </tbody>\n        </Table>\n    );\n}\n\nfunction Projects(props) {\n    const [loading, setLoading] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n    const [projects, setProjects] = useState(false);\n    const [query, setQuery] = useState('');\n\n    useEffect(() => {\n        setLoading(true);\n        fetchProjects(props.token, '', setProjects, setLoading, setErrorMessage);\n    }, [props.token])\n\n    if(!props.authorized)\n        return (<Redirect to='/login' />);\n\n    if(errorMessage)\n        return ( <NotFound message={errorMessage} /> );\n\n    return (\n        <Container className=\"p-3 p-md-4 mt-4 mb-4 bg-color-lightest-grey rounded-3\">\n            <Row>\n                <Col md={{size: 8, offset: 2}}>\n                    <SearchBar query={query} setQuery={setQuery} onSearch={ () => {\n                        setLoading(true)\n                        fetchProjects(props.token, query, setProjects, setLoading, setErrorMessage);\n                    }} />\n                </Col>\n            </Row>\n            {/* <Row className=\"mt-4 bg-color-off-white rounded-2 p-2\">\n                <Col xs=\"auto\">\n                    <h3 className=\"text-color-main font-weight-bold mb-0 mr-4 d-inline\">Filters</h3>\n                </Col>\n                <Col xs=\"auto\">\n\n                </Col>\n            </Row> */}\n            <Row className=\"mt-4\">\n                {\n                    (loading) ?\n                        <Loading />\n                    :\n                        <Results projects={projects}/>\n                }\n            </Row>\n        </Container>\n    )\n}\n\nexport default withRouter(connect(mapStateToProps)(Projects));","import React, { Component } from 'react';\nimport { Container, Row, Col, Form, FormGroup, Input, Button } from 'reactstrap'\nimport { withRouter, Redirect } from 'react-router-dom';\nimport { login, loginOSA } from '../../redux/ActionCreators';\nimport { connect } from 'react-redux';\nimport Loading from '../../components/Loading';\n\nconst mapStateToProps = (state) => ({\n    authorized: state.user.authorized,\n    loggingIn: state.user.loggingIn,\n    error: state.user.error\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    login: (email, password) => {dispatch(login(email, password))},\n    loginOSA: (email, password) => {dispatch(loginOSA(email, password))}\n});\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: \"\",\n            password: \"\"\n        }\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleUsernameChange = this.handleUsernameChange.bind(this);\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    }\n\n    handleUsernameChange(event) {\n        this.setState({username: event.target.value});\n    }\n    handlePasswordChange(event) {\n        this.setState({password: event.target.value});\n    }\n    handleSubmit(event) {\n        this.props.login(this.state.username, this.state.password);\n    }\n\n    render() {\n        if(this.props.authorized)\n            return (\n                <Redirect to=\"/profile\" />\n            );\n        return (\n            <Container className=\"my-5\">\n                <Row className=\"rounded-3 shadow\">\n                    <Col md=\"6\" className=\"d-none d-md-flex p-0\">\n                        <img src=\"assets/login.jpg\" alt=\"banner\" className=\"d-flex mx-auto w-100 h-100 rounded-left-3\"></img>\n                    </Col>\n\n                    <Col md=\"6\" xs=\"12\"\n                        className=\"py-3\">\n                        <Row>\n                            <Col xs=\"12\" className=\"d-flex mt-4\">\n                                <img src=\"IIITDLogo.png\" alt=\"IIITD Logo\" className=\"w-25 d-flex mx-auto mt-4 mb-4\"></img>\n                            </Col>\n                        </Row>\n\n                        <Row className=\"pl-md-5 pr-md-5 pl-xs-2 pr-xs-2 mt-3\">\n                            <Col xs=\"12\">\n                            <p className=\"h4 text-danger\">{this.props.error}</p>\n                            <Form>\n                                <FormGroup>\n                                    <Input type=\"text\" name=\"username\" id=\"username\" placeholder=\"Username\"\n                                        value={this.state.username} onChange={this.handleUsernameChange}/>\n                                </FormGroup>\n                                <FormGroup>\n                                    <Input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Password\"\n                                        value={this.state.password} onChange={this.handlePasswordChange}/>\n                                </FormGroup>\n\n                                <Button color=\"info\" disabled={this.props.loggingIn}\n                                    onClick={() => this.props.loginOSA(this.state.username, this.state.password)}\n                                    className='bg-color-main-ui w-50 rounded-pill mt-3 mb-4'>\n                                        Login OSA\n                                </Button>\n                                <br />\n                                <Button color=\"info\" disabled={this.props.loggingIn}\n                                    onClick={this.handleSubmit}\n                                    className='bg-color-main-ui w-50 rounded-pill'>\n                                        Login\n                                </Button>\n                            </Form>\n                            </Col>\n\n                            {\n                                this.props.loggingIn ?\n                                    <Col xs = \"12\">\n                                        <Loading margin=\"my-2\" />\n                                    </Col>\n                                :\n                                    <>\n                                    <Col xs=\"12\">\n                                        <p>\n                                        Not Registered Yet?\n                                        </p>\n                                        <a href='http://osa.iiitd.edu.in/' target='_blank' rel='noreferrer'>\n                                            <Button color=\"info\" className='bg-color-main-ui w-50 rounded-pill mb-3'>Sign Up</Button>\n                                        </a>\n                                    </Col>\n                                    </>\n                            }\n                        </Row>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Login));","import React from 'react';\nimport { Container, Row, Col, Form, FormGroup, Input, Button } from 'reactstrap'\nimport {Link} from 'react-router-dom'\n\nfunction SignUp(props) {\n\n    return (\n        <Container className=\"my-5\">\n            <Row className=\"rounded-3 shadow\">\n                <Col md=\"6\" className=\"d-none d-md-flex p-0\">\n                    <img src=\"assets/login.jpg\" alt=\"banner\" className=\"d-flex mx-auto w-100 h-100 rounded-left-3\"></img>\n                </Col>\n                \n                <Col md=\"6\" xs=\"12\">\n                    <Row>\n                        <Col xs=\"12\" className=\"d-flex mt-4\">\n                            <img src=\"IIITDLogo.png\" alt=\"IIITD Logo\" className=\"w-25 mt-3 d-flex m-auto\"></img>\n                        </Col>\n                    </Row>\n\n                    <Row className=\"pl-md-5 pr-md-5 pl-xs-2 pr-xs-2 mt-3\">\n                        <Col xs=\"12\">\n                        <Form>\n                            <FormGroup>\n                                <Input type=\"text\" name=\"Name\" id=\"fullname\" placeholder=\"Full Name\" />\n                            </FormGroup>\n                            <FormGroup>\n                                <Input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Email\" />\n                            </FormGroup>\n                            <FormGroup>\n                                <Input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Password\" />\n                            </FormGroup>\n                            <Button color=\"info\" className='bg-color-main-ui rounded-pill w-50 mt-3 mb-4'>Register</Button>\n                        </Form>\n                        </Col>\n\n                        <Col xs=\"12\">\n                            <p>\n                            Already Registered?\n                            </p>\n                            <Link to=\"/login\">\n                                <Button color=\"info\" className='bg-color-main-ui rounded-pill w-50  mb-3'>Login</Button>\n                            </Link>\n                        </Col>\n\n                        <Col xs=\"12\">\n                            <hr/>\n                        </Col>\n\n                        <Col>\n                            <Button outline color='danger' className='w-100 rounded-pill mt-3 mb-4'>\n                                <i className=\"fa fa-lg fa-google mr-3\" aria-hidden=\"true\"></i>\n                                Continue With Google\n                            </Button>\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default SignUp;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect, withRouter } from 'react-router';\nimport { Container, Row, Col, Label, Button, Form, Input, CustomInput } from 'reactstrap';\nimport { fetchStudentsList, fetchInstitutesList, fetchTagsList, postTag, postNewAchievement, addAchievementPostingSuccess, patchAchievement } from '../../redux/ActionCreators';\nimport { AddInstitutionModal } from '../../components/Extras';\n\nconst mapStateToProps = (state) => ({\n    authorized: state.user.authorized,\n    token: state.user.token,\n\n    studentsList: state.forms.studentsList,\n    studentsLoading: state.forms.studentsLoading,\n\n    institutesList: state.forms.institutesList,\n    institutesLoading: state.forms.institutesLoading,\n\n    tagsList: state.forms.tagsList,\n    tagsLoading: state.forms.tagsLoading,\n\n    awardCategory: state.forms.awardCategory,\n\n    addAchievementPosting: state.forms.addAchievementPosting,\n    addAchievementPostingError: state.forms.addAchievementPostingError,\n    addAchievementPostingMessage: state.forms.addAchievementPostingMessage\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    fetchStudentsList: (key) => dispatch(fetchStudentsList(key)),\n    fetchInstitutesList: (key) => dispatch(fetchInstitutesList(key)),\n    fetchTagsList: (key) => dispatch(fetchTagsList(key)),\n    postNewAchievement: (key, stateObj, clearFunction) => dispatch(postNewAchievement(key, stateObj, clearFunction)),\n    patchAchievement: (key, stateObj, clearFunction, achievementId) => dispatch(patchAchievement(key, stateObj, clearFunction, achievementId)),\n    addAchievementPostingMessageClear: () => dispatch(addAchievementPostingSuccess('')),\n    postTag: (key, tag, callback, errorFunction) => dispatch(postTag(key, tag, callback, errorFunction))\n})\n\nconst initialState = {\n    title: '',\n    description: '',\n    institution: 1,\n    dateofachievement: '',\n    team: [],\n    teamInput: '',\n    teamAdding: false,\n    teamInputErr: '',\n    tags: [],\n    tagsInput: '',\n    tagsAdding: false,\n    tagsInputErr: '',\n    category: 0,\n    type: false,\n    proof: null,\n    file: null,\n    progress: 0,\n    isModalOpen: false\n}\n\nclass AddAchievement extends Component {\n    constructor(props) {\n        super(props);\n        this.state = initialState\n\n        if(props.edit) {\n            this.state.title = props.achievementDetails.title\n            this.state.description = props.achievementDetails.description\n            this.state.institution = props.achievementDetails.institution\n            this.state.dateofachievement = props.achievementDetails.achievedDate\n            this.state.category = props.achievementDetails.category\n            this.state.proof = props.achievementDetails.proof\n            if(props.achievementDetails.tags)\n                this.state.tags = props.achievementDetails.tags\n            if(props.achievementDetails.teamMembers)\n                this.state.team = props.achievementDetails.teamMembers\n        }\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.addTeamMember = this.addTeamMember.bind(this);\n        this.addTag = this.addTag.bind(this);\n        this.addTeamMember = this.addTeamMember.bind(this);\n        this.removeFromList = this.removeFromList.bind(this);\n        this.clearState = this.clearState.bind(this);\n        this.handleFileChange = this.handleFileChange.bind(this);\n    }\n\n    clearState() {\n        this.setState(initialState);\n    }\n\n    handleInputChange(event) {\n        const target = event.target\n        const value = target.value\n        const name = target.name\n\n        this.setState({\n            [name] : value,\n            [name+\"Err\"] : '',\n        })\n\n        if(this.props.addAchievementPostingMessage)\n            this.props.addAchievementPostingMessageClear();\n    }\n\n    handleFileChange(event) {\n        if(event.target.files[0]) {\n            this.setState({\n                file : event.target.files[0]\n            })\n        }\n    }\n\n    handleSubmit(event) {\n        console.log('Submit detected.')\n        if(this.props.edit)\n            this.props.patchAchievement(this.props.token, this.state, this.clearState, this.props.achievementDetails.id);\n        else\n            this.props.postNewAchievement(this.props.token, this.state, this.clearState);\n        event.preventDefault();\n    }\n\n    componentDidMount() {\n        if(!this.props.studentsLoading && !this.props.studentsList)\n            this.props.fetchStudentsList(this.props.token)\n        if(!this.props.tagsLoading && !this.props.tagsList)\n            this.props.fetchTagsList(this.props.token)\n        if(!this.props.institutesLoading && !this.props.institutesList)\n            this.props.fetchInstitutesList(this.props.token)\n    }\n\n    addTeamMember() {\n        this.setState({teamAdding: true})\n        var studentObj = this.props.studentsList.find(student => student.user__email === this.state.teamInput)\n        var validation = studentObj !== undefined\n        console.log(this.props.studentsList)\n\n        if(validation && this.state.team.indexOf(studentObj) === -1) {\n            this.setState({\n                team: [...this.state.team, studentObj],\n                teamInput: ''\n            })\n        }\n        else if (this.state.team.indexOf(studentObj) !== -1) {\n            this.setState({\n                teamInputErr : 'Team member already added!'\n            })\n        }\n        else {\n            this.setState({\n                teamInputErr : 'No such student found in our database!'\n            })\n        }\n        this.setState({teamAdding: false})\n    }\n\n    capitalize(input) {\n        return input.split(' ').map(s => s.charAt(0).toUpperCase() + s.substring(1)).join(' ');\n    }\n\n    addTag() {\n        this.setState({tagsAdding: true})\n        var tagObj = this.props.tagsList.find(tag => tag.title.toUpperCase() === this.state.tagsInput.toUpperCase())\n        var validation = tagObj !== undefined\n        var processing = false\n\n        console.log(this.props.tagsList, this.state.tagsInput, tagObj)\n\n        if(validation && this.state.tags.indexOf(tagObj) === -1) {\n            this.setState({\n                tags: [...this.state.tags, tagObj],\n                tagsInput: ''\n            })\n        }\n        else if (this.state.tags.indexOf(tagObj) !== -1) {\n            this.setState({\n                tagsInput : 'Tag Already Added!'\n            })\n        }\n        else {\n            processing = true\n            this.props.postTag(this.props.token, this.capitalize(this.state.tagsInput),\n            (tagObj) => {\n                this.setState({\n                    tags: [...this.state.tags, tagObj],\n                    tagsInput : '',\n                    tagsAdding: false\n                })\n            }\n            , (message) => {\n                this.setState({\n                    tagsInputErr: message,\n                    tagsAdding: false\n                })\n            })\n        }\n        if (!processing) this.setState({tagsAdding: false})\n    }\n\n    removeFromList(listName, item) {\n        let list = this.state[listName]\n        let ind = list.indexOf(item);\n        list.splice(ind, 1)\n        this.setState({\n            [listName]: list\n        })\n    }\n\n    render(){\n        if(!this.props.authorized)\n            return (\n                <Redirect to=\"/login\" />\n            )\n        return(\n            <Container className=\"my-5 bg-color-lightest-grey p-4 p-md-5 rounded-3\">\n                <h2 className=\"font-weight-bold text-center\">{(this.props.edit ? 'Edit' : 'Add')} Achievement</h2>\n                <Form className=\"mt-5\" onSubmit={this.handleSubmit}>\n                    <Row className=\"form-group\">\n                        <Label htmlFor=\"title\" md={3}>\n                            <h4 className=\"font-weight-bold\">Title</h4>\n                        </Label>\n                        <Col md={9}>\n                            <Input type=\"text\"\n                                value={this.state.title}\n                                onChange={this.handleInputChange}\n                                name=\"title\"\n                                placeholder=\"Enter title\"\n                                className=\"w-100\"\n                                    />\n                        </Col>\n                    </Row>\n\n                    <Row className=\"form-group\">\n                        <Label htmlFor=\"description\" md={3}>\n                            <h4 className=\"font-weight-bold\">Description</h4>\n                        </Label>\n                        <Col md={9}>\n                            <Input type=\"textarea\"\n                                value={this.state.description}\n                                onChange={this.handleInputChange}\n                                name=\"description\"\n                                placeholder=\"Enter description\"\n                                className=\"w-100 px-2\"\n                                    />\n                        </Col>\n                    </Row>\n\n                    <Row className=\"form-group\">\n                        <Label htmlFor=\"category\" md={3}>\n                            <h4 className=\"font-weight-bold\">Category</h4>\n                        </Label>\n                        <Col md={9}>\n                            <Input type=\"select\" name=\"category\" value={this.state.category} onChange={this.handleInputChange} className=\"w-100\">\n                                <>\n                                {\n                                    this.props.awardCategory.map((category) => {\n                                        return (\n                                            <option value={category.id}>{category.title}</option>\n                                        );\n                                    })\n                                }\n                                </>\n                            </Input>\n                        </Col>\n                    </Row>\n\n                    <Row className=\"form-group\">\n                        <Label htmlFor=\"type\" md={3}>\n                            <h4 className=\"font-weight-bold\">Type</h4>\n                        </Label>\n                        <Col md={9}>\n                            <Input type=\"select\" name=\"type\" value={this.state.type} onChange={this.handleInputChange} className=\"w-100\">\n                                <option value={true}>Technical</option>\n                                <option value={false}>Non Technical</option>\n                            </Input>\n                        </Col>\n                    </Row>\n\n                    <Row className=\"form-group\">\n                        <Label htmlFor=\"institution\" md={3}>\n                            <h4 className=\"font-weight-bold\">Institution</h4>\n                        </Label>\n                        <Col md={9}>\n                            <Input type=\"select\" name=\"institution\" value={this.state.institution} onChange={this.handleInputChange} className=\"w-100\"\n                                disabled={this.props.institutesLoading}\n                             >\n                                <>\n                                {\n                                    (this.props.institutesList) ?\n                                    this.props.institutesList.map((institute) => {\n                                        return (\n                                            <option value={institute.id}>{institute.title}</option>\n                                        );\n                                    })\n                                    :\n                                    <></>\n                                }\n                                </>\n                            </Input>\n                            <AddInstitutionModal isModalOpen={this.state.isModalOpen} setIsModalOpen={(value) => this.setState({isModalOpen: value})} />\n                            <Button color='link' onClick={() => this.setState({isModalOpen: true})} className='mt-2'>Can't find your institute? Click here to add institute.</Button>\n                        </Col>\n                    </Row>\n\n                    <Row className=\"form-group\">\n                        <Label htmlFor=\"dateofachievement\" md={3}>\n                            <h4 className=\"font-weight-bold\">Date of Achievement</h4>\n                        </Label>\n                        <Col md={3} className=\"d-flex\">\n                            <Input type=\"date\"\n                                name=\"dateofachievement\"\n                                value={this.state.dateofachievement}\n                                onChange={this.handleInputChange}\n                                className=\"d-flex my-auto\"\n                                    />\n                        </Col>\n                    </Row>\n\n                    <Row className=\"form-group\">\n                        <Label htmlFor=\"teamInput\" md={3}>\n                            <h4 className=\"font-weight-bold\">Team Members</h4>\n                        </Label>\n                        <Col md={9}>\n                            <Row>\n                            <Col xs={7} md={8} lg={9}>\n                                <Input type=\"email\"\n                                    name=\"teamInput\"\n                                    value={this.state.teamInput}\n                                    onChange={this.handleInputChange}\n                                    placeholder=\"Enter team member's email ID\"\n                                    />\n                                <p className=\"text-danger m-0 px-2\">{this.state.teamInputErr}</p>\n                            </Col>\n                            <Col xs={5} md={4} lg={3} className=\"pl-0\">\n                                <Button color=\"info\" className=\"w-100\" onClick={this.addTeamMember}\n                                    disabled={this.props.studentsLoading\n                                        || this.state.teamAdding}\n                                 >\n                                    Add Member\n                                </Button>\n                            </Col>\n                            <Col xs={12} className=\"mt-1\">\n                                <div className=\"box w-100\">\n                                {\n                                    this.state.team.map((member) => {\n                                        return (\n                                            <div className=\"rounded-pill p-2 pl-3 mr-2 mt-2 bg-color-off-white d-inline-block\">\n                                                {member.user__email}\n                                                <Button className=\"rounded-circle ml-3\"\n                                                    size=\"sm\" color=\"danger\"\n                                                    onClick={() => this.removeFromList('team', member)}\n                                                        >\n                                                    <i className=\"fa fa-times\"></i>\n                                                </Button>\n                                            </div>\n                                        );\n                                    })\n                                }\n                                </div>\n                            </Col>\n                            </Row>\n                        </Col>\n                    </Row>\n\n                    <Row className=\"form-group\">\n                        <Label htmlFor=\"tagsInput\" md={3}>\n                            <h4 className=\"font-weight-bold\">Tags</h4>\n                        </Label>\n                        <Col md={9}>\n                            <Row>\n                            <Col xs={7} md={8} lg={9}>\n                                <Input type=\"email\"\n                                    name=\"tagsInput\"\n                                    value={this.state.tagsInput}\n                                    onChange={this.handleInputChange}\n                                    placeholder=\"Enter tags\"\n                                    />\n                            </Col>\n                            <Col xs={5} md={4} lg={3} className=\"pl-0\">\n                                <Button color=\"info\" className=\"w-100\" onClick={this.addTag}\n                                    disabled={this.props.tagsLoading\n                                        || this.state.tagsAdding}\n                                 >\n                                    Add Tag\n                                </Button>\n                            </Col>\n                            <Col xs={12} className=\"mt-1\">\n                                <div className=\"box w-100\">\n                                {\n                                    this.state.tags.map((tag) => {\n                                        return (\n                                            <div className=\"rounded-pill p-2 pl-3 mr-2 mt-2 bg-color-off-white d-inline-block\">\n                                                {tag.title}\n                                                <Button className=\"rounded-circle ml-3\"\n                                                    size=\"sm\" color=\"danger\"\n                                                    onClick={() => this.removeFromList('tags', tag)}\n                                                        >\n                                                    <i className=\"fa fa-times\"></i>\n                                                </Button>\n                                            </div>\n                                        );\n                                    })\n                                }\n                                </div>\n                            </Col>\n                            </Row>\n                        </Col>\n                    </Row>\n\n                    <Row className=\"form-group\">\n                        <Label md={3}>\n                            <h4 className=\"font-weight-bold\">Proof</h4>\n                        </Label>\n                        <Col md={9}>\n                            <CustomInput type=\"file\" id=\"proof\" name=\"proof\"\n                                onChange={this.handleFileChange}/>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col xs=\"12\">\n                            <Button color=\"success\" className=\"mr-3\"\n                                disabled={this.props.addAchievementPosting}\n                             >\n                                Request for Approval\n                            </Button>\n                            <Button color=\"danger\" onClick={this.clearState}\n                                disabled={this.props.addAchievementPosting}\n                             >\n                                Clear Form\n                            </Button>\n                        </Col>\n\n                        <Col xs=\"12\" className=\"mt-2\">\n                            <h6 className={`${this.props.addAchievementPostingError ? \"text-danger\" : \"text-success\"}`}>\n                                {this.props.addAchievementPostingMessage}\n                            </h6>\n                        </Col>\n                    </Row>\n                </Form>\n            </Container>\n        )\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddAchievement));","// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getStorage } from \"firebase/storage\";\n\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAwOyla1XqbbZvdAOFTyWaNsq5YGN1iAhw\",\n  authDomain: \"achieveiiitd.firebaseapp.com\",\n  projectId: \"achieveiiitd\",\n  storageBucket: \"achieveiiitd.appspot.com\",\n  messagingSenderId: \"791463956386\",\n  appId: \"1:791463956386:web:c0438494432acb8f1c2cfb\",\n  measurementId: \"G-P4TC4E5ET1\"\n};\n\n\n// Initialize Firebase\n\nconst app = initializeApp(firebaseConfig);\nconst storage = getStorage(app)\n\nexport { storage };\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect, withRouter } from 'react-router';\nimport { Container, Row, Col, Label, Button, Form, Input} from 'reactstrap';\n// import Loading from '../../components/Loading';\nimport { fetchStudentsList, fetchProfessorsList, fetchInstitutesList, fetchTagsList, postTag, postNewProject, addProjectPostingSuccess, patchProject } from '../../redux/ActionCreators';\nimport { storage } from '../../firebase';\nimport { ref, uploadBytesResumable, getDownloadURL } from '@firebase/storage';\nimport { AddInstitutionModal } from '../../components/Extras';\n\nconst mapStateToProps = (state) => ({\n    authorized: state.user.authorized,\n    token: state.user.token,\n\n    professorsList: state.forms.professorsList,\n    professorsLoading: state.forms.professorsLoading,\n\n    studentsList: state.forms.studentsList,\n    studentsLoading: state.forms.studentsLoading,\n\n    institutesList: state.forms.institutesList,\n    institutesLoading: state.forms.institutesLoading,\n\n    tagsList: state.forms.tagsList,\n    tagsLoading: state.forms.tagsLoading,\n\n    addProjectPosting: state.forms.addProjectPosting,\n    addProjectPostingError: state.forms.addProjectPostingError,\n    addProjectPostingMessage: state.forms.addProjectPostingMessage\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    fetchStudentsList: (key) => dispatch(fetchStudentsList(key)),\n    fetchProfessorsList: (key) => dispatch(fetchProfessorsList(key)),\n    fetchInstitutesList: (key) => dispatch(fetchInstitutesList(key)),\n    fetchTagsList: (key) => dispatch(fetchTagsList(key)),\n    postNewProject: (key, stateObj, clearFunction) => dispatch(postNewProject(key, stateObj, clearFunction)),\n    patchProject: (key, stateObj, clearFunction, projectId) => dispatch(patchProject(key, stateObj, clearFunction, projectId)),\n    addProjectPostingMessageClear: () => dispatch(addProjectPostingSuccess('')),\n    postTag: (key, tag, callback, errorFunction) => dispatch(postTag(key, tag, callback, errorFunction))\n})\n\nconst initialState = {\n    title: '',\n    description: '',\n    institution: 1,\n    startdate: '',\n    enddate: '',\n    field: '',\n    domain: '',\n    mentors: [],\n    mentorsInput: '',\n    mentorAdding: false,\n    mentorsInputErr: '',\n    team: [],\n    teamInput: '',\n    teamAdding: false,\n    teamInputErr: '',\n    tags: [],\n    tagsInput: '',\n    tagsAdding: false,\n    tagsInputErr: '',\n    category: 0,\n    type: false,\n    url: null,\n    file: null,\n    progress: 0,\n    isModalOpen: false\n}\n\nclass AddProject extends Component {\n    constructor(props) {\n        super(props);\n        this.state = initialState\n        if(props.edit) {\n            this.state.title = props.projectDetails.title\n            this.state.description = props.projectDetails.description\n            this.state.institution = props.projectDetails.institution\n            this.state.startdate = props.projectDetails.startDate\n            this.state.enddate = props.projectDetails.endDate\n            this.state.field = props.projectDetails.field\n            this.state.domain = props.projectDetails.domain\n            this.state.url = props.projectDetails.url\n            if(props.projectDetails.tags)\n                this.state.tags = props.projectDetails.tags\n            if(props.projectDetails.mentors)\n                this.state.mentors = props.projectDetails.mentors\n            if(props.projectDetails.members)\n                this.state.members = props.projectDetails.members\n        }\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.addTeamMember = this.addTeamMember.bind(this);\n        this.addMentor = this.addMentor.bind(this);\n        this.addTag = this.addTag.bind(this);\n        this.addTeamMember = this.addTeamMember.bind(this);\n        this.removeFromList = this.removeFromList.bind(this);\n        this.clearState = this.clearState.bind(this);\n        this.handleUpload = this.handleUpload.bind(this);\n        this.handleFileChange = this.handleFileChange.bind(this);\n    }\n\n    clearState() {\n        this.setState(initialState);\n    }\n\n    handleFileChange(event) {\n        if(event.target.files[0]) {\n            this.setState({\n                file : event.target.files[0]\n            })\n        }\n    }\n\n    handleInputChange(event) {\n        const target = event.target\n        const value = target.value\n        const name = target.name\n\n        this.setState({\n            [name] : value,\n            [name+\"Err\"] : '',\n        })\n\n        if(this.props.addProjectPostingMessage)\n            this.props.addProjectPostingMessageClear();\n    }\n\n    handleUpload() {\n        console.log(this.state.file)\n        const storageRef = ref(storage, `proofs/projects/${this.state.file.name}`)\n        const uploadTask = uploadBytesResumable(storageRef, this.state.file)\n\n        uploadTask.on(\n            \"state_changed\",\n            snapshot => {\n              const progress = Math.round(\n                (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n              );\n              this.setState({\n                progress: progress\n              })\n            },\n            error => {\n              console.log(error);\n            },\n            () => {\n                // Upload completed successfully, now we can get the download URL\n                getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n                    console.log('File available at', downloadURL);\n                    this.setState({\n                        proof: downloadURL\n                    })\n                });\n            }\n        );\n    }\n\n    handleSubmit(event) {\n        console.log('Submit detected.')\n        if(this.props.edit)\n            this.props.patchProject(this.props.token, this.state, this.clearState, this.props.projectDetails.id);\n        else\n            this.props.postNewProject(this.props.token, this.state, this.clearState);\n        event.preventDefault();\n    }\n\n    componentDidMount() {\n        if(!this.props.professorsLoading && !this.props.professorsList)\n            this.props.fetchProfessorsList(this.props.token)\n        if(!this.props.studentsLoading && !this.props.studentsList)\n            this.props.fetchStudentsList(this.props.token)\n        if(!this.props.tagsLoading && !this.props.tagsList)\n            this.props.fetchTagsList(this.props.token)\n        if(!this.props.institutesLoading && !this.props.institutesList)\n            this.props.fetchInstitutesList(this.props.token)\n    }\n\n    addTeamMember() {\n        this.setState({teamAdding: true})\n        var studentObj = this.props.studentsList.find(student => student.user__email === this.state.teamInput)\n        var validation = studentObj !== undefined\n        console.log(this.props.studentsList)\n\n        if(validation && this.state.team.indexOf(studentObj) === -1) {\n            this.setState({\n                team: [...this.state.team, studentObj],\n                teamInput: ''\n            })\n        }\n        else if (this.state.team.indexOf(studentObj) !== -1) {\n            this.setState({\n                teamInputErr : 'Team member already added!'\n            })\n        }\n        else {\n            this.setState({\n                teamInputErr : 'No such student found in our database!'\n            })\n        }\n        this.setState({teamAdding: false})\n    }\n\n    addMentor() {\n        this.setState({mentorAdding: true})\n        var profObj = this.props.professorsList.find(prof => prof.user__email === this.state.mentorsInput)\n        var validation = profObj !== undefined\n\n        if(validation && this.state.mentors.indexOf(profObj) === -1) {\n            this.setState({\n                mentors: [...this.state.mentors, profObj],\n                mentorsInput: ''\n            })\n        }\n        else if (this.state.mentors.indexOf(profObj) !== -1) {\n            this.setState({\n                mentorsInputErr : 'Mentor already added!'\n            })\n        }\n        else {\n            this.setState({\n                mentorsInputErr : 'No such mentor found in our database!'\n            })\n        }\n        this.setState({mentorAdding: false})\n    }\n\n    capitalize(input) {\n        return input.split(' ').map(s => s.charAt(0).toUpperCase() + s.substring(1)).join(' ');\n    }\n\n    addTag() {\n        this.setState({tagsAdding: true})\n        var tagObj = this.props.tagsList.find(tag => tag.title.toUpperCase() === this.state.tagsInput.toUpperCase())\n        var validation = tagObj !== undefined\n        var processing = false\n\n        console.log(this.props.tagsList, this.state.tagsInput, tagObj)\n\n        if(validation && this.state.tags.indexOf(tagObj) === -1) {\n            this.setState({\n                tags: [...this.state.tags, tagObj],\n                tagsInput: ''\n            })\n        }\n        else if (this.state.tags.indexOf(tagObj) !== -1) {\n            this.setState({\n                tagsInput : 'Tag Already Added!'\n            })\n        }\n        else {\n            processing = true\n            this.props.postTag(this.props.token, this.capitalize(this.state.tagsInput),\n            (tagObj) => {\n                this.setState({\n                    tags: [...this.state.tags, tagObj],\n                    tagsInput : '',\n                    tagsAdding: false\n                })\n            }\n            , (message) => {\n                this.setState({\n                    tagsInputErr: message,\n                    tagsAdding: false\n                })\n            })\n        }\n        if (!processing) this.setState({tagsAdding: false})\n    }\n\n    removeFromList(listName, item) {\n        let list = this.state[listName]\n        let ind = list.indexOf(item);\n        list.splice(ind, 1)\n        this.setState({\n            [listName]: list\n        })\n    }\n\n    render(){\n        if(!this.props.authorized)\n            return (\n                <Redirect to=\"/login\" />\n            )\n        return(\n            <Container className=\"my-5 bg-color-lightest-grey p-4 p-md-5 rounded-3\">\n                <h2 className=\"font-weight-bold text-center\">{(this.props.edit ? 'Edit' : 'Add')} Project</h2>\n                <Form className=\"mt-5\" onSubmit={this.handleSubmit}>\n                    <Row className=\"form-group\">\n                        <Label htmlFor=\"title\" md={3}>\n                            <h4 className=\"font-weight-bold\">Title</h4>\n                        </Label>\n                        <Col md={9}>\n                            <Input type=\"text\"\n                                value={this.state.title}\n                                onChange={this.handleInputChange}\n                                name=\"title\"\n                                placeholder=\"Enter title\"\n                                className=\"w-100\"\n                                    />\n                        </Col>\n                    </Row>\n\n                    <Row className=\"form-group\">\n                        <Label htmlFor=\"description\" md={3}>\n                            <h4 className=\"font-weight-bold\">Description</h4>\n                        </Label>\n                        <Col md={9}>\n                            <Input type=\"textarea\"\n                                value={this.state.description}\n                                onChange={this.handleInputChange}\n                                name=\"description\"\n                                placeholder=\"Enter description\"\n                                className=\"w-100 px-2\"\n                                    />\n                        </Col>\n                    </Row>\n\n                    <Row className=\"form-group\">\n                        <Label htmlFor=\"description\" md={3}>\n                            <h4 className=\"font-weight-bold\">URL</h4>\n                        </Label>\n                        <Col md={9}>\n                            <Input type=\"text\"\n                                value={this.state.url}\n                                onChange={this.handleInputChange}\n                                name=\"url\"\n                                placeholder=\"Enter URL\"\n                                className=\"w-100 px-2\"\n                                    />\n                        </Col>\n                    </Row>\n\n                    <Row className=\"form-group\">\n                        <Label htmlFor=\"institution\" md={3}>\n                            <h4 className=\"font-weight-bold\">Institution</h4>\n                        </Label>\n                        <Col md={9}>\n                            <Input type=\"select\" name=\"institution\" value={this.state.institution} onChange={this.handleInputChange} className=\"w-100\"\n                                disabled={this.props.institutesLoading}\n                             >\n                                <>\n                                {\n                                    (this.props.institutesList) ?\n                                    this.props.institutesList.map((institute) => {\n                                        return (\n                                            <option value={institute.id}>{institute.title}</option>\n                                        );\n                                    })\n                                    :\n                                    <></>\n                                }\n                                </>\n                            </Input>\n                            <AddInstitutionModal isModalOpen={this.state.isModalOpen} setIsModalOpen={(value) => this.setState({isModalOpen: value})} />\n                            <Button color='link' onClick={() => this.setState({isModalOpen: true})} className='mt-2'>Can't find your institute? Click here to add institute.</Button>\n                        </Col>\n                    </Row>\n\n                    <Row className=\"form-group\">\n                        <Label htmlFor=\"startdate\" md={3}>\n                            <h4 className=\"font-weight-bold\">Duration</h4>\n                        </Label>\n                        <Col md={3} className=\"d-flex\">\n                            <Input type=\"date\"\n                                name=\"startdate\"\n                                value={this.state.startdate}\n                                onChange={this.handleInputChange}\n                                className=\"d-flex my-auto\"\n                                    />\n                        </Col>\n                        <Label htmlFor=\"enddate\" md={1} className=\"d-flex\">\n                            <h4 className=\"font-weight-bold d-flex m-auto\">to</h4>\n                        </Label>\n                        <Col md={3} className=\"d-flex\">\n                            <Input type=\"date\"\n                                name=\"enddate\"\n                                value={this.state.enddate}\n                                onChange={this.handleInputChange}\n                                className=\"d-flex my-auto\"\n                                    />\n                        </Col>\n                    </Row>\n\n                    <Row className=\"form-group\">\n                        <Label htmlFor=\"field\" md={3}>\n                            <h4 className=\"font-weight-bold\">Field</h4>\n                        </Label>\n                        <Col md={3} className=\"d-flex\">\n                            <Input type=\"text\"\n                                name=\"field\"\n                                value={this.state.field}\n                                placeholder=\"Enter field\"\n                                onChange={this.handleInputChange}\n                                className=\"d-flex my-auto\"\n                                    />\n                        </Col>\n                        <Label htmlFor=\"domain\" md={3} className=\"d-flex\">\n                            <h4 className=\"font-weight-bold d-md-flex m-md-auto\">Domain</h4>\n                        </Label>\n                        <Col md={3} className=\"d-flex\">\n                            <Input type=\"text\"\n                                name=\"domain\"\n                                value={this.state.domain}\n                                placeholder=\"Enter domain\"\n                                onChange={this.handleInputChange}\n                                className=\"d-flex my-auto\"\n                                    />\n                        </Col>\n                    </Row>\n\n                    <Row className=\"form-group\">\n                        <Label htmlFor=\"mentorsInput\" md={3}>\n                            <h4 className=\"font-weight-bold\">Mentors</h4>\n                        </Label>\n                        <Col md={9}>\n                            <Row>\n                            <Col xs={7} md={8} lg={9}>\n                                <Input type=\"email\"\n                                    name=\"mentorsInput\"\n                                    value={this.state.mentorsInput}\n                                    onChange={this.handleInputChange}\n                                    placeholder=\"Enter mentor's email ID\"\n                                    />\n                                <p className=\"text-danger m-0 px-2\">{this.state.mentorsInputErr}</p>\n                            </Col>\n                            <Col xs={5} md={4} lg={3} className=\"pl-0\">\n                                <Button color=\"info\" className=\"w-100\"\n                                    onClick={this.addMentor}\n                                    disabled={this.props.professorsLoading\n                                        || this.state.mentorAdding}\n                                    >\n                                    Add Mentor\n                                </Button>\n                            </Col>\n                            <Col xs={12} className=\"mt-1\">\n                                <div className=\"box w-100\">\n                                {\n                                    this.state.mentors.map((mentor) => {\n                                        return (\n                                            <div className=\"rounded-pill p-2 pl-3 mr-2 mt-2 bg-color-off-white d-inline-block\">\n                                                {mentor.user__email}\n                                                <Button className=\"rounded-circle ml-3\"\n                                                    size=\"sm\" color=\"danger\"\n                                                    onClick={() => this.removeFromList('mentors', mentor)}\n                                                        >\n                                                    <i className=\"fa fa-times\"></i>\n                                                </Button>\n                                            </div>\n                                        );\n                                    })\n                                }\n                                </div>\n                            </Col>\n                            </Row>\n                        </Col>\n\n                    </Row>\n\n                    <Row className=\"form-group\">\n                        <Label htmlFor=\"teamInput\" md={3}>\n                            <h4 className=\"font-weight-bold\">Team Members</h4>\n                        </Label>\n                        <Col md={9}>\n                            <Row>\n                            <Col xs={7} md={8} lg={9}>\n                                <Input type=\"email\"\n                                    name=\"teamInput\"\n                                    value={this.state.teamInput}\n                                    onChange={this.handleInputChange}\n                                    placeholder=\"Enter team member's email ID\"\n                                    />\n                                <p className=\"text-danger m-0 px-2\">{this.state.teamInputErr}</p>\n                            </Col>\n                            <Col xs={5} md={4} lg={3} className=\"pl-0\">\n                                <Button color=\"info\" className=\"w-100\" onClick={this.addTeamMember}\n                                    disabled={this.props.studentsLoading\n                                        || this.state.teamAdding}\n                                 >\n                                    Add Member\n                                </Button>\n                            </Col>\n                            <Col xs={12} className=\"mt-1\">\n                                <div className=\"box w-100\">\n                                {\n                                    this.state.team.map((member) => {\n                                        return (\n                                            <div className=\"rounded-pill p-2 pl-3 mr-2 mt-2 bg-color-off-white d-inline-block\">\n                                                {member.user__email}\n                                                <Button className=\"rounded-circle ml-3\"\n                                                    size=\"sm\" color=\"danger\"\n                                                    onClick={() => this.removeFromList('team', member)}\n                                                        >\n                                                    <i className=\"fa fa-times\"></i>\n                                                </Button>\n                                            </div>\n                                        );\n                                    })\n                                }\n                                </div>\n                            </Col>\n                            </Row>\n                        </Col>\n                    </Row>\n\n                    <Row className=\"form-group\">\n                        <Label htmlFor=\"tagsInput\" md={3}>\n                            <h4 className=\"font-weight-bold\">Tags</h4>\n                        </Label>\n                        <Col md={9}>\n                            <Row>\n                            <Col xs={7} md={8} lg={9}>\n                                <Input type=\"email\"\n                                    name=\"tagsInput\"\n                                    value={this.state.tagsInput}\n                                    onChange={this.handleInputChange}\n                                    placeholder=\"Enter tags\"\n                                    />\n                            </Col>\n                            <Col xs={5} md={4} lg={3} className=\"pl-0\">\n                                <Button color=\"info\" className=\"w-100\" onClick={this.addTag}\n                                    disabled={this.props.tagsLoading\n                                        || this.state.tagsAdding}\n                                 >\n                                    Add Tag\n                                </Button>\n                            </Col>\n                            <Col xs={12} className=\"mt-1\">\n                                <div className=\"box w-100\">\n                                {\n                                    this.state.tags.map((tag) => {\n                                        return (\n                                            <div className=\"rounded-pill p-2 pl-3 mr-2 mt-2 bg-color-off-white d-inline-block\">\n                                                {tag.title}\n                                                <Button className=\"rounded-circle ml-3\"\n                                                    size=\"sm\" color=\"danger\"\n                                                    onClick={() => this.removeFromList('tags', tag)}\n                                                        >\n                                                    <i className=\"fa fa-times\"></i>\n                                                </Button>\n                                            </div>\n                                        );\n                                    })\n                                }\n                                </div>\n                            </Col>\n                            </Row>\n                        </Col>\n                    </Row>\n\n                    {/* <Row className=\"form-group\">\n                        <Label md={3}>\n                            <h4 className=\"font-weight-bold\">Proof</h4>\n                        </Label>\n                        <Col md={9}>\n                            <Row>\n                            <Col xs={7} md={8} lg={9}>\n                                <CustomInput type=\"file\" id=\"proof\" name=\"proof\"\n                                    onChange={this.handleFileChange}/>\n\n                                <Progress multi\n                                    className={`mt-2`}>\n                                    <Progress bar animated color=\"success\"\n                                        value={this.state.progress} />\n                                </Progress>\n                            </Col>\n                            <Col xs={5} md={4} lg={3} className=\"pl-0\">\n                                <Button className=\"w-100\"\n                                    color={(this.state.proof) ? \"success\" :\"info\"}\n                                    disabled={this.state.proof || !this.state.file ? true : false}\n                                    onClick={this.handleUpload}\n                                >\n                                    {(this.state.proof) ?\n                                        <i className=\"fa fa-check w-100 text-center\" aria-hidden=\"true\"></i>\n                                    :\n                                        <>Upload</>\n                                    }\n                                </Button>\n                            </Col>\n                            </Row>\n                        </Col>\n                    </Row> */}\n\n                    <Row>\n                        <Col xs=\"12\">\n                            <Button color=\"success\" className=\"mr-3\"\n                                disabled={this.props.addProjectPosting}\n                             >\n                                Request for Approval\n                            </Button>\n                            <Button color=\"danger\" onClick={this.clearState}\n                                disabled={this.props.addProjectPosting}\n                             >\n                                Clear Form\n                            </Button>\n                        </Col>\n\n                        <Col xs=\"12\" className=\"mt-2\">\n                            <h6 className={`${this.props.addProjectPostingError ? \"text-danger\" : \"text-success\"}`}>\n                                {this.props.addProjectPostingMessage}\n                            </h6>\n                        </Col>\n                    </Row>\n                </Form>\n            </Container>\n        )\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddProject));","import React from 'react';\nimport { Table, Button } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { ApprovedBadge } from '../components/Extras'\n\nfunction AchievementsTable({arrayOfAchievements, deleteAchievement, token}) {\n    return (\n        <Table hover responsive className=\"rounded-2\">\n            <thead>\n                <tr>\n                <th className=\"text-color-main h5\">#</th>\n                <th className=\"text-color-main h5\">Title</th>\n                <th className=\"text-color-main h5\">Description</th>\n                <th className=\"text-color-main h5\">Status</th>\n                <th className=\"text-color-main h5\">Date</th>\n                <th className=\"text-color-main h5\">Details</th>\n                <th className=\"text-color-main h5\">Edit</th>\n                <th className=\"text-color-main h5\">Delete</th>\n                </tr>\n            </thead>\n            <tbody>\n                {\n                    arrayOfAchievements.map((achievement) => {\n                        return (\n                            <tr>\n                            <th scope=\"row\">{achievement.id}</th>\n                            <td>{achievement.title}</td>\n                            <td>{achievement.description}</td>\n                            <td><h5><ApprovedBadge value={achievement.approved} /></h5></td>\n                            <td>{new Date(achievement.achievedDate).toLocaleString('default', {day: \"2-digit\", month: 'short', year: \"numeric\" })}</td>\n                            <td>\n                                <Link to={\"/achievement/\"+achievement.id}>\n                                <Button color=\"info\" >View</Button>\n                                </Link>\n                            </td>\n                            <td>\n                                <Link to={\"/editachievement/\"+achievement.id}>\n                                <Button color=\"secondary\"\n                                disabled={achievement.approved.toLowerCase() === 'approved'} >Edit</Button>\n                                </Link>\n                            </td>\n                            <td>\n                                <Button\n                                    onClick={() => deleteAchievement(token, achievement.id)}\n                                    color=\"danger\"\n                                    className=\"w-100\"\n                                    disabled={achievement.deleting || achievement.deleted}\n                                >\n                                    {\n                                        (achievement.deleted) ? \n                                            <i className=\"fa fa-check w-100 text-center\" aria-hidden=\"true\"></i>\n                                        :\n                                        <>Delete</>\n                                    }\n                                </Button>\n                            </td>\n                            </tr>\n                        )\n                    })\n                }\n            </tbody>\n        </Table>\n    );\n}\n\n\nfunction ProjectsTable({arrayofProjects, deleteProject, token}) {\n    return (\n        <Table hover responsive className=\"rounded-2\">\n            <thead>\n                <tr>\n                <th className=\"text-color-main h5\">#</th>\n                <th className=\"text-color-main h5\">Title</th>\n                <th className=\"text-color-main h5\">Description</th>\n                <th className=\"text-color-main h5\">Status</th>\n                <th className=\"text-color-main h5\">Start Date</th>\n                <th className=\"text-color-main h5\">End Date</th>\n                <th className=\"text-color-main h5\">Details</th>\n                <th className=\"text-color-main h5\">Edit</th>\n                <th className=\"text-color-main h5\">Delete</th>\n                </tr>\n            </thead>\n            <tbody>\n                {\n                    arrayofProjects.map((project) => {\n                        return (\n                            <tr>\n                            <th scope=\"row\">{project.id}</th>\n                            <td>{project.title}</td>\n                            <td>{project.description}</td>\n                            <td><h5><ApprovedBadge value={project.approved} /></h5></td>\n                            <td>{new Date(project.startDate).toLocaleString('default', {day: \"2-digit\", month: 'short', year: \"numeric\" })}</td>\n                            <td>{new Date(project.endDate).toLocaleString('default', {day: \"2-digit\", month: 'short', year: \"numeric\" })}</td>\n                            <td>\n                                <Link to={\"/project/\"+project.id}>\n                                <Button color=\"info\" >View</Button>\n                                </Link>\n                            </td>\n                            <td>\n                                <Link to={\"/editproject/\"+project.id}>\n                                <Button color=\"secondary\"\n                                disabled={project.approved.toLowerCase() === 'approved'} >Edit</Button>\n                                </Link>\n                            </td>\n                            <td>\n                                <Button\n                                    onClick={() => deleteProject(token, project.id)}\n                                    color=\"danger\"\n                                    className=\"w-100\"\n                                    disabled={project.deleting || project.deleting}\n                                >\n                                    {\n                                        (project.deleted) ?\n                                            <i className=\"fa fa-check w-100 text-center\" aria-hidden=\"true\"></i>\n                                        :\n                                            <>Delete</>\n                                    }\n                                </Button>\n                            </td>\n                            </tr>\n                        )\n                    })\n                }\n            </tbody>\n        </Table>\n    );\n}\n\nexport {AchievementsTable, ProjectsTable};","import React from 'react';\nimport { Redirect, withRouter } from 'react-router';\nimport { Container, Row, Col } from 'reactstrap';\nimport { AchievementsTable } from '../../components/Tables';\nimport { connect } from 'react-redux';\nimport { deleteAchievement, fetchUserAchievements} from '../../redux/ActionCreators';\nimport Loading from '../../components/Loading';\n\nconst mapStateToProps = (state) => ({\n    authorized: state.user.authorized,\n    token: state.user.token,\n    achievements: state.user.achievements,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    fetchUserAchievements: (key) => dispatch(fetchUserAchievements(key)),\n    deleteAchievement: (key, achievementId) => dispatch(deleteAchievement(key, achievementId))\n})\n\nfunction MyAchievements(props) {\n    if(!props.authorized)\n        return (\n            <Redirect to=\"/login\" />\n        );\n    if(!props.achievements) {\n        props.fetchUserAchievements(props.token);\n    }\n    console.log(props.token)\n\n    return (\n        <Container className=\"p-4 p-md-5 mt-4 mb-4 bg-color-lightest-grey rounded-3\">\n            <Row>\n                <Col xs=\"12 text-center\">\n                    <h2 className=\"font-weight-bold\">My Achievements</h2>\n                </Col>\n            </Row>\n\n            <Row className=\"mt-5\">\n                <Col xs=\"12\" className=\"bg-color-off-white rounded-2\">\n                    {\n                    props.achievements ? \n                        <AchievementsTable \n                            arrayOfAchievements={props.achievements}\n                            deleteAchievement={props.deleteAchievement}\n                            token={props.token}\n                            />\n                    :\n                        <Loading />\n                    }\n                </Col>\n            </Row>\n\n            {/* <Row className=\"mt-3\">\n                <Col xs=\"12 my-3\">\n                    <h3>Approved By Admin</h3>\n                </Col>\n                <Col xs=\"12\" className=\"bg-color-off-white rounded-2\">\n                    <Approved arrayOfAchievements={approveAchivements} />\n                </Col>\n            </Row> */}\n        </Container>\n    )\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(MyAchievements));","import React from 'react';\nimport { Redirect, withRouter } from 'react-router';\nimport { Container, Row, Col } from 'reactstrap';\nimport { ProjectsTable } from '../../components/Tables';\nimport { connect } from 'react-redux';\nimport { deleteProject, fetchUserProjects } from '../../redux/ActionCreators';\nimport Loading from '../../components/Loading';\n\nconst mapStateToProps = (state) => ({\n    authorized: state.user.authorized,\n    token: state.user.token,\n    projects: state.user.projects,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    fetchUserProjects: (key) => dispatch(fetchUserProjects(key)),\n    deleteProject: (key, projectId) => dispatch(deleteProject(key, projectId))\n})\n\nfunction MyAchievements(props) {\n    if(!props.authorized)\n        return (\n            <Redirect to=\"/login\" />\n        );\n    if(!props.projects) {\n        props.fetchUserProjects(props.token);\n    }\n\n    return (\n        <Container className=\"p-4 p-md-5 mt-4 mb-4 bg-color-lightest-grey rounded-3\">\n            <Row>\n                <Col xs=\"12 text-center\">\n                    <h2 className=\"font-weight-bold\">My Projects</h2>\n                </Col>\n            </Row>\n\n            <Row className=\"mt-5\">\n                <Col xs=\"12\" className=\"bg-color-off-white rounded-2\">\n                {\n                    props.projects ?\n                        <ProjectsTable\n                            arrayofProjects={props.projects}\n                            deleteProject={props.deleteProject}\n                            token={props.token}\n                            />\n                    :\n                        <Loading />\n                }\n                </Col>\n            </Row>\n\n            {/* <Row className=\"mt-3\">\n                <Col xs=\"12 my-3\">\n                    <h3>Approved By Admin</h3>\n                </Col>\n                <Col xs=\"12\" className=\"bg-color-off-white rounded-2\">\n                    <Approved arrayOfAchievements={approveAchivements} />\n                </Col>\n            </Row> */}\n        </Container>\n    )\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(MyAchievements));","import React, {useEffect, useState} from 'react';\nimport { Container, Row, Col, Badge, Button } from 'reactstrap';\nimport { Redirect, useParams, withRouter } from \"react-router\";\nimport { connect } from 'react-redux';\nimport { ApprovedBadge, RenderUser } from '../../components/Extras';\nimport Loading from '../../components/Loading';\nimport NotFound from '../../components/NotFound'\nimport { fetchAchievement } from '../../redux/ActionCreators';\nimport { baseUrl_ } from '../../shared/baseUrl';\n\nconst mapStateToProps = (state) => ({\n    authorized: state.user.authorized,\n    token: state.user.token,\n})\n\nfunction Achievement (props) {\n    const [loading, setLoading] = useState(false);\n    const [errorMessage, setErrorMessage] = useState(false);\n    const [achievementDetails, setAchievementDetails] = useState(false);\n    const {achievementId} = useParams();\n    useEffect(() => {\n        if(!loading && !errorMessage && !achievementDetails) {\n            setLoading(true);\n            fetchAchievement(props.token, achievementId, setAchievementDetails, setLoading, setErrorMessage);\n        }\n    }, [loading, errorMessage, achievementDetails, props, achievementId])\n\n    if(errorMessage)\n        return (\n            <NotFound />\n        );\n\n    return (\n        <Container className=\"p-3 p-md-4 p-lg-5 mt-4 mb-4 bg-color-lightest-grey rounded-3\">\n        {\n        (!props.authorized) ?\n        (\n            <Redirect to=\"/login\" />\n        ) :\n        (loading) ?\n        (\n            <Loading />\n        ) :\n        (\n            <>\n            <Row className=\"mb-5\">\n                <Col xs={8} md={10} className=\"d-flex\">\n                    <h2 className=\"d-flex d-md-none m-auto font-weight-bold\">Achievement</h2>\n                    <h1 className=\"d-none d-md-flex m-auto font-weight-bold\">Achievement</h1>\n                </Col>\n\n                <Col xs={4} md={2} className=\"d-flex\">\n                    <img src=\"/assets/medal.png\" alt=\"Medal\" className=\"d-flex m-auto\"\n                        style={{maxHeight: \"100%\", maxWidth: \"100%\"}} />\n                </Col>\n            </Row>\n\n            <Row className=\"mt-3\">\n                <Col md={4}>\n                    <h3>AID</h3>\n                </Col>\n                <Col md={8}>\n                    <p className=\"h4 text-black\">{achievementDetails.id}</p>\n                </Col>\n            </Row>\n\n            <Row className=\"mt-3\">\n                <Col md={4}>\n                    <h3 className=\"text-color-main\">Status</h3>\n                </Col>\n                <Col md={8}>\n                    <h3><ApprovedBadge value={achievementDetails.approved} /></h3>\n                </Col>\n            </Row>\n\n            {/* <Row className={`${achievementDetails.approvedBy ? \"d-block\" : \"d-none\"} mt-3`}>\n                <Col md={4}>\n                    <h3 className=\"text-color-main\">Approved By</h3>\n                </Col>\n                <Col md={8}>\n                <p className=\"h4 text-black\">{achievementDetails.approvedBy}</p>\n                </Col>\n            </Row> */}\n\n            <Row className=\"mt-3\">\n                <Col md={4}>\n                    <h3 className=\"text-color-main\">Title</h3>\n                </Col>\n                <Col md={8}>\n                <p className=\"h4 text-black\">{achievementDetails.title}</p>\n                </Col>\n            </Row>\n\n            <Row className=\"mt-3\">\n                <Col md={4}>\n                    <h3 className=\"text-color-main\">Institution</h3>\n                </Col>\n                <Col md={8}>\n                <p className=\"h4 text-black\">{(achievementDetails.institution) ? achievementDetails.institution.title : \"\"}</p>\n                </Col>\n            </Row>\n\n            <Row className=\"mt-3\">\n                <Col md={4}>\n                    <h3 className=\"text-color-main\">Added By</h3>\n                </Col>\n                <Col md={8}>\n                    <RenderUser user={achievementDetails.addedBy} />\n                </Col>\n            </Row>\n\n            <Row className={`mt-3`}>\n                <Col md={4}>\n                    <h3 className=\"text-color-main\">Team Members</h3>\n                </Col>\n                <Col md={8}>\n                <p className=\"h4 text-black\">\n                    {(achievementDetails.members && achievementDetails.members.length > 0) ?(\n                        achievementDetails.members.map((member) => {\n                            return (\n                                <RenderUser user={member} />\n                            );\n                        })\n                    )\n                    :\n                    (\n                        <>None</>\n                    )}\n                </p>\n                </Col>\n            </Row>\n\n            <Row className={`mt-3`}>\n                <Col md={4}>\n                    <h3 className=\"text-color-main\">Mentors</h3>\n                </Col>\n                <Col md={8}>\n                <p className=\"h4 text-black\">\n                    {(achievementDetails.mentors && achievementDetails.mentors.length > 0) ?(\n                        achievementDetails.mentors.map((mentor) => {\n                            return (\n                                <RenderUser user={mentor} />\n                            );\n                        })\n                    )\n                    :\n                    (\n                        <>None</>\n                    )}\n                </p>\n                </Col>\n            </Row>\n\n            <Row className=\"mt-3\">\n                <Col md={4}>\n                    <h3 className=\"text-color-main\">Description</h3>\n                </Col>\n                <Col md={8}>\n                <p className=\"h4 text-black\">{achievementDetails.description}</p>\n                </Col>\n            </Row>\n\n            <Row className=\"mt-3\">\n                <Col md={4}>\n                    <h3 className=\"text-color-main\">Technical</h3>\n                </Col>\n                <Col md={8}>\n                <p className=\"h4 text-black\">{achievementDetails.technical ? \"Yes\" : \"No\"}</p>\n                </Col>\n            </Row>\n\n            <Row className=\"mt-3\">\n                <Col md={4}>\n                    <h3 className=\"text-color-main\">Date Created</h3>\n                </Col>\n                <Col md={8}>\n                <p className=\"h4 text-black\">{new Date(achievementDetails.dateCreated).toLocaleString('default', {day: \"2-digit\", month: 'short', year: \"numeric\" })}</p>\n                </Col>\n            </Row>\n\n            <Row className=\"mt-3\">\n                <Col md={4}>\n                    <h3 className=\"text-color-main\">Date Achieved</h3>\n                </Col>\n                <Col md={8}>\n                <p className=\"h4 text-black\">{new Date(achievementDetails.achievedDate).toLocaleString('default', {day: \"2-digit\", month: 'short', year: \"numeric\" })}</p>\n                </Col>\n            </Row>\n\n            <Row className={`mt-3`}>\n                <Col md={4}>\n                    <h3 className=\"text-color-main\">Tags</h3>\n                </Col>\n                <Col md={8}>\n                <p className=\"h4 text-black\">\n                    {(achievementDetails.tags && achievementDetails.tags.length > 0) ?(\n                        achievementDetails.tags.map((tag) => {\n                            return (\n                                <Badge color=\"info\" pill className=\"mr-2 mb-2\">{tag.title}</Badge>\n                            );\n                        })\n                    )\n                    :\n                    (\n                        <>None</>\n                    )}\n                </p>\n                </Col>\n            </Row>\n\n            <Row className=\"mt-3\">\n                <Col md={4}>\n                    <h3 className=\"text-color-main\">Proof</h3>\n                </Col>\n                <Col md={8}>\n                    {\n                        (achievementDetails.files) ?\n                        achievementDetails.files.map((file) => {\n                            return (\n                            <a href={baseUrl_ + file.file} target='_blank' rel=\"noreferrer\">\n                                <Button>View Proof</Button>\n                            </a>\n                            )\n                        })\n                        :\n                        <>\n                        <p className=\"h4 text-black\">Not Available</p>\n                        </>\n                    }\n                </Col>\n            </Row>\n\n            <Row className={`mt-3 ${achievementDetails.feedback ? \"\" : \"d-none\"}`}>\n                <Col md={4}>\n                    <h3 className=\"text-color-main\">Feedback by admin</h3>\n                </Col>\n                <Col md={8}>\n                <p className=\"h4 text-black\">\n                    {achievementDetails.feedback}\n                </p>\n                </Col>\n            </Row>\n\n            </>\n        )\n        }\n        </Container>\n    );\n}\n\nexport default  withRouter(connect(mapStateToProps)(Achievement));","import React, {useEffect, useState} from 'react';\nimport { Container, Row, Col, Badge, Button } from 'reactstrap';\nimport { Redirect, useParams, withRouter } from \"react-router\";\nimport { connect } from 'react-redux';\nimport { ApprovedBadge, RenderUser } from '../../components/Extras';\nimport Loading from '../../components/Loading';\nimport NotFound from '../../components/NotFound';\nimport { fetchProject } from '../../redux/ActionCreators';\n\nconst mapStateToProps = (state) => ({\n    authorized: state.user.authorized,\n    token: state.user.token,\n})\n\nfunction Project (props) {\n    const [loading, setLoading] = useState(false);\n    const [errorMessage, setErrorMessage] = useState(false);\n    const [projectDetails, setProjectDetails] = useState(false);\n    const {projectId} = useParams();\n    useEffect(() => {\n        if(!loading && !errorMessage && !projectDetails) {\n            setLoading(true);\n            fetchProject(props.token, projectId, setProjectDetails, setLoading, setErrorMessage);\n        }\n    }, [loading, errorMessage, projectDetails, projectId, props.token])\n\n    if(errorMessage)\n        return (\n            <NotFound />\n        );\n\n    return (\n        <Container className=\"p-3 p-md-4 p-lg-5 mt-4 mb-4 bg-color-lightest-grey rounded-3\">\n        {\n        (!props.authorized) ?\n        (\n            <Redirect to=\"/login\" />\n        ) :\n        (loading) ?\n        (\n            <Loading />\n        ) :\n        (\n            <>\n            <Row className=\"mb-5\">\n                <Col xs={8} md={10} className=\"d-flex\">\n                    <h1 className=\"d-flex m-auto font-weight-bold\">Project</h1>\n                </Col>\n\n                <Col xs={4} md={2} className=\"d-flex\">\n                    <img src=\"/assets/idea.png\" alt=\"Idea\" className=\"d-flex m-auto\"\n                        style={{maxHeight: \"100%\", maxWidth: \"100%\"}} />\n                </Col>\n            </Row>\n\n            <Row className=\"mt-3\">\n                <Col md={4}>\n                    <h3>PID</h3>\n                </Col>\n                <Col md={8}>\n                    <p className=\"h4 text-black\">{projectDetails.id}</p>\n                </Col>\n            </Row>\n\n            <Row className=\"mt-3\">\n                <Col md={4}>\n                    <h3 className=\"text-color-main\">Title</h3>\n                </Col>\n                <Col md={8}>\n                <p className=\"h4 text-black\">{projectDetails.title}</p>\n                </Col>\n            </Row>\n\n            <Row className=\"mt-3\">\n                <Col md={4}>\n                    <h3 className=\"text-color-main\">Status</h3>\n                </Col>\n                <Col md={8}>\n                <h3><ApprovedBadge value={projectDetails.approved} /></h3>\n                </Col>\n            </Row>\n\n            <Row className=\"mt-3\">\n                <Col md={4}>\n                    <h3 className=\"text-color-main\">Added By</h3>\n                </Col>\n                <Col md={8}>\n                    <RenderUser user={projectDetails.addedBy} />\n                </Col>\n            </Row>\n\n            <Row className={`mt-3 ${projectDetails.url ? projectDetails.url : 'd-none' }`}>\n                <Col md={4}>\n                    <h3 className=\"text-color-main\">URL</h3>\n                </Col>\n                <Col md={8}>\n                    <a href={projectDetails.url} target='_blank' rel=\"noreferrer\">\n                        <Button color=\"primary\" className='px-4 rounded-pill'>\n                            Link\n                        </Button>\n                    </a>\n                </Col>\n            </Row>\n\n            <Row className={`mt-3`}>\n                <Col md={4}>\n                    <h3 className=\"text-color-main\">Team Members</h3>\n                </Col>\n                <Col md={8}>\n                <p className=\"h4 text-black\">\n                    {(projectDetails.members && projectDetails.members.length > 0) ?(\n                        projectDetails.members.map((member) => {\n                            return (\n                                <RenderUser user={member} />\n                            );\n                        })\n                    )\n                    :\n                    (\n                        <>None</>\n                    )}\n                </p>\n                </Col>\n            </Row>\n\n            <Row className={`mt-3`}>\n                <Col md={4}>\n                    <h3 className=\"text-color-main\">Mentors</h3>\n                </Col>\n                <Col md={8}>\n                <p className=\"h4 text-black\">\n                    {(projectDetails.mentors && projectDetails.mentors.length > 0) ?(\n                        projectDetails.mentors.map((mentor) => {\n                            return (\n                                <RenderUser user={mentor} />\n                            );\n                        })\n                    )\n                    :\n                    (\n                        <>None</>\n                    )}\n                </p>\n                </Col>\n            </Row>\n\n            <Row className=\"mt-3\">\n                <Col md={4}>\n                    <h3 className=\"text-color-main\">Domain</h3>\n                </Col>\n                <Col md={8}>\n                <p className=\"h4 text-black\">{projectDetails.domain}</p>\n                </Col>\n            </Row>\n\n            <Row className=\"mt-3\">\n                <Col md={4}>\n                    <h3 className=\"text-color-main\">Field</h3>\n                </Col>\n                <Col md={8}>\n                <p className=\"h4 text-black\">{projectDetails.field}</p>\n                </Col>\n            </Row>\n\n            <Row className=\"mt-3\">\n                <Col md={4}>\n                    <h3 className=\"text-color-main\">Description</h3>\n                </Col>\n                <Col md={8}>\n                <p className=\"h4 text-black\">{projectDetails.description}</p>\n                </Col>\n            </Row>\n\n            <Row className=\"mt-3\">\n                <Col md={4}>\n                    <h3 className=\"text-color-main\">Technical</h3>\n                </Col>\n                <Col md={8}>\n                <p className=\"h4 text-black\">{projectDetails.technical ? \"Yes\" : \"No\"}</p>\n                </Col>\n            </Row>\n\n            <Row className=\"mt-3\">\n                <Col md={4}>\n                    <h3 className=\"text-color-main\">Date Created</h3>\n                </Col>\n                <Col md={8}>\n                <p className=\"h4 text-black\">{new Date(projectDetails.dateCreated).toLocaleString('default', {day: \"2-digit\", month: 'short', year: \"numeric\" })}</p>\n                </Col>\n            </Row>\n\n            <Row className=\"mt-3\">\n                <Col md={4}>\n                    <h3 className=\"text-color-main\">Start Date</h3>\n                </Col>\n                <Col md={8}>\n                <p className=\"h4 text-black\">{new Date(projectDetails.startDate).toLocaleString('default', {day: \"2-digit\", month: 'short', year: \"numeric\" })}</p>\n                </Col>\n            </Row>\n\n            <Row className=\"mt-3\">\n                <Col md={4}>\n                    <h3 className=\"text-color-main\">End Date</h3>\n                </Col>\n                <Col md={8}>\n                <p className=\"h4 text-black\">{new Date(projectDetails.endDate).toLocaleString('default', {day: \"2-digit\", month: 'short', year: \"numeric\" })}</p>\n                </Col>\n            </Row>\n\n            <Row className={`${projectDetails.approvedBy ? \"\" : \"d-none\"} mt-3`}>\n                <Col md={4}>\n                    <h3 className=\"text-color-main\">Approved By</h3>\n                </Col>\n                <Col md={8}>\n                    <RenderUser user={projectDetails.approvedBy} />\n                </Col>\n            </Row>\n\n            <Row className={`mt-3`}>\n                <Col md={4}>\n                    <h3 className=\"text-color-main\">Tags</h3>\n                </Col>\n                <Col md={8}>\n                <p className=\"h4 text-black\">\n                    {(projectDetails.tags && projectDetails.tags.length > 0) ?(\n                        projectDetails.tags.map((tag) => {\n                            return (\n                                <Badge color=\"info\" pill className=\"mr-2 mb-2\">{tag.title}</Badge>\n                            );\n                        })\n                    )\n                    :\n                    (\n                        <>None</>\n                    )}\n                </p>\n                </Col>\n            </Row>\n\n            <Row className=\"mt-3\">\n                <Col md={4}>\n                    <h3 className=\"text-color-main\">URL</h3>\n                </Col>\n                <Col md={8}>\n                    {\n                        (projectDetails.url) ?\n                        <a href={projectDetails.url} target='_blank' rel=\"noreferrer\">\n                            <Button>View Proof</Button>\n                        </a>\n                        :\n                        <>\n                        <p className=\"h4 text-black\">Not Available</p>\n                        </>\n                    }\n                </Col>\n            </Row>\n\n            </>\n        )\n        }\n        </Container>\n    );\n}\n\nexport default  withRouter(connect(mapStateToProps)(Project));","import React, { useState } from 'react';\nimport { Table, Button } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from \"react-router\";\nimport { connect } from 'react-redux';\n\nimport { approveProject, rejectProject } from '../../redux/ActionCreators';\nimport { RejectionModal } from '../../components/Extras';\n\nconst mapStateToProps = (state) => ({\n    authorized: state.user.authorized,\n    token: state.user.token,\n    pendingProjects: state.admin.pendingProjects\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    approveProject: (key, projectId, userId) => dispatch(approveProject(key, projectId, userId)),\n    rejectProject: (key, projectId, userId, feedback) => dispatch(rejectProject(key, projectId, userId, feedback))\n});\n\nfunction PendingProjectsTable(props) {\n    const [modalOpen, setModalOpen] = useState(false);\n    const [projectId, setProjectId] = useState(null);\n    const [projectTitle, setProjectTitle] = useState(null);\n\n    if(!props.pendingProjects)\n        return (<></>);\n\n    return (\n        <>\n        <RejectionModal\n            modalOpen={modalOpen}\n            setModalOpen={setModalOpen}\n            id={projectId}\n            title={projectTitle}\n            onReject={(reason) => props.rejectProject(props.token, projectId, null, reason)}\n                />\n        <Table hover responsive className=\"rounded-2\">\n            <thead>\n                <tr>\n                <th className=\"text-color-main h5\">#</th>\n                <th className=\"text-color-main h5\">Title</th>\n                <th className=\"text-color-main h5\">Description</th>\n                <th className=\"text-color-main h5\">Date</th>\n                <th className=\"text-color-main h5\">Details</th>\n                <th className=\"text-color-main h5\">Approve</th>\n                <th className=\"text-color-main h5\">Reject</th>\n                </tr>\n            </thead>\n            <tbody>\n                {\n                    props.pendingProjects.map((project) => {\n                        return (\n                            <tr>\n                            <th scope=\"row\">{project.id}</th>\n                            <td>{project.title}</td>\n                            <td>{project.description}</td>\n                            <td>{new Date(project.dateCreated).toLocaleString('default', {day: \"2-digit\", month: 'short', year: \"numeric\" })}</td>\n                            <td>\n                                <Link to={\"/project/\"+project.id}>\n                                <Button color=\"info\" >View</Button>\n                                </Link>\n                            </td>\n                            <td>\n                                <Button\n                                onClick={() => props.approveProject(props.token, project.id, null)}\n                                color=\"success\"\n                                className=\"w-100\"\n                                disabled={project.approving || project.rejecting || (project.approved === 'approved') || (project.approved === 'rejected')} >\n                                    {\n                                        (project.approved === 'approved') ?\n                                            <i className=\"fa fa-check w-100 text-center\" aria-hidden=\"true\"></i>\n                                        :\n                                        <>Approve</>\n                                    }\n                                </Button>\n                            </td>\n                            <td>\n                                <Button\n                                disabled={project.approving || project.rejecting || (project.approved === 'approved') || (project.approved === 'rejected')}\n                                className=\"w-100\"\n                                onClick={() => {\n                                    setModalOpen(true)\n                                    setProjectId(project.id)\n                                    setProjectTitle(project.title)\n                                }}\n                                color=\"danger\" >\n                                    {\n                                        (project.approved === 'rejected') ?\n                                            <i className=\"fa fa-check w-100 text-center\" aria-hidden=\"true\"></i>\n                                        :\n                                        <>Reject</>\n                                    }\n                                </Button>\n                            </td>\n                            </tr>\n                        )\n                    })\n                }\n            </tbody>\n        </Table>\n        </>\n    );\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(PendingProjectsTable));","import React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { Redirect, withRouter } from 'react-router';\nimport Loading from '../../components/Loading';\nimport PendingProjectsTable from './PendingProjectsTable';\nimport { fetchPendingProjects } from '../../redux/ActionCreators';\nimport NotFound from '../../components/NotFound';\n\nconst mapStateToProps = (state) => ({\n    authorized: state.user.authorized,\n    token: state.user.token,\n\n    pendingProjects: state.admin.pendingProjects,\n    pendingProjectsLoading: state.admin.pendingProjectsLoading,\n    pendingProjectsLoadingError: state.admin.pendingProjectsLoadingError,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    fetchPendingProjects: (key) => dispatch(fetchPendingProjects(key))\n})\n\nfunction PendingProjects(props) {\n    if(!props.authorized)\n        return (\n            <Redirect to=\"/login\" />\n        );\n\n    if(!props.pendingProjectsLoading && !props.pendingProjects && !props.pendingProjectsLoadingError) {\n        props.fetchPendingProjects(props.token);\n    }\n\n    return (\n        <Container className=\"p-3 p-md-4 p-lg-5 mt-4 mb-4 bg-color-lightest-grey rounded-3\">\n            {\n                (props.pendingProjectsLoading) ?\n                (\n                    <Loading />\n                )\n                :\n                (props.pendingProjectsLoadingError) ?\n                (\n                    <NotFound message={props.pendingProjectsLoadingError} />\n                )\n                :\n                (\n                    <>\n                    <Row className=\"mb-5\">\n                        <Col xs={12}>\n                            <h2 className=\"font-weight-bold text-center\">Pending Projects</h2>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col xs={12}>\n                        <PendingProjectsTable />\n                        </Col>\n                    </Row>\n                    </>\n                )\n            }\n        </Container>\n    )\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(PendingProjects));","import React, { useState } from 'react';\nimport { Table, Button } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from \"react-router\";\nimport { connect } from 'react-redux';\n\nimport { approveAchievement, rejectAchievement } from '../../redux/ActionCreators';\nimport { RejectionModal } from '../../components/Extras';\n\nconst mapStateToProps = (state) => ({\n    authorized: state.user.authorized,\n    token: state.user.token,\n    pendingAchievements: state.admin.pendingAchievements\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    approveAchievement: (key, achievementId, userId) => dispatch(approveAchievement(key, achievementId, userId)),\n    rejectAchievement: (key, achievementId, userId, feedback) => dispatch(rejectAchievement(key, achievementId, userId, feedback))\n});\n\nfunction PendingAchievementsTable(props) {\n    const [modalOpen, setModalOpen] = useState(false);\n    const [achievementId, setAchievementId] = useState(null);\n    const [achievementTitle, setAchievementTitle] = useState(null);\n\n    if(!props.pendingAchievements)\n        return (<></>);\n    return (\n        <>\n        <RejectionModal\n            modalOpen={modalOpen}\n            setModalOpen={setModalOpen}\n            id={achievementId}\n            title={achievementTitle}\n            onReject={(reason) => props.rejectAchievement(props.token, achievementId, null, reason)}\n                />\n        <Table hover responsive className=\"rounded-2\">\n            <thead>\n                <tr>\n                <th className=\"text-color-main h5\">#</th>\n                <th className=\"text-color-main h5\">Title</th>\n                <th className=\"text-color-main h5\">Description</th>\n                <th className=\"text-color-main h5\">Date</th>\n                <th className=\"text-color-main h5\">Details</th>\n                <th className=\"text-color-main h5\">Approve</th>\n                <th className=\"text-color-main h5\">Reject</th>\n                </tr>\n            </thead>\n            <tbody>\n                {\n                    props.pendingAchievements.map((achievement) => {\n                        return (\n                            <tr>\n                            <th scope=\"row\">{achievement.id}</th>\n                            <td>{achievement.title}</td>\n                            <td>{achievement.description}</td>\n                            <td>{new Date(achievement.achievedDate).toLocaleString('default', {day: \"2-digit\", month: 'short', year: \"numeric\" })}</td>\n                            <td>\n                            <Link to={\"/achievement/\"+achievement.id}>\n                                <Button color=\"info\" >View</Button>\n                                </Link>\n                            </td>\n                            <td>\n                                <Button\n                                onClick={() => props.approveAchievement(props.token, achievement.id, null)}\n                                color=\"success\"\n                                className=\"w-100\"\n                                disabled={achievement.approving || achievement.rejecting || (achievement.approved === 'approved') || (achievement.approved === 'rejected')} >\n                                    {\n                                        (achievement.approved === 'approved') ?\n                                            <i className=\"fa fa-check w-100 text-center\" aria-hidden=\"true\"></i>\n                                        :\n                                        <>Approve</>\n                                    }\n                                </Button>\n                            </td>\n                            <td>\n                                <Button\n                                disabled={achievement.approving || achievement.rejecting || (achievement.approved === 'approved') || (achievement.approved === 'rejected')}\n                                className=\"w-100\"\n                                onClick={() => {\n                                    setModalOpen(true)\n                                    setAchievementId(achievement.id)\n                                    setAchievementTitle(achievement.title)\n                                }}\n                                color=\"danger\" >\n                                    {\n                                        (achievement.approved === 'rejected') ?\n                                            <i className=\"fa fa-check w-100 text-center\" aria-hidden=\"true\"></i>\n                                        :\n                                        <>Reject</>\n                                    }\n                                </Button>\n                            </td>\n                            </tr>\n                        )\n                    })\n                }\n            </tbody>\n        </Table>\n        </>\n    );\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(PendingAchievementsTable));","import React, { useEffect } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { Redirect, withRouter } from 'react-router';\nimport Loading from '../../components/Loading';\nimport PendingAchievementsTable from './PendingAchievementsTable.jsx';\nimport { fetchPendingAchievements } from '../../redux/ActionCreators';\nimport NotFound from '../../components/NotFound'\n\nconst mapStateToProps = (state) => ({\n    authorized: state.user.authorized,\n    token: state.user.token,\n\n    pendingAchievements: state.admin.pendingAchievements,\n    pendingAchievementsLoading: state.admin.pendingAchievementsLoading,\n    pendingAchievementsLoadingError: state.admin.pendingAchievementsLoadingError,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    fetchPendingAchievements: (key) => dispatch(fetchPendingAchievements(key))\n})\n\nfunction PendingAchievements(props) {\n    useEffect(() => {\n        console.log(props)\n        if(!props.pendingAchievementsLoading && !props.pendingAchievements && !props.pendingAchievementsLoadingError) {\n            props.fetchPendingAchievements(props.token);\n        }\n    }, [props])\n\n    if(!props.authorized)\n        return (\n            <Redirect to=\"/login\" />\n        );\n\n    return (\n        <Container className=\"p-3 p-md-4 p-lg-5 mt-4 mb-4 bg-color-lightest-grey rounded-3\">\n            {\n                (props.pendingAchievementsLoading) ? \n                (\n                    <Loading />\n                )\n                :\n                (props.pendingAchievementsLoadingError) ? \n                (\n                    <NotFound message={props.pendingAchievementsLoadingError} />\n                )\n                :\n                (\n                    <>\n                    <Row className=\"mb-5\">\n                        <Col xs={12}>\n                            <h2 className=\"font-weight-bold text-center\">Pending Achievements</h2>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col xs={12}>\n                        <PendingAchievementsTable />\n                        </Col>\n                    </Row>\n                    </>\n                )\n            }\n        </Container>\n    )\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(PendingAchievements));","import React, {useState} from 'react'\nimport { Col, Container, Row, Button, Table } from 'reactstrap';\nimport { Redirect, withRouter } from \"react-router\";\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport SearchBar from '../../components/Search'\nimport Loading from '../../components/Loading';\nimport NotFound from '../../components/NotFound'\nimport { baseUrl } from '../../shared/baseUrl';\nimport { useEffect } from 'react';\n\nconst mapStateToProps = (state) => ({\n    authorized: state.user.authorized,\n    token: state.user.token,\n})\n\nfunction fetchAchievements(key, query, setAchievements, setLoading, setErrorMessage) {\n    let token_head = 'Token '+key;\n\n    fetch(baseUrl+'main/api/search?q='+query, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': token_head\n        }\n    })\n    .then((response) => {\n        if(!response.ok)\n            throw new Error('Unexpected error occurred!')\n        console.log(response.error)\n        return response\n    })\n    .then(response => response.json())\n    .then(response => {\n        console.log(response)\n        setAchievements(response.achievements.filter(achievement => achievement.approved === 'approved'))\n        setLoading(false)\n        return response\n    })\n    .catch(error => {\n        setLoading(false)\n        setErrorMessage(error.message)\n        console.log(error)\n    })\n}\n\nfunction Results( {achievements} ) {\n    return (\n        <Table hover responsive className=\"rounded-2\">\n            <thead>\n                <th className=\"text-color-main h5\">#</th>\n                <th className=\"text-color-main h5\">Title</th>\n                <th className=\"text-color-main h5\">Description</th>\n                <th className=\"text-color-main h5\">Added By</th>\n                <th className=\"text-color-main h5\">Date Created</th>\n                <th className=\"text-color-main h5\">Details</th>\n            </thead>\n            <tbody>\n                {\n                    (achievements) ?\n                    achievements.map((achievement) => {\n                        return (\n                            <tr>\n                            <th scope=\"row\">{achievement.id}</th>\n                            <td>{achievement.title}</td>\n                            <td>{achievement.description}</td>\n                            <td>{(achievement.addedBy) ? achievement.addedBy.first_name: ''}</td>\n                            <td>{new Date(achievement.dateCreated).toLocaleString('default', {day: \"2-digit\", month: 'short', year: \"numeric\" })}</td>\n                            <td>\n                                <Link to={\"/achievement/\"+achievement.id}>\n                                    <Button color=\"info\">\n                                        View\n                                    </Button>\n                                </Link>\n                            </td>\n                            </tr>\n                        )\n                    })\n                    :\n                    <></>\n                }\n            </tbody>\n        </Table>\n    );\n}\n\nfunction Achievements(props) {\n    const [loading, setLoading] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n    const [achievements, setAchievements] = useState(false);\n    const [query, setQuery] = useState('');\n\n    useEffect(() => {\n        setLoading(true);\n        fetchAchievements(props.token, '', setAchievements, setLoading, setErrorMessage);\n    }, [props.token])\n\n    if(!props.authorized)\n        return (<Redirect to='/login' />);\n\n    if(errorMessage)\n        return ( <NotFound message={errorMessage} /> );\n\n    return (\n        <Container className=\"p-3 p-md-4 mt-4 mb-4 bg-color-lightest-grey rounded-3\">\n            <Row>\n                <Col md={{size: 8, offset: 2}}>\n                    <SearchBar query={query} setQuery={setQuery} onSearch={ () => {\n                        setLoading(true)\n                        fetchAchievements(props.token, query, setAchievements, setLoading, setErrorMessage);\n                    }} />\n                </Col>\n            </Row>\n            {/* <Row className=\"mt-4 bg-color-off-white rounded-2 p-2\">\n                <Col xs=\"auto\">\n                    <h3 className=\"text-color-main font-weight-bold mb-0 mr-4 d-inline\">Filters</h3>\n                </Col>\n                <Col xs=\"auto\">\n\n                </Col>\n            </Row> */}\n            <Row className=\"mt-4\">\n                {\n                    (loading) ?\n                        <Loading />\n                    :\n                        <Results achievements={achievements}/>\n                }\n            </Row>\n        </Container>\n    )\n}\n\nexport default withRouter(connect(mapStateToProps)(Achievements));","import React from 'react'\nimport {Container, Row, Col} from 'reactstrap'\n\nfunction About() {\n    return (\n        <Container className=\"mt-4 mb-4 bg-color-lightest-grey rounded-3\">\n            <Row className=\"p-3 p-md-4 \">\n                <Col xs=\"12 text-center\">\n                    <h2 className=\"font-weight-bold\">About IIITD</h2>\n                </Col>\n            </Row>\n            <Row>\n                <Col className=\"px-0\">\n                    <img src=\"/assets/About/administration-bg.jpg\"\n                        className=\"w-100\"\n                        alt=\"IIIT Delhi New Academic Building\" />\n                </Col>\n            </Row>\n            <Row className=\"p-3 p-md-4 p-lg-5\">\n                <Col className=\"xs-12 text-justify\">\n                    <p>\n                        Indraprastha Institute of Information Technology Delhi (IIIT-Delhi) was created by an act of Delhi legislature empowering it to carry out R and D, conduct educational programs, and grant degrees. The General Council is the apex body of the Institute, chaired by Hon'ble Lt. Governor of Delhi and the Board of Governors is the policy and decision-making body of the Institute. The Senate is empowered to take all academic decisions.\n                    </p>\n                    <p>\n                        This is the achievement portal of IIIT Delhi. Submit your achievements / projects here, and build your profile. The admins will approve your achievements / projects.\n                    </p>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default About;","import React, { useState, useEffect } from 'react'\nimport { Col, Row } from 'reactstrap'\nimport { RenderEducation } from '../../components/Extras'\nimport Loading from '../../components/Loading'\nimport { Field } from '../../components/ProfileComponents'\nimport { baseUrl } from '../../shared/baseUrl'\n\nfunction StudentProfile({ token, studentId, institutesList }) {\n    const [studObj, setStudObj] = useState({})\n    const [loading, setLoading] = useState(false)\n    const [errorMsg, setErrorMsg] = useState('')\n\n    useEffect(() => {\n        setLoading(true)\n        fetch(baseUrl + 'main/api/student/' + studentId + '/', {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Token ' + token\n            }\n        })\n        .then(response => {\n            if(!response.ok)\n                throw new Error('Error while fetching student data!')\n            return response.json()\n        })\n        .then(response => {\n            setStudObj(response)\n            setLoading(false)\n        })\n        .catch(err => {\n            console.log(err);\n            setErrorMsg(err.message)\n            setLoading(false)\n        })\n    }, [token, studentId])\n\n    return (\n        <>\n        <Row className=\"p-3 p-md-4 \">\n            <Col className=\"xs-12 text-center\">\n                <h2 className=\"font-weight-bold\">Student Details</h2>\n            </Col>\n        </Row>\n        <Row>\n            <Col>\n            {\n                (loading) ?\n                <Loading />\n                :\n                (errorMsg) ?\n                <p xs={12} className='text-danger'>{errorMsg}</p>\n                :\n                <>\n                    <Field title={\"Roll Number\"} value={studObj.rollNo} />\n                    <Field title={\"Batch\"} value={studObj.batch} />\n                    <Field title={\"Major\"} value={studObj.major} />\n                    <Field title={\"CGPA\"} value={studObj.GPA} />\n                    {/* <Field title={\"Bio\"} value={studObj.bio} /> */}\n                    <Row className=\"mt-3 mb-3\">\n                        <Col md=\"4\">\n                            <h3 className=\"font-weight-bold\">Education</h3>\n                        </Col>\n                        <Col md=\"8\">\n                        {\n                            (studObj && studObj.education) ?\n                            studObj.education.map((education) => (\n                                <RenderEducation\n                                    institution={(institutesList) ?\n                                        (institutesList.find((ins) => ins.id === education.institution)).title : ''}\n                                    degree={education.degree}\n                                    year={education.year}\n                                />\n                            ))\n                            :\n                            <></>\n                        }\n                        </Col>\n                    </Row>\n                </>\n            }\n            </Col>\n        </Row>\n        </>\n    );\n}\n\nexport default StudentProfile;","import React, { useState, useEffect } from 'react'\nimport { Col, Row } from 'reactstrap'\nimport { RenderEducation } from '../../components/Extras'\nimport Loading from '../../components/Loading'\nimport { Field } from '../../components/ProfileComponents'\nimport { baseUrl } from '../../shared/baseUrl'\n\nfunction StaffProfile({ token, staffId, institutesList, setTitle }) {\n    const [staffObj, setStaffObj] = useState({})\n    const [loading, setLoading] = useState(false)\n    const [errorMsg, setErrorMsg] = useState('')\n\n    useEffect(() => {\n        setLoading(true)\n        fetch(baseUrl + 'main/api/staff/' + staffId + '/', {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Token ' + token\n            }\n        })\n        .then(response => {\n            if(!response.ok)\n                throw new Error('Error while fetching staff data!')\n            return response.json()\n        })\n        .then(response => {\n            setStaffObj(response)\n            setTitle(response.title)\n            setLoading(false)\n        })\n        .catch(err => {\n            console.log(err);\n            setErrorMsg(err.message)\n            setLoading(false)\n        })\n    }, [token, staffId, setTitle])\n\n    return (\n        <>\n        <Row className=\"p-3 p-md-4 \">\n            <Col className=\"xs-12 text-center\">\n                <h2 className=\"font-weight-bold\">Staff Details</h2>\n            </Col>\n        </Row>\n        <Row>\n            <Col>\n            {\n                (loading) ?\n                <Loading />\n                :\n                (errorMsg) ?\n                <p xs={12} className='text-danger'>{errorMsg}</p>\n                :\n                <>\n                    <Field title={\"Employee Id.\"} value={staffObj.employeeId} />\n                    <Field title={\"Date of joining\"} value={staffObj.associatedSince} />\n                    <Field title={\"Deapartment\"} value={staffObj.department} />\n                    <Field title={\"Designation\"} value={staffObj.designation} />\n                    <Row className=\"mt-3 mb-3\">\n                        <Col md=\"4\">\n                            <h3 className=\"font-weight-bold\">Education</h3>\n                        </Col>\n                        <Col md=\"8\">\n                        {\n                            (staffObj && staffObj.education) ?\n                            staffObj.education.map((education) => (\n                                <RenderEducation\n                                    institution={(institutesList) ?\n                                        (institutesList.find((ins) => ins.id === education.institution)).title : ''}\n                                    degree={education.degree}\n                                    year={education.year}\n                                />\n                            ))\n                            :\n                            <></>\n                        }\n                        </Col>\n                    </Row>\n                </>\n            }\n            </Col>\n        </Row>\n        </>\n    );\n}\n\nexport default StaffProfile;","import React, { useCallback, useState } from \"react\";\nimport { PieChart, Pie, Cell, Sector } from \"recharts\";\n\nvar data = [\n    { name: \"Group A\", value: 400 },\n    { name: \"Group B\", value: 300 },\n    { name: \"Group C\", value: 300 },\n    { name: \"Group D\", value: 200 }\n];\n\nvar COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\n\nconst renderActiveShape = (props) => {\n    const RADIAN = Math.PI / 180;\n    const {\n        cx,\n        cy,\n        midAngle,\n        innerRadius,\n        outerRadius,\n        startAngle,\n        endAngle,\n        fill,\n        payload,\n        // percent,\n        value\n    } = props;\n    const sin = Math.sin(-RADIAN * midAngle);\n    const cos = Math.cos(-RADIAN * midAngle);\n    const sx = cx + (outerRadius + 10) * cos;\n    const sy = cy + (outerRadius + 10) * sin;\n    const mx = cx + (outerRadius + 30) * cos;\n    const my = cy + (outerRadius + 30) * sin;\n    const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n    const ey = my;\n    const textAnchor = cos >= 0 ? \"start\" : \"end\";\n\n    return (\n        <g>\n            <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>\n                {payload.name}\n            </text>\n            <Sector\n                cx={cx}\n                cy={cy}\n                innerRadius={innerRadius}\n                outerRadius={outerRadius}\n                startAngle={startAngle}\n                endAngle={endAngle}\n                fill={fill}\n            />\n            <Sector\n                cx={cx}\n                cy={cy}\n                startAngle={startAngle}\n                endAngle={endAngle}\n                innerRadius={outerRadius + 6}\n                outerRadius={outerRadius + 10}\n                fill={fill}\n            />\n            <path\n                d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`}\n                stroke={fill}\n                fill=\"none\"\n            />\n            <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n            <text\n                x={ex + (cos >= 0 ? 1 : -1) * 12}\n                y={ey}\n                textAnchor={textAnchor}\n                fill=\"#333\"\n            >{`${value}`}</text>\n            {/* <text\n                x={ex + (cos >= 0 ? 1 : -1) * 12}\n                y={ey}\n                dy={18}\n                textAnchor={textAnchor}\n                fill=\"#999\"\n            >\n                {`(Rate ${(percent * 100).toFixed(2)}%)`}\n            </text> */}\n        </g>\n    );\n};\n\nfunction ProfilePieChart(props) {\n    const [activeIndex, setActiveIndex] = useState(0);\n    const onPieEnter = useCallback(\n        (_, index) => {\n            setActiveIndex(index);\n        },\n        [setActiveIndex]\n    );\n\n    const [width, setWidth] = useState(50);\n    const div = useCallback(node => {\n        if (node !== null) {\n            setWidth(node.getBoundingClientRect().width);\n            console.log('widthhhhhh', node.getBoundingClientRect().width)\n        }\n    }, []);\n\n    const height_ = width\n    const width_ = width\n\n    if(props.data)\n        data = props.data\n    if (props.colors)\n        COLORS = props.colors\n\n    return (\n        <div ref={div} className=\"w-100\">\n        <PieChart width={width_} height={height_} className=\"d-flex m-auto\">\n            <Pie\n                activeIndex={activeIndex}\n                activeShape={renderActiveShape}\n                data={data}\n                cx={width_ / 2}\n                cy={height_ / 2}\n                innerRadius={0.22 * height_}\n                outerRadius={0.28 * height_}\n                dataKey=\"value\"\n                onMouseEnter={onPieEnter}\n            >\n                {data.map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                ))}\n            </Pie>\n        </PieChart>\n        </div>\n    );\n}\n\nexport default ProfilePieChart;","import React, { useState, useEffect } from 'react'\nimport { Redirect, withRouter, useParams } from 'react-router'\nimport { Container, Row, Col } from 'reactstrap';\nimport { connect } from 'react-redux';\n// import Loading from '../../components/Loading';\nimport { SocialMedia, Field, AchievementsTable, ProjectsTable } from '../../components/ProfileComponents'\nimport { baseUrl, baseUrl_ } from '../../shared/baseUrl';\nimport Loading from '../../components/Loading';\nimport NotFound from '../../components/NotFound';\nimport StudentProfile from './StudentProfile';\nimport { fetchInstitutesList } from '../../redux/ActionCreators';\nimport StaffProfile from './StaffProfile';\nimport { listOfTitles } from '../../components/Extras';\nimport ProfilePieChart from './ProfilePieChart';\n\nconst mapStateToProps = (state) => ({\n    authorized: state.user.authorized,\n    token: state.user.token,\n    institutesList: state.forms.institutesList,\n    institutesLoading: state.forms.institutesLoading,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    fetchInstitutesList: (key) => dispatch(fetchInstitutesList(key)),\n})\n\nfunction fetchProfile(key, profileId, setProfile, setLoading, setErrorMessage) {\n    let token_head = 'Token '+key;\n    console.log(token_head)\n    fetch(baseUrl+'auth/api/profile/'+profileId, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': token_head\n        }\n    })\n    .then((response) => {\n        if(!response.ok)\n            throw new Error('Profile not found!')\n        console.log(response.error)\n        return response\n    })\n    .then(response => response.json())\n    .then(response => {\n        console.log(response)\n        setProfile(response)\n        setLoading(false)\n        return response\n    })\n    .catch(error => {\n        setLoading(false)\n        setErrorMessage(error.message)\n        console.log(error)\n    })\n}\n\nfunction Profile(props) {\n    const [loading, setLoading] = useState(false);\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const [profile, setProfile] = useState(null);\n\n    // Use this title for staff title\n    const [title, setTitle] = useState('')\n\n    const {profileId} = useParams();\n\n    useEffect(() => {\n        setLoading(true);\n        fetchProfile(props.token, profileId, setProfile, setLoading, setErrorMessage);\n    }, [profileId, props.token])\n\n    useEffect(() => {\n        if(!props.institutesList && !props.institutesLoading) {\n            props.fetchInstitutesList(props.token)\n        }\n    }, [props])\n\n    const countItems = (list, approvedValue) => {\n        if(!list)\n            return 0\n        return list.filter((item) => item['approved'].toLowerCase() === approvedValue.toLowerCase()).length\n    }\n\n    if(!props.authorized)\n        return (\n            <Redirect to=\"/login\" />\n        );\n\n    if(errorMessage)\n        return (\n            <NotFound message={errorMessage} />\n        );\n\n\n    if(loading || !profile)\n        return (\n            <Loading />\n        )\n\n    // let skill_str = \"\"\n    // for(let i=0; profile && i<profile.skills.length; ++i) {\n    //     skill_str += profile.skills[i]\n    //     if(i !== profile.skills.length-1)\n    //         skill_str += ', '\n    // }\n    return (\n        <Container className=\"p-4 p-md-5 mt-4 mb-4 bg-color-lightest-grey rounded-3\">\n            <Row className=\"p-3 p-md-4 \">\n                <Col className=\"xs-12 text-center\">\n                    <h2 className=\"font-weight-bold\">User Profile</h2>\n                </Col>\n            </Row>\n            <Row>\n                <Col md=\"4\">\n                    <img src={(profile.profile_pic && profile.profile_pic !== '.') ? baseUrl_ + profile.profile_pic : \"/assets/Profile/dp.png\"} alt=\"profile\" className=\"rounded-circle w-100 p-3\"/>\n                </Col>\n                <Col md=\"8\">\n                    <Field title=\"Name\" value={(title ? (listOfTitles.find((t) => t.id === title)).title + ' ' : '') + profile.name} />\n                    <Field title=\"Role\" value={[\n                        \"Student\",\n                        \"Staff\",\n                        \"Admin\"\n                    ][profile.designation-1]} />\n                    <Field title=\"Date of Birth\" value={new Date(profile.dob).toLocaleString('default', {day: \"2-digit\", month: 'short', year: \"numeric\" })} />\n                    <Field title=\"Gender\" value={\n                        [\n                            \"Female\", \"Male\", \"Other\"\n                        ]\n                        [profile.gender-1]} />\n                    <SocialMedia\n                        instagram={profile.instagram}\n                        facebook={profile.facebook}\n                        twitter={profile.twitter}\n                        github={profile.github}\n                    />\n                </Col>\n            </Row>\n            {\n                (profile.show_email) ?\n                <Field title=\"Email\" value={profile.email} />\n                :\n                <></>\n            }\n            {\n                (profile.show_phone) ?\n                <Field title=\"Phone\" value={profile.phone_number} />\n                :\n                <></>\n            }\n            {/* <Field title=\"Group\" value={profile.group} /> */}\n            {/* <Field title=\"Skills\" value={skill_str} /> */}\n            <Field title=\"Bio\" value={profile.address}></Field>\n            {\n                (profile.designation !== 3) ?\n                <StudentProfile token={props.token} studentId={profile.user} institutesList={props.institutesList} />\n                :\n                <StaffProfile token={props.token} staffId={profile.user} institutesList={props.institutesList} setTitle={setTitle} />\n            }\n            <Field title=\"Achievements\" value=\"\" />\n            <AchievementsTable achievements={profile.achievements} />\n            <Field title=\"Projects\" value=\"\" />\n            <ProjectsTable projects={profile.projects} />\n            <Row>\n            <Col className={`${profile.projects && profile.projects.length > 0 ? 'd-flex' : 'd-none'}`} lg={6}>\n                <ProfilePieChart\n                data={[\n                    { name: \"Approved Projects\", value: countItems(profile.projects, 'approved') },\n                    { name: \"Pending Projects\", value: countItems(profile.projects, 'pending') },\n                    { name: \"Rejected Projects\", value: countItems(profile.projects, 'rejected') },\n                ]}\n                colors={[\n                    '#28a745', '#ffc107', '#dc3545'\n                ]} />\n            </Col>\n            <Col className={`${profile.achievements && profile.achievements.length > 0 ? 'd-flex' : 'd-none'}`} lg={6}>\n                <ProfilePieChart\n                data={[\n                    { name: \"Approved Achievements\", value: countItems(profile.achievements, 'approved') },\n                    { name: \"Pending Achievements\", value: countItems(profile.achievements, 'pending') },\n                    { name: \"Rejected Achievements\", value: countItems(profile.achievements, 'rejected') },\n                ]}\n                colors={[\n                    '#28a745', '#ffc107', '#dc3545'\n                ]} />\n            </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Profile));","import React, {useState, useEffect} from 'react';\nimport { Redirect, useParams, withRouter } from \"react-router\";\nimport { connect } from 'react-redux';\nimport { fetchProject } from '../../redux/ActionCreators';\nimport Loading from '../../components/Loading';\nimport NotFound from '../../components/NotFound';\nimport AddProject from '../AddProject';\n\nconst mapStateToProps = (state) => ({\n    authorized: state.user.authorized,\n    token: state.user.token,\n})\n\nfunction EditProject(props) {\n    const [loading, setLoading] = useState(false);\n    const [errorMessage, setErrorMessage] = useState(false);\n    const [projectDetails, setProjectDetails] = useState(false);\n    const {projectId} = useParams();\n    useEffect(() => {\n        if(!loading && !errorMessage && !projectDetails) {\n            setLoading(true);\n            fetchProject(props.token, projectId, setProjectDetails, setLoading, setErrorMessage);\n        }\n    }, [loading, errorMessage, projectDetails, projectId, props.token])\n\n    if(errorMessage)\n        return (\n            <NotFound />\n        );\n    return (\n        <>\n            {\n            (!props.authorized) ?\n            (\n                <Redirect to=\"/login\" />\n            ) :\n            (loading) ?\n            (\n                <Loading />\n            ) :\n                <AddProject edit={true} projectDetails={projectDetails} />\n            }\n        </>\n    );\n}\n\nexport default withRouter(connect(mapStateToProps)(EditProject));","import React, {useState, useEffect} from 'react';\nimport { Redirect, useParams, withRouter } from \"react-router\";\nimport { connect } from 'react-redux';\nimport { fetchAchievement } from '../../redux/ActionCreators';\nimport Loading from '../../components/Loading';\nimport NotFound from '../../components/NotFound';\nimport AddAchievement from '../AddAchievement';\n\nconst mapStateToProps = (state) => ({\n    authorized: state.user.authorized,\n    token: state.user.token,\n})\n\nfunction EditAchievement(props) {\n    const [loading, setLoading] = useState(false);\n    const [errorMessage, setErrorMessage] = useState(false);\n    const [achievementDetails, setAchievementDetails] = useState(false);\n    const {achievementId} = useParams();\n    useEffect(() => {\n        if(!loading && !errorMessage && !achievementDetails) {\n            setLoading(true);\n            fetchAchievement(props.token, achievementId, setAchievementDetails, setLoading, setErrorMessage);\n        }\n    }, [loading, errorMessage, achievementDetails, achievementId, props.token])\n\n    if(errorMessage)\n        return (\n            <NotFound />\n        );\n    return (\n        <>\n            {\n            (!props.authorized) ?\n            (\n                <Redirect to=\"/login\" />\n            ) :\n            (loading) ?\n            (\n                <Loading />\n            ) :\n                <AddAchievement edit={true} achievementDetails={achievementDetails} />\n            }\n        </>\n    );\n}\n\nexport default withRouter(connect(mapStateToProps)(EditAchievement));","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nimport Navigation from './components/Navigation';\nimport Footer from './components/Footer';\nimport Home from './pages/Home'\nimport Profile from './pages/Profile'\nimport Projects from './pages/Projects';\n\nimport './App.scss';\nimport Login from './pages/Authenticate/Login';\nimport SignUp from './pages/Authenticate/SignUp';\nimport AddAchievement from './pages/AddAchievement';\nimport AddProject from './pages/AddProject';\nimport MyAchievements from './pages/MyAchievements';\nimport MyProjects from './pages/MyProjects';\nimport Achievement from './pages/Achievement';\nimport Project from './pages/Project';\nimport PendingProjects from './pages/PendingProjects';\nimport PendingAchievements from './pages/PendingAchievements';\nimport Achievements from './pages/Achievements';\nimport About from './pages/About';\nimport UserProfile from './pages/UserProfile';\nimport EditProject from './pages/EditProject';\nimport EditAchievement from './pages/EditAchievement';\n\nconst store = ConfigureStore();\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <BrowserRouter basename=\"/\">\n        <div className=\"App pl-2 pr-2\" style={{minHeight: '95vh'}}>\n          <Navigation />\n\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/about\" exact component={About} />\n            <Route path=\"/profile\" exact component={Profile} />\n            <Route path=\"/profile/:profileId\" component={UserProfile} />\n            <Route path=\"/projects\" component={Projects}></Route>\n            <Route path=\"/achievements\" component={Achievements}></Route>\n            <Route path=\"/login\" component={Login}></Route>\n            <Route path=\"/signup\" component={SignUp}></Route>\n            <Route path=\"/addachievement\" component={AddAchievement}></Route>\n            <Route path=\"/addproject\" component={AddProject}></Route>\n            <Route path=\"/myachievements\" component={MyAchievements}></Route>\n            <Route path=\"/myprojects\" component={MyProjects}></Route>\n            <Route path=\"/achievement/:achievementId\" component={Achievement}></Route>\n            <Route path=\"/project/:projectId\" component={Project}></Route>\n            <Route path=\"/editproject/:projectId\" component={EditProject}></Route>\n            <Route path=\"/editachievement/:achievementId\" component={EditAchievement}></Route>\n            <Route path=\"/pending-projects\" component={PendingProjects}></Route>\n            <Route path=\"/pending-achievements\" component={PendingAchievements}></Route>\n          </Switch>\n\n        </div>\n\n        <Footer />\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { combineReducers, createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { Blogs } from './blogs';\nimport { Pending } from './pending';\nimport { Updates } from './updates';\nimport { User } from './user';\nimport { Forms } from './forms';\nimport { Admin } from './admin';\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n        combineReducers({\n            blogs: Blogs,\n            updates: Updates,\n            pending: Pending,\n            user: User,\n            forms: Forms,\n            admin: Admin\n        }),\n        applyMiddleware(thunk, logger)\n    );\n\n    return store;\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}